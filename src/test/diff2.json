{
  "meta_a": {
    "name": "public/heu_assets/component/alarm-remind-list/alarm-remind-list.component.js",
    "content_type": "text/javascript",
    "lines": 305,
    "web_links": [
      {
        "name": "gitweb",
        "url": "/gitweb?p\u003dphp_web_api_v0.git;hb\u003d544a54d74a51cd5e746b96b0b0171a5c11a36946;f\u003dpublic%2Fheu_assets%2Fcomponent%2Falarm-remind-list%2Falarm-remind-list.component.js"
      }
    ]
  },
  "meta_b": {
    "name": "public/heu_assets/component/alarm-remind-list/alarm-remind-list.component.js",
    "content_type": "text/javascript",
    "lines": 305,
    "web_links": [
      {
        "name": "gitweb",
        "url": "/gitweb?p\u003dphp_web_api_v0.git;hb\u003drefs%2Fchanges%2F08%2F1208%2F1;f\u003dpublic%2Fheu_assets%2Fcomponent%2Falarm-remind-list%2Falarm-remind-list.component.js"
      }
    ]
  },
  "intraline_status": "OK",
  "change_type": "MODIFIED",
  "diff_header": [
    "diff --git a/public/heu_assets/component/alarm-remind-list/alarm-remind-list.component.js b/public/heu_assets/component/alarm-remind-list/alarm-remind-list.component.js",
    "index 490d0e2..9bded19 100644",
    "--- a/public/heu_assets/component/alarm-remind-list/alarm-remind-list.component.js",
    "+++ b/public/heu_assets/component/alarm-remind-list/alarm-remind-list.component.js"
  ],
  "content": [
    {
      "ab": [
        "/**",
        " * Created by mfy-PC on 2016/12/10.",
        " */",
        "\u0027use strict\u0027;",
        "",
        "angular.module(\u0027app\u0027).component(\u0027alarmRemindList\u0027, {",
        "    templateUrl: \u0027/heu_assets/component/alarm-remind-list/alarm-remind-list.template.html\u0027,",
        "    controller: [\u0027Nav\u0027, \u0027$http\u0027, \u0027ngTableParams\u0027, \u0027expire\u0027, \u0027stomp\u0027, \u0027$timeout\u0027, \u0027$scope\u0027, \u0027$rootScope\u0027, \u0027alarmResolver\u0027, \u0027api\u0027, \u0027util\u0027,",
        "        function alarmRemindController(Nav, $http, ngTableParams, expire, stomp, $timeout, $scope, $rootScope, alarmResolver, api, util) {",
        "            var ctrl \u003d this;",
        "            $scope.languageOption \u003d $rootScope.languageOption;",
        "            $scope.languageDict \u003d $rootScope.languageDict;",
        "            ctrl.active \u003d 0;",
        "            ctrl.showAlarmView \u003d false;",
        "            ctrl.alarmData \u003d [];",
        "            ctrl.ExpireData \u003d [];",
        "            ctrl.alarmSCount \u003d 0;",
        "            ctrl.alarmLCount \u003d 0;",
        "            ctrl.alarmTCount \u003d 0;",
        "            ctrl.alarmSlight \u003d 0;",
        "            var alarmLevel;",
        "            let module_name \u003d \"alarm_remind_list_component\";",
        "",
        "            /*",
        "            * 报警等级显示",
        "            * */",
        "            aLevel();",
        "",
        "            function aLevel() {",
        "                api.queryGetAlarmLevel().then(function (data) {",
        "                    alarmLevel \u003d data.info;",
        "                    ctrl.alarmLevel \u003d ["
      ]
    },
    {
      "a": [
        "                        {name: \u0027alarmOne\u0027, show: false},",
        "                        {name: \u0027alarmTwo\u0027, show: false},",
        "                        {name: \u0027alarmThree\u0027, show: false},"
      ],
      "b": [
        "                        {name: \u0027alarmOne\u0027, show: false}, //一般报警",
        "                        {name: \u0027alarmTwo\u0027, show: false}, // 严重报警",
        "                        {name: \u0027alarmThree\u0027, show: false}, // 报警故障"
      ],
      "edit_a": [],
      "edit_b": [
        [
          56,
          7
        ],
        [
          57,
          8
        ],
        [
          59,
          8
        ]
      ]
    },
    {
      "ab": [
        "                    ];",
        "                    if (alarmLevel \u003d\u003d 0) return;",
        "                    for (var i \u003d 0; i \u003c alarmLevel; i++) {",
        "                        ctrl.alarmLevel[i].show \u003d true;",
        "                        console.log(ctrl.alarmLevel);",
        "                    }",
        "                });",
        "            }",
        "",
        "            var timerFlag \u003d false;",
        "            ctrl.trFalse \u003d false;",
        "            ctrl.tableInfo \u003d {};",
        "            ctrl.trFalse \u003d false;",
        "            $rootScope.global_variable_danger \u003d false;",
        "",
        "            //用户点击时触发更新UI数据",
        "            ctrl.action \u003d function () {",
        "                ctrl.displayAlarmData();",
        "                ctrl.displayExpireData()",
        "            };",
        "",
        "            ctrl.passExpire \u003d function (index) {",
        "                delete ctrl.ExpireData[index];",
        "                ctrl.displayExpireData()",
        "            };",
        "",
        "            ctrl.passAlarm \u003d function (uuid) {",
        "                delete ctrl.alarmData[uuid];",
        "                ctrl.displayAlarmData();",
        "            };",
        "",
        "            expire.getExpireList(function (data) {",
        "                ctrl.ExpireData \u003d data;",
        "                ctrl.displayExpireData();",
        "            });",
        "",
        "            // 显示过期提醒信息",
        "            ctrl.displayExpireData \u003d function () {",
        "                var Num \u003d 0;//过期提醒数量",
        "                // 过期提醒数据",
        "                var data \u003d ctrl.ExpireData.filter(function (v) {",
        "                    return Num++, v.pass !\u003d true;",
        "                });",
        "                ctrl.alarmTCount \u003d Num;",
        "                ctrl.tableParams2 \u003d new ngTableParams({",
        "                    page: 1, // show first page",
        "                    count: 8, // count per page",
        "                }, {",
        "                    total: data.length,",
        "                    getData: function ($defer, params) {",
        "                        params.total(data.length);",
        "                        $defer.resolve(data.slice((params.page() - 1) * params.count(), params.page() * params.count()));",
        "                    }",
        "                });",
        "            };",
        "            // 显示报警信息",
        "            ctrl.displayAlarmData \u003d function () {",
        "                var criticalNum \u003d 0;//严重报警数量",
        "                var gernelNum \u003d 0;//一般报警数量",
        "                var alarmFailure \u003d 0;//报警故障数量",
        "                for (var i in  ctrl.alarmData) {",
        "                    var v \u003d ctrl.alarmData[i];",
        "                    if (v.pass !\u003d true \u0026\u0026 v.dismiss !\u003d true) {",
        "                        v.level \u003d\u003d 0 ? gernelNum++ : (v.level \u003d\u003d 1 ? criticalNum++ : (v.level \u003d\u003d 2 ? alarmFailure++ : null))",
        "                    }",
        "                }",
        "                ctrl.alarmSCount \u003d criticalNum;",
        "                ctrl.alarmLCount \u003d gernelNum;",
        "                ctrl.alarmSlight \u003d alarmFailure;",
        "",
        "",
        "                var data0 \u003d [], data1 \u003d [], data2 \u003d [];",
        "                for (var i in  ctrl.alarmData) {",
        "                    var v \u003d ctrl.alarmData[i];",
        "                    if (v.pass !\u003d true \u0026\u0026 v.dismiss !\u003d true) {",
        "                        v.level \u003d\u003d 0 ? data0.push(v) : (v.level \u003d\u003d 1 ? data1.push(v) : (v.level \u003d\u003d 2 ? data2.push(v) : null));",
        "                    }",
        "                }",
        "",
        "                ctrl.tableParams \u003d new ngTableParams({",
        "                    page: 1, // show first page",
        "                    count: 8, // count per page",
        "                }, {",
        "                    total: data0.length,",
        "                    getData: function ($defer, params) {",
        "                        var len \u003d data0.length;",
        "                        var _data \u003d data0.slice((params.page() - 1) * params.count(), params.page() * params.count());",
        "                        params.total(len);",
        "                        $defer.resolve(_data);",
        "                    }",
        "                });",
        "",
        "                ctrl.tableParams1 \u003d new ngTableParams({",
        "                    page: 1, // show first page",
        "                    count: 8, // count per page",
        "                }, {",
        "                    total: data1.length,",
        "                    getData: function ($defer, params) {",
        "                        var len \u003d data1.length;",
        "                        if (len \u003d\u003d 0 \u0026\u0026 ctrl.trFalse) {",
        "                            ctrl.trFalse \u003d false;",
        "                            $timeout(function () {",
        "                                ctrl.audio.pause();",
        "                            }, 430);",
        "                        }",
        "                        var _data \u003d data1.slice((params.page() - 1) * params.count(), params.page() * params.count());",
        "                        params.total(len);",
        "                        $defer.resolve(_data);",
        "                    }",
        "                });",
        "",
        "",
        "                // 严重报警弹出 表格",
        "                ctrl.tableParams4 \u003d new ngTableParams({",
        "                    page: 1, // show first page",
        "                    count: 400, // count per page",
        "                }, {",
        "                    total: data1.length,",
        "                    getData: function ($defer, params) {",
        "                        var len \u003d data1.length;",
        "                        if (len \u003d\u003d 0 \u0026\u0026 ctrl.trFalse) {",
        "                            ctrl.trFalse \u003d false;",
        "                            ctrl.audio.pause();",
        "                        }",
        "                        var _data \u003d data1.slice((params.page() - 1) * params.count(), params.page() * params.count());",
        "                        params.total(len);",
        "                        $defer.resolve(_data);",
        "                    }",
        "                });",
        "",
        "",
        "                ctrl.tableParams3 \u003d new ngTableParams({",
        "                    page: 1, // show first page",
        "                    count: 8, // count per page",
        "                }, {",
        "                    total: data2.length,",
        "                    getData: function ($defer, params) {",
        "                        var len \u003d data2.length;",
        "                        var _data \u003d data2.slice((params.page() - 1) * params.count(), params.page() * params.count());",
        "                        params.total(len);",
        "                        $defer.resolve(_data);",
        "                    }",
        "                });",
        "            };",
        "",
        "",
        "            function addAlarmHistory(alarm) {",
        "                var uuid \u003d alarm.uuid + \u0027\u0027;",
        "                if (ctrl.alarmData.hasOwnProperty(uuid)) {",
        "                    if (alarm.dismiss) {",
        "                        delete ctrl.alarmData[uuid];  // 报警结束，则删除",
        "                    } else {",
        "                        ctrl.alarmData[uuid].time \u003d alarm.time;// 更新报警时间和等级信息",
        "                        ctrl.alarmData[uuid].level \u003d alarm.level;",
        "                    }",
        "                } else {",
        "                    if (!alarm.dismiss) {",
        "                        ctrl.alarmData[uuid] \u003d alarm;// 插入报警信息",
        "                        if (alarm.level \u003d\u003d 1) { // 显示严重报警 弹出信息",
        "                            ctrl.audio \u003d document.getElementById(\u0027danger_audio\u0027);",
        "                            $timeout( function () {",
        "                                ctrl.audio.play();// 播放",
        "                            }, 500);// ctrl.audio.faseSeek(4);",
        "                            ctrl.seriousInformation \u003d alarm;",
        "                            console.log(alarm);",
        "                            ctrl.vehicleNoInformation \u003d ctrl.seriousInformation.vehicleNo;",
        "                            ctrl.vehicleType \u003d ctrl.seriousInformation.ch;",
        "                            ctrl.trFalse \u003d true;",
        "                            // ctrl.closeDanger();",
        "                        }",
        "                        $scope.$apply();",
        "                    }",
        "                }",
        "                ctrl.closeDanger \u003d function () {",
        "                    $timeout(function () {",
        "                        console.log(\"closeDanger\");",
        "                        ctrl.trFalse \u003d false;",
        "                    }, 3500);",
        "                };",
        "",
        "                if (!ctrl.showAlarmView) {",
        "                    if (!timerFlag) {",
        "                        timerFlag \u003d true;",
        "                        setTimeout(function () {",
        "                            ctrl.displayAlarmData();",
        "                            timerFlag \u003d false;",
        "                        }, 1000);",
        "                    }",
        "                }",
        "            }",
        "",
        "            ctrl.closeAudio \u003d function () {",
        "                ctrl.audio.pause();// 暂停",
        "            };",
        "            /*故障取证跳转*/",
        "            ctrl.danger_infor_jump \u003d function (url, data) {",
        "                ctrl.audio.pause();",
        "                $rootScope.global_variable_danger \u003d true;",
        "                localStorage.setItem(\u0027dangerVehicleNO\u0027, data.vehicleNo);",
        "                ctrl.trFalse \u003d false;",
        "                Nav.setNavActive(url);",
        "                $scope.$emit(\u0027to-mainctrl\u0027, Nav.navs);",
        "            };",
        "",
        "",
        "            $http({",
        "                method: \u0027POST\u0027,",
        "                url: \"/api/public/queryAllUpDept\",",
        "            }).then(function (response) {",
        "                if (response.data.retcode \u003d\u003d 1) {",
        "                    return response.data.data;",
        "                } else {",
        "                    return [];",
        "                }",
        "            }).then(function (data) {",
        "                var deptIds \u003d [\u0027*\u0027, \u0027*\u0027, \u0027*\u0027, \u0027*\u0027, \u0027*\u0027];",
        "                data.forEach(function (v) {",
        "                    deptIds[v[\u0027level\u0027]] \u003d v[\u0027dept_id\u0027];",
        "                });",
        "                if (data.length !\u003d 0) {",
        "                    var topic \u003d \"alarm.\" + deptIds[1] + \".\" + deptIds[2] + \".\" + deptIds[3] + \".\" + deptIds[4]",
        "                        + \".*\";",
        "                    console.log(\"订阅报警:\" + topic);",
        "",
        "                    stomp.sub(topic, module_name, function (alarmArr) {",
        "                        $(\u0027#ng_table_infor + div\u0027).hide();",
        "                        for (let i \u003d 0, l \u003d alarmArr.length; i \u003c l; i++) {",
        "                            alarmResolver.resolve(alarmArr[i], function (res) {",
        "                                if (res !\u003d null) addAlarmHistory(res);",
        "                            }, [\u0027vehicleSN\u0027, \u0027vehicleNo\u0027]);",
        "                        }",
        "",
        "                    });",
        "                    /*stomp.sub(topic, module_name, function (alarmMessage) {",
        "                        $(\u0027#ng_table_infor + div\u0027).hide();",
        "                        alarmResolver.resolve(alarmMessage, function (res) {",
        "                            if (res !\u003d null) addAlarmHistory(res);",
        "                        }, [\u0027vehicleSN\u0027, \u0027vehicleNo\u0027]);",
        "",
        "                    });*/",
        "                }",
        "            });",
        "",
        "            // function unsub() {",
        "            //     alert(\"取消订阅\")",
        "            //     sub.unSub();",
        "            // }",
        "            // setTimeout(unsub, 5000);",
        "",
        "            // alarmDataAnalysis({",
        "            //     vehicleDeviceID:\u00270400000000030603\u0027,",
        "            //     protocolData:{",
        "            //         alarmTypeId:\u002700000001\u0027,",
        "            //         alarmLevel:\u002700000001\u0027,",
        "            //     },",
        "            //     dataTypeId:6,",
        "            //     webTime:\u00272016-12-15 14:21:21\u0027}",
        "            // );",
        "            // alarmDataAnalysis({",
        "            //     vehicleDeviceID:\u00270200000000030603\u0027,",
        "            //     protocolData:{",
        "            //         alarmTypeId:\u002700000000\u0027,",
        "            //         alarmLevel:\u002700000000\u0027,",
        "            //     },",
        "            //     dataTypeId:6,",
        "            //     webTime:\u00272016-12-15 14:21:21\u0027}",
        "            // );",
        "        }],",
        "});",
        ""
      ]
    }
  ]
}
