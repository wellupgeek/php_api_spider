{
  "meta_a": {
    "name": "app/Http/Controllers/Api/ApiStatisticController.php",
    "content_type": "text/x-php",
    "lines": 19821,
    "web_links": [
      {
        "name": "gitweb",
        "url": "/gitweb?p\u003dphp_web_api_v0.git;hb\u003d77bf0ef428f8e6af1b81ae5b1f22a775630afef0;f\u003dapp%2FHttp%2FControllers%2FApi%2FApiStatisticController.php"
      }
    ]
  },
  "meta_b": {
    "name": "app/Http/Controllers/Api/ApiStatisticController.php",
    "content_type": "text/x-php",
    "lines": 19821,
    "web_links": [
      {
        "name": "gitweb",
        "url": "/gitweb?p\u003dphp_web_api_v0.git;hb\u003drefs%2Fchanges%2F20%2F1220%2F1;f\u003dapp%2FHttp%2FControllers%2FApi%2FApiStatisticController.php"
      }
    ]
  },
  "intraline_status": "OK",
  "change_type": "MODIFIED",
  "diff_header": [
    "diff --git a/app/Http/Controllers/Api/ApiStatisticController.php b/app/Http/Controllers/Api/ApiStatisticController.php",
    "index 71befad..8f50eda 100644",
    "--- a/app/Http/Controllers/Api/ApiStatisticController.php",
    "+++ b/app/Http/Controllers/Api/ApiStatisticController.php"
  ],
  "content": [
    {
      "ab": [
        "\u003c?php",
        "/**",
        " * FileName: ApiStatisticController.php",
        " * description: 统计相关API控制器",
        " * version: 0.1",
        " * date: 2016/8/29",
        " * author: gikidy",
        " */",
        "",
        "namespace App\\Http\\Controllers\\Api;",
        "",
        "",
        "use App\\Http\\Controllers\\Web\\StatisticController;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatEnergySavingAnalyse;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatVehicleCanData;",
        "use App\\Models\\BussinessModels\\Manage\\VehicleInfoSystemType\\BVehicleInfoSystemType;",
        "use App\\Models\\BussinessModels\\Mauth\\User;",
        "use App\\Models\\DataModels\\Data\\DAlarmSummary;",
        "use App\\Models\\DataModels\\Data\\DDrivingViolationType;",
        "use Maatwebsite\\Excel\\Facades\\Excel;",
        "use App\\PdoCache\\CacheUtil;",
        "use Auth;",
        "use Response;",
        "use Validator;",
        "use Request;",
        "use DB;",
        "use Illuminate\\Support\\Facades\\Redis;",
        "use App\\Models\\BussinessModels\\Mauth;",
        "use App\\Http\\Controllers\\Controller;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatDrivingConfig;",
        "use App\\Models\\DataModels\\Statistic\\DStatDrivingViolationDetail;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatDrivingFrequency;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatDrivingCompare;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatSpeedAnalyse;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatEnergyConsume;",
        "use App\\Models\\BussinessModels\\Statistic\\BStatVehicleMiles;",
        "use App\\Models\\DataModels\\Statistic\\DStatDrivingViolationSummaryVForBeiJingByDay;",
        "use App\\Models\\DataModels\\Statistic\\DStatDrivingViolationSummaryForBeiJingByDay;",
        "use App\\Traits\\TraitDeptDetailUtils;",
        "use Cache;",
        "use Carbon\\Carbon;",
        "use App\\Models\\DataModels\\Statistic\\DStatDrivingConfig;",
        "",
        "class ApiStatisticController extends Controller",
        "{",
        "    use TraitDeptDetailUtils;",
        "",
        "    /**",
        "     * 构造函数 初始化params 请求参数.",
        "     */",
        "    public function __construct()",
        "    {",
        "        $this-\u003eparams \u003d Request::all();",
        "    }",
        "",
        "//******************************************************驾驶员行为分析相关***********************************************",
        "",
        "    /**",
        "     *",
        "     * 获取驾驶员行为分析扣分配置",
        "     * @author gikidy",
        "     */",
        "    public function getDriverActionAnalyseScores()",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027,",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatDrivingConfig())-\u003egetScores($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    /**",
        "     *",
        "     * 驾驶员行为分析扣分配置设置-新增、更新",
        "     * @author gikidy",
        "     */",
        "    public function setDriverActionAnalyseScores()",
        "    {",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027type\u0027 \u003d\u003e \u0027required\u0027, // add/update",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        if ($this-\u003eparams[\u0027type\u0027] \u003d\u003d \u0027add\u0027) {",
        "            $ret \u003d (new BStatDrivingConfig())-\u003eaddScores($this-\u003eparams);",
        "        } else if ($this-\u003eparams[\u0027type\u0027] \u003d\u003d \u0027update\u0027) {",
        "            $ret \u003d (new BStatDrivingConfig())-\u003eupdateScores($this-\u003eparams);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDriverActionAnalyseParams",
        "     * @name: 获取驾驶员行为分析参数配置",
        "     * @author: gikidy",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDriverActionAnalyseParams(Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027,",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatDrivingConfig())-\u003egetConfig($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    /**",
        "     *",
        "     * 驾驶员行为分析参数配置设置-新增、更新",
        "     * @author gikidy",
        "     */",
        "    public function setDriverActionAnalyseParams(Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027type\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027type_desc\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027parameter\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027para_value\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027remark\u0027 \u003d\u003e \u0027required\u0027,",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatDrivingConfig())-\u003esetConfig($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/driverActionHCompare",
        "     * @name: 驾驶员行为横向评比",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request  dept_id 线路、车队、分公司、总公司ID",
        "     *parameter1: dept_id,description:组织ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: stat_date,description:时间",
        "     *parameter5: type,description:类型",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function driverActionHCompare(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027,",
        "",
        "            \u0027type\u0027 \u003d\u003e \u0027required|in:line,group,subcompany,company\u0027",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "        $ret \u003d (new BStatDrivingCompare([], $request))-\u003ehCompare($this-\u003eparams);",
        "        $statdate \u003d $this-\u003eparams[\u0027stat_date\u0027];",
        "        $stat_date \u003d date(\u0027Y-m-d\u0027, strtotime(\"-1 month\", strtotime($statdate)));",
        "        $this-\u003eparams[\u0027stat_date\u0027] \u003d $stat_date;",
        "        $beforeret \u003d (new BStatDrivingCompare([], $request))-\u003ehCompare($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, [\u0027data\u0027 \u003d\u003e $ret], [\u0027data\u0027 \u003d\u003e $beforeret]);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/driverActionVCompare",
        "     * @name: 驾驶员行为纵向评比",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request  id type为 subcompany|group|line时，id为线路、车队、分公司ID，为驾驶员时为驾驶员ID.",
        "     *parameter1: dept_id,description:组织ID",
        "     *parameter2: ctype,description:比较规则",
        "     *parameter3: stat_date,description:时间",
        "     *parameter4: type,description:类型",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function driverActionVCompare(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027type\u0027 \u003d\u003e \u0027required|in:line,group,subcompany,company,driver\u0027",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatDrivingCompare([], $request))-\u003evCompare($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, [\u0027data\u0027 \u003d\u003e $ret]);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/driverActionDetail",
        "     * @name: 驾驶员违规明细接口",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:页码",
        "     *parameter2: count,description:行数",
        "     *parameter3: driverId,description:驾驶员ID",
        "     *parameter4: startDate,description:开始时间",
        "     *parameter5: endDate,description:结束时间",
        "     *parameter6: violationType,description:违规类型",
        "     *parameter7: actiontypeDesc,description:违规名称",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function driverActionDetail(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        //历史按月统计明细",
        "        if (isset($this-\u003eparams[\u0027month\u0027]) \u0026\u0026 !isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 !isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "            $this-\u003eparams[\u0027startDate\u0027] \u003d $this-\u003eparams[\u0027month\u0027];",
        "            $this-\u003eparams[\u0027endDate\u0027] \u003d date(\u0027Y-m-t\u0027, strtotime($this-\u003eparams[\u0027month\u0027]));",
        "            //  $ret \u003d (new BStatDrivingCompare([], $request))-\u003edriverActionDetail($this-\u003eparams);",
        "        }",
        "        $ret \u003d $this-\u003edriverActionDetailByDate($this-\u003eparams);",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "",
        "    //用于驾驶员违规界面按设置时间获取",
        "    public function driverActionDetailByDate($params)",
        "    {",
        "        if (!isset($params[\u0027driverId\u0027])) {",
        "            $driver \u003d DB::table(\u0027v_driverinfo\u0027);",
        "            if (isset($params[\u0027companyId\u0027])) {",
        "                $driver \u003d $driver-\u003ewhere(\u0027companyDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027companyId\u0027]);",
        "",
        "            } else if (isset($params[\u0027subCompanyId\u0027])) {",
        "                $driver \u003d $driver-\u003ewhere(\u0027subCompanyDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027subCompanyId\u0027]);",
        "            } else if (isset($params[\u0027groupId\u0027])) {",
        "                $driver \u003d $driver-\u003ewhere(\u0027groupDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027groupId\u0027]);",
        "            } else if (isset($params[\u0027lineId\u0027])) {",
        "                $driver \u003d $driver-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027lineId\u0027]);",
        "            } else {",
        "                $driver \u003d $driver-\u003ewhereRaw(\u00271\u003d2\u0027);",
        "            }",
        "            $driver \u003d $driver-\u003eselect(\u0027driverid\u0027, \u0027companyDeptId\u0027)-\u003eget();",
        "            $driverId \u003d [];",
        "            foreach ($driver as $value) {",
        "                $driverId[] \u003d $value-\u003edriverid;",
        "            }",
        "            if ($driverId \u003d\u003d []) {",
        "                return $driverId;",
        "            }",
        "            $company \u003d $driver[0]-\u003ecompanyDeptId;",
        "        } else {",
        "            $driver \u003d $params[\u0027driverId\u0027];",
        "            $company \u003d \"SELECT companyDeptId",
        "                        from  v_driverinfo",
        "                        where driverid \u003d $driver\";",
        "            $driverId [] \u003d $params[\u0027driverId\u0027];",
        "            $company \u003d DB::select($company)[0]-\u003ecompanyDeptId;",
        "        }",
        "        $violationeName \u003d null;",
        "        if (isset($params[\u0027violationType\u0027])) {",
        "            switch ($params[\u0027violationType\u0027]) {",
        "                case 1:",
        "                    $violationeName \u003d \"badServiceType\";",
        "                    break;",
        "                case 2:",
        "                    $violationeName \u003d \"dangerType\";",
        "                    break;",
        "                case 3:",
        "                    $violationeName \u003d \"damageType\";",
        "                    break;",
        "                default:",
        "                    $violationeName \u003d null;",
        "            }",
        "        };",
        "        // 根据 公司设置的统计日期 确定 时间范围",
        "        if (isset($params[\u0027startDate\u0027]) \u0026\u0026 $params[\u0027endDate\u0027]) {",
        "            $startDate \u003d $params[\u0027startDate\u0027];",
        "            $stopDate \u003d $params[\u0027endDate\u0027];",
        "        } else {",
        "            //如果从驾驶员违规界面进入，计算开始和结束时间",
        "            $timeArr \u003d $this-\u003egetTimeForViolationType($params);",
        "            $startDate \u003d $timeArr[0];",
        "            $stopDate \u003d $timeArr[1];",
        "        }",
        "        //请求传参如果没有具体时期。取开始月份第一天和结束月份前一天",
        "        //VTF-1333 明细报表-\u003e报表导出，驾驶员违规下的损车驾驶下的明细按钮被点击时接口响应超时",
        "        if (strlen($startDate) \u003c 9) {",
        "            $startDate .\u003d \u0027-01\u0027;",
        "            $stopDate .\u003d \u0027-01\u0027;",
        "            $stopDate \u003d date(\"Y-m-d\", (strtotime($stopDate) - 3600 * 24));",
        "        }",
        "        $startIndex \u003d 0;",
        "        $move \u003d 8;",
        "        if (isset($params[\u0027count\u0027]) \u0026\u0026 isset($params[\u0027page\u0027])) {",
        "            $startIndex \u003d $params[\u0027count\u0027] * ($params[\u0027page\u0027] - 1);",
        "            $move \u003d $params[\u0027count\u0027];",
        "        }",
        "        //   $startDate \u003d Carbon::parse($params[\u0027month\u0027])-\u003estartOfMonth()-\u003etoDateString();",
        "",
        "        //   $stopDate \u003d Carbon::parse($params[\u0027month\u0027])-\u003eendOfMonth()-\u003etoDateString();",
        "        if (isset($params[\u0027actiontypeDesc\u0027])) {",
        "            $model \u003d DB::table(\u0027stat_driving_violation_detail\u0027)",
        "                -\u003eleftJoin(\u0027t_vehicleinfo\u0027, \u0027t_vehicleinfo.deviceId\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.vehicledeviceid\u0027)",
        "                // 添加两个左连接",
        "                -\u003eleftJoin(\u0027v_drivingconfig\u0027, function ($join) {",
        "                    $join-\u003eon(\u0027v_drivingconfig.dept_id\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.lineDeptid\u0027)-\u003eOn(\u0027v_drivingconfig.type\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.actiontype\u0027);",
        "                })",
        "                -\u003ejoin(\u0027driving_violation_type\u0027, \u0027driving_violation_type.violationeName\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.actiontype\u0027)",
        "                -\u003eleftJoin(\u0027t_areainfo\u0027, \u0027t_areainfo.areaId\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.begin_site\u0027)",
        "                -\u003ewhereIn(\u0027stat_driving_violation_detail.driverId\u0027, $driverId)",
        "                -\u003ewhere(\u0027stat_driving_violation_detail.stat_date\u0027, \u0027\u003e\u003d\u0027, $startDate)",
        "                -\u003ewhere(\u0027stat_driving_violation_detail.stat_date\u0027, \u0027\u003c\u003d\u0027, $stopDate)",
        "                -\u003ewhere(\u0027actiontypeDesc\u0027, $params[\u0027actiontypeDesc\u0027])",
        "                //    -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "                -\u003eselect(\u0027t_vehicleinfo.vehicleNo\u0027,",
        "                    \u0027stat_driving_violation_detail.driverName\u0027,",
        "                    \u0027stat_driving_violation_detail.begin_time\u0027,",
        "                    \u0027stat_driving_violation_detail.actiontypeDesc\u0027,",
        "                    \u0027stat_driving_violation_detail.score\u0027,",
        "                    DB::raw(\u0027(select judgement_json from stat_driving_violation_judgement where judgement_id \u003d stat_driving_violation_detail.judgement_id) as judgement\u0027),",
        "                    //    (DB::raw(\u0027CASE stat_driving_violation_detail.end_site WHEN  -1 THEN t_areainfo.speed else stat_drivingconfig.para_value end as config\u0027)),",
        "                    (DB::raw(\u0027CASE stat_driving_violation_detail.end_site WHEN  -1 THEN concat( t_areainfo.speed,\\\u0027:车速，单位：km/秒\\\u0027) else v_drivingconfig.remark end as remark\u0027))",
        "                );",
        "            $data \u003d $model-\u003edistinct()-\u003eoffset($startIndex)-\u003elimit($move + 1)-\u003eget();",
        "        } else {",
        "            $off \u003d $move + 1;",
        "            $data \u003d DB::table(\u0027stat_driving_violation_detail\u0027)",
        "                -\u003eleftJoin(\u0027t_vehicleinfo\u0027, \u0027t_vehicleinfo.deviceId\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.vehicledeviceid\u0027)",
        "                -\u003eleftJoin(\u0027v_drivingconfig\u0027, function ($join) {",
        "                    $join-\u003eon(\u0027v_drivingconfig.dept_id\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.lineDeptid\u0027)-\u003eOn(\u0027v_drivingconfig.type\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.actiontype\u0027);",
        "                })",
        "                -\u003eleftJoin(\u0027t_areainfo\u0027, \u0027t_areainfo.areaId\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.begin_site\u0027)",
        "                -\u003ejoin(\u0027driving_violation_type\u0027, \u0027driving_violation_type.violationeName\u0027, \u0027\u003d\u0027, \u0027stat_driving_violation_detail.actiontype\u0027)",
        "                -\u003eselectRaw(\"",
        "                    `t_vehicleinfo`.`vehicleNo`,",
        "                    `stat_driving_violation_detail`.`driverName`,",
        "                    `stat_driving_violation_detail`.`begin_time`,",
        "                    `stat_driving_violation_detail`.`actiontypeDesc`,",
        "                    `stat_driving_violation_detail`.`score`,",
        "                    (",
        "                        SELECT",
        "                            judgement_json",
        "                        FROM",
        "                            stat_driving_violation_judgement",
        "                        WHERE",
        "                            judgement_id \u003d stat_driving_violation_detail.judgement_id",
        "                    ) AS judgement,",
        "                    CASE stat_driving_violation_detail.end_site",
        "                WHEN - 1 THEN",
        "                    concat(",
        "                        t_areainfo.speed,",
        "                        \u0027:车速，单位：km/秒\u0027",
        "                    )",
        "                ELSE",
        "                    v_drivingconfig.remark",
        "                END AS remark\")",
        "                -\u003ewhere(\u0027stat_driving_violation_detail.stat_date\u0027, \u0027\u003e\u003d\u0027, $startDate)",
        "                -\u003ewhere(\u0027stat_driving_violation_detail.stat_date\u0027, \u0027\u003c\u003d\u0027, $stopDate)",
        "                -\u003ewhereIn(\u0027stat_driving_violation_detail.driverId\u0027, $driverId)",
        "                -\u003ewhere(\u0027driving_violation_type.deptid\u0027, \u0027\u003d\u0027, $company);",
        "            if ($violationeName !\u003d null) {",
        "                $data-\u003ewhere(\"driving_violation_type.$violationeName\", \u0027\u003d\u0027, \u00271\u0027);",
        "            }",
        "            $data \u003d $data-\u003edistinct()-\u003eoffset($startIndex)-\u003elimit($off)-\u003eget();",
        "        }",
        "        $flag \u003d 0;",
        "        if (count($data) \u003d\u003d $move + 1) {",
        "            unset($data[$move]);",
        "            $flag \u003d 1;",
        "        }",
        "        $data \u003d [\u0027data\u0027 \u003d\u003e $data, \u0027flag\u0027 \u003d\u003e $flag];",
        "        return $data;",
        "    }",
        "",
        "    public function getTimeForViolationType($params)",
        "    {",
        "        //如果timeType存在（由首页--违规界面调起）计算开始时间与结束时间",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            switch ($params[\u0027timeType\u0027]) {",
        "                case 0:",
        "                    //0代表昨天",
        "                    $startDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                    $endDay \u003d $startDay;",
        "                    break;",
        "                case 1:",
        "                    //1代表近7天 起始为前八天，结束为昨天",
        "                    $startDay \u003d date(\"Y-m-d\", strtotime(\"-7 day\"));",
        "                    $endDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                    break;",
        "                case 2:",
        "                    //2代表本月 起始为本月第一天，结束为昨天",
        "                    $startDay \u003d date(\u0027Y-m-01\u0027, strtotime(date(\"Y-m-d\")));",
        "                    $endDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                    break;",
        "                case 3:",
        "                    //3代表上月 起始为上月第一天 结束为上月最后一天",
        "                    $startDay \u003d date(\u0027Y-m-01\u0027, strtotime(\u0027-1 month\u0027));",
        "                    $endDay \u003d date(\u0027Y-m-t\u0027, strtotime(\u0027-1 month\u0027));",
        "                    break;",
        "                case 4:",
        "                    //4代表当年 起始为本年第一天 结束为昨天",
        "                    $year \u003d date(\"Y\", time());",
        "                    $startDay \u003d $year . \"-01-01\";",
        "                    $endDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                    break;",
        "                case 5:",
        "                    //4代表当年 起始为本年第一天 结束为昨天",
        "",
        "                    $startDay \u003d date(\u0027Y-01-01\u0027, strtotime(\u0027-1 year\u0027));",
        "                    $endDay \u003d date(\u0027Y-12-31\u0027, strtotime(\u0027-1 year\u0027));",
        "                    break;",
        "                default:",
        "                    $startDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                    $endDay \u003d $startDay;",
        "            }",
        "        } else {",
        "            $startDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "            $endDay \u003d $startDay;",
        "        }",
        "        return [$startDay, $endDay];",
        "    }",
        "",
        "    public function speedAnalyseChart(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027id\u0027 \u003d\u003e \u0027required\u0027 // 车辆ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatSpeedAnalyse([], $request))-\u003egetData($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    /**",
        "     * 驾驶员不规范操作频次统计",
        "     *",
        "     * @param \\Illuminate\\Http\\Request $request",
        "     */",
        "    public function driverActionFrequency(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_stat_driving_violation_times\u0027,",
        "            \u0027v_stat_driving_violation_times\u0027, 13);",
        "",
        "        \\Log::info(\"驾驶员不规范查询\");",
        "",
        "        $info \u003d $this-\u003equeryDepts($this-\u003eparams);",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "",
        "        return $ret;",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/driverActionFrequency2",
        "     * @name: 驾驶员不规范操作频次统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:页码",
        "     *parameter2: count,description:行数",
        "     *parameter3: sortKey,description:排序字段",
        "     *parameter4: sortVal,description:排序方式",
        "     *parameter5: findKey4,description:查询类型",
        "     *parameter6: findKey5,description:查询类型",
        "     *parameter7: findVal4,description:类型值",
        "     *parameter8: findVal5,description:类型值",
        "     *parameter9: violationType,description:违规类型",
        "     *parameter10: driverId,description:司机ID",
        "     *parameter11: startDate,description:开始时间",
        "     *parameter12: endDate,description:结束时间",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function driverActionFrequency2(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "            \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        $jj \u003d $request-\u003eget(\u0027violationType\u0027);",
        "",
        "        switch ($jj) {",
        "            case -1:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_all\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 1:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_bs\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 2:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 3:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_damage\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        }",
        "",
        "        \\Log::info(\"驾驶员不规范查询\");",
        "",
        "        $info \u003d $this-\u003equerySumDriverAction($this-\u003eparams);",
        "        //  $info \u003d $this-\u003equeryDepts2($this-\u003eparams);",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "",
        "        return $ret;",
        "",
        "    }",
        "",
        "    public function driverActionFrequency2Summary(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        $data \u003d $this-\u003edriverActionFrequency2SummaryData($request);",
        "        $arr \u003d $this-\u003eaddDeptHeader3($this-\u003etableName, [\u0027data\u0027 \u003d\u003e $data], $this-\u003eparams);",
        "        $arra \u003d array([",
        "            \"field\" \u003d\u003e \"companyName\",",
        "            \"english\" \u003d\u003e \"companyName\",",
        "            \"chinese\" \u003d\u003e \"总公司\",",
        "            \"show\" \u003d\u003e 1",
        "        ]);",
        "",
        "        array_splice($arr[\u0027head\u0027], 0, 1, $arra);",
        "        //隐藏head中车牌号和vin",
        "        foreach ($arr[\u0027head\u0027] as $key \u003d\u003e $val) {",
        "            if ($val[\u0027chinese\u0027] \u003d\u003d \u0027设备号\u0027 || $val[\u0027chinese\u0027] \u003d\u003d \u0027车牌号\u0027 || $val[\u0027chinese\u0027] \u003d\u003d \u0027自编号\u0027) {",
        "                $arr[\u0027head\u0027][$key][\u0027show\u0027] \u003d 0;",
        "            }",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $arr);",
        "        return $ret;",
        "    }",
        "",
        "    public function driverActionFrequency2SummaryData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027original\u0027][\u0027level\u0027]) {",
        "            case 0:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027companyDeptid\u0027;",
        "                $this-\u003eparams[\u0027findKeyEqual1\u0027] \u003d \u0027companyName\u0027;",
        "                break;",
        "            case 1:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027companyDeptid\u0027;",
        "                $this-\u003eparams[\u0027findKeyEqual1\u0027] \u003d \u0027companyName\u0027;",
        "",
        "                break;",
        "",
        "            case 2:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027subCompanyDeptid\u0027;",
        "                $this-\u003eparams[\u0027findKeyEqual1\u0027] \u003d \u0027subCompanyName\u0027;",
        "                break;",
        "            case 3:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027groupDeptid\u0027;",
        "                $this-\u003eparams[\u0027findKeyEqual1\u0027] \u003d \u0027groupName\u0027;",
        "                break;",
        "            case 4:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027lineDeptid\u0027;",
        "                $this-\u003eparams[\u0027findKeyEqual1\u0027] \u003d \u0027lineName\u0027;",
        "                break;",
        "            default:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027lineDeptid\u0027;",
        "                $this-\u003eparams[\u0027findKeyEqual1\u0027] \u003d \u0027lineName\u0027;",
        "                break;",
        "        }",
        "        $this-\u003eparams[\u0027deptid\u0027] \u003d $dept[\u0027original\u0027][\u0027dept_id\u0027];",
        "        $this-\u003eparams[\u0027findValEqual1\u0027] \u003d $dept[\u0027original\u0027][\u0027name\u0027];",
        "",
        "        $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "            \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        $jj \u003d $request-\u003eget(\u0027violationType\u0027);",
        "",
        "        switch ($jj) {",
        "            case -1:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_all\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 1:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_bs\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 2:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 3:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_damage\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        }",
        "",
        "        \\Log::info(\"驾驶员不规范查询\");",
        "        if (isset($this-\u003eparams[\u0027count\u0027])) {",
        "            unset($this-\u003eparams[\u0027count\u0027]);",
        "        }",
        "        $this-\u003eparams[\u0027noPage\u0027] \u003d true;",
        "        $data \u003d $this-\u003equerySumDriverAction($this-\u003eparams);",
        "",
        "        $result \u003d [];",
        "",
        "        if (isset($data) \u0026\u0026 count($data) \u003e 0) {",
        "            if (count($data) !\u003d 0 \u0026\u0026 $data !\u003d null) {",
        "                //提取出结果中的第一个，获取全部的数据",
        "                $base \u003d $data[0];",
        "",
        "                foreach ($base as $key \u003d\u003e $val) {",
        "                    $base[$key] \u003d null;",
        "                }",
        "",
        "                $result_init \u003d $this-\u003egetDeptArr2($base, $data[0]);",
        "",
        "            }",
        "            $lineTotal \u003d array($base);",
        "            $groupTotal \u003d array($base);",
        "            $subCompanyTotal \u003d array($base);",
        "            $companyTotal \u003d array($base);",
        "",
        "            //记录机构数组存在的位置",
        "            if (isset($data[0][\u0027companyName\u0027])) {",
        "                $companyNum_init \u003d 0;",
        "                $subCompanyNum_init \u003d 1;",
        "            } else {",
        "                $subCompanyNum_init \u003d 0;",
        "            }",
        "            $groupNum_init \u003d $subCompanyNum_init + 1;",
        "            $lineNum_init \u003d $groupNum_init + 1;",
        "",
        "            if (isset($companyNum_init)) {",
        "                $companyNum \u003d $companyNum_init;",
        "            }",
        "            $subCompanyNum \u003d $subCompanyNum_init;",
        "            $groupNum \u003d $groupNum_init;",
        "            $lineNum \u003d $lineNum_init;",
        "            $result \u003d $result_init;",
        "",
        "            foreach ($data as $key \u003d\u003e $val) {",
        "                if (isset($data[$key + 1])) {",
        "                    $temp \u003d $val;",
        "                    if (isset($temp[\u0027companyName\u0027])) {",
        "                        $temp[\u0027companyName\u0027] \u003d null;",
        "                        $temp[\u0027companyId\u0027] \u003d null;",
        "                    }",
        "                    $temp[\u0027subCompanyName\u0027] \u003d null;",
        "                    $temp[\u0027subCompanyId\u0027] \u003d null;",
        "                    $temp[\u0027subCompanyName\u0027] \u003d null;",
        "                    $temp[\u0027groupId\u0027] \u003d null;",
        "                    $temp[\u0027groupName\u0027] \u003d null;",
        "                    $temp[\u0027lineName\u0027] \u003d null;",
        "                    $temp[\u0027lineId\u0027] \u003d null;",
        "                    $result[] \u003d $temp;",
        "",
        "                    if (isset($data[$key + 1][\u0027companyName\u0027])) {",
        "                        $companyTotal \u003d $this-\u003earray_add($companyTotal, $val);",
        "",
        "                        if ($data[$key + 1][\u0027companyName\u0027] \u003d\u003d $val[\u0027companyName\u0027]) {",
        "",
        "                        } else {",
        "                            $companyTotal[0][\u0027companyId\u0027] \u003d $val[\u0027companyId\u0027];",
        "                            $companyTotal[0][\u0027companyName\u0027] \u003d $val[\u0027companyName\u0027];",
        "",
        "                            array_splice($result, $companyNum, 1, array($companyTotal));",
        "                            $companyTotal \u003d array($base);",
        "                            $companyNum \u003d count($result);",
        "                            $result_init[$companyNum_init][\u0027companyName\u0027] \u003d $data[$key + 1][\u0027companyName\u0027];",
        "                            $result[] \u003d $result_init[$companyNum_init];",
        "                        }",
        "                    }",
        "                    $subCompanyTotal \u003d $this-\u003earray_add($subCompanyTotal, $val);",
        "",
        "                    if ($data[$key + 1][\u0027subCompanyName\u0027] \u003d\u003d $val[\u0027subCompanyName\u0027]) {",
        "",
        "                    } else {",
        "                        $subCompanyTotal[0][\u0027subCompanyId\u0027] \u003d $val[\u0027subCompanyId\u0027];",
        "                        $subCompanyTotal[0][\u0027subCompanyName\u0027] \u003d $val[\u0027subCompanyName\u0027];",
        "                        array_splice($result, $subCompanyNum, 1, array($subCompanyTotal));",
        "                        $subCompanyTotal \u003d array($base);",
        "                        $subCompanyNum \u003d count($result);",
        "                        $result_init[$subCompanyNum_init][\u0027subCompanyName\u0027] \u003d $data[$key + 1][\u0027subCompanyName\u0027];",
        "                        $result[] \u003d $result_init[$subCompanyNum_init];",
        "                    }",
        "                    $groupTotal \u003d $this-\u003earray_add($groupTotal, $val);",
        "",
        "                    if ($data[$key + 1][\u0027groupName\u0027] \u003d\u003d $val[\u0027groupName\u0027]) {",
        "",
        "                    } else {",
        "                        $groupTotal[0][\u0027groupId\u0027] \u003d $val[\u0027groupId\u0027];",
        "                        $groupTotal[0][\u0027groupName\u0027] \u003d $val[\u0027groupName\u0027];",
        "                        array_splice($result, $groupNum, 1, array($groupTotal));",
        "                        $groupTotal \u003d array($base);",
        "                        $groupNum \u003d count($result);",
        "                        $result_init[$groupNum_init][\u0027groupName\u0027] \u003d $data[$key + 1][\u0027groupName\u0027];",
        "                        $result[] \u003d $result_init[$groupNum_init];",
        "                    }",
        "                    $lineTotal \u003d $this-\u003earray_add($lineTotal, $val);",
        "",
        "                    //和下面是同一个线路的",
        "                    if ($data[$key + 1][\u0027lineName\u0027] \u003d\u003d $val[\u0027lineName\u0027]) {",
        "",
        "                    } else {",
        "                        $lineTotal[0][\u0027lineId\u0027] \u003d $val[\u0027lineId\u0027];",
        "                        $lineTotal[0][\u0027lineName\u0027] \u003d $val[\u0027lineName\u0027];",
        "",
        "                        array_splice($result, $lineNum, 1, $lineTotal);",
        "                        $lineTotal \u003d array($base);",
        "                        $lineNum \u003d count($result);",
        "                        $result_init[$lineNum_init][\u0027lineName\u0027] \u003d $data[$key + 1][\u0027lineName\u0027];",
        "                        $result[] \u003d $result_init[$lineNum_init];",
        "                    }",
        "",
        "                } else {",
        "",
        "                    $companyTotal[0][\u0027companyId\u0027] \u003d $val[\u0027companyId\u0027];",
        "                    $companyTotal[0][\u0027companyName\u0027] \u003d $val[\u0027companyName\u0027];",
        "                    $subCompanyTotal[0][\u0027subCompanyId\u0027] \u003d $val[\u0027subCompanyId\u0027];",
        "                    $subCompanyTotal[0][\u0027subCompanyName\u0027] \u003d $val[\u0027subCompanyName\u0027];",
        "                    $groupTotal[0][\u0027groupId\u0027] \u003d $val[\u0027groupId\u0027];",
        "                    $groupTotal[0][\u0027groupName\u0027] \u003d $val[\u0027groupName\u0027];",
        "",
        "                    $lineTotal[0][\u0027lineId\u0027] \u003d $val[\u0027lineId\u0027];",
        "                    $lineTotal[0][\u0027lineName\u0027] \u003d $val[\u0027lineName\u0027];",
        "                    array_splice($result, $companyNum, 1, $companyTotal);",
        "                    array_splice($result, $subCompanyNum, 1, $subCompanyTotal);",
        "                    array_splice($result, $groupNum, 1, $groupTotal);",
        "                    array_splice($result, $lineNum, 1, $lineTotal);",
        "                }",
        "            }",
        "        }",
        "        return $result;",
        "",
        "    }",
        "",
        "    public function array_add($a, $b)",
        "    {",
        "        foreach ($a[0] as $key \u003d\u003e $value) {",
        "            if ($key !\u003d \u0027companyId\u0027 \u0026\u0026 $key !\u003d \u0027companyName\u0027 \u0026\u0026 $key !\u003d \u0027subCompanyId\u0027",
        "                \u0026\u0026 $key !\u003d \u0027subCompanyName\u0027 \u0026\u0026 $key !\u003d \u0027groupId\u0027 \u0026\u0026 $key !\u003d \u0027groupName\u0027 \u0026\u0026 $key !\u003d \u0027lineId\u0027 \u0026\u0026 $key !\u003d \u0027lineName\u0027",
        "                \u0026\u0026 $key !\u003d \u0027driverId\u0027 \u0026\u0026 $key !\u003d \u0027driverName\u0027 \u0026\u0026 $key !\u003d \u0027vehicleNo\u0027 \u0026\u0026 $key !\u003d \u0027vin\u0027)",
        "                $a[0][$key] \u003d (String)($a[0][$key] + $b[$key]);",
        "        }",
        "        //返回相加后的数组",
        "        return $a;",
        "    }",
        "",
        "    /**",
        "     * @param $params",
        "     * @return array|",
        "     * 驾驶员违规日统计",
        "     */",
        "    public function querySumDriverAction($params)",
        "    {",
        "        if (isset($this-\u003eparams[\u0027findVal5\u0027])) {",
        "            $startDay \u003d $this-\u003eparams[\u0027findVal5\u0027];",
        "        }",
        "        if (isset($this-\u003eparams[\u0027findVal4\u0027])) {",
        "",
        "            $endDay \u003d $this-\u003eparams[\u0027findVal4\u0027];",
        "        }",
        "        if (!isset($this-\u003eparams[\u0027violationType\u0027])) {",
        "            $this-\u003eparams[\u0027violationType\u0027] \u003d -1;",
        "        }",
        "        $violationTypeArr \u003d $this-\u003egetViolationeName($this-\u003eparams);",
        "",
        "        $key \u003d $this-\u003eparams[\u0027findKeyEqual1\u0027];",
        "        $val \u003d $this-\u003eparams[\u0027findValEqual1\u0027];",
        "        $ids \u003d $this-\u003egetMAuthedLines(null, null, \u0027deptId\u0027);",
        "        $selectStr \u003d \"",
        "            `v_driverinfo`.`lineDeptId` AS `lineId`,",
        "            `v_driverinfo`.`lineName` AS `lineName`,",
        "            `v_driverinfo`.`groupDeptId` AS `groupId`,",
        "            `v_driverinfo`.`groupName` AS `groupName`,",
        "            `v_driverinfo`.`subCompanyDeptId` AS `subCompanyId`,",
        "            `v_driverinfo`.`subCompanyName` AS `subCompanyName`,",
        "            `v_driverinfo`.`CompanyDeptId` AS `companyId`,",
        "            `v_driverinfo`.`CompanyName` AS `companyName`,",
        "            `stat_driving_violation_day`.`stat_date` AS `stat_date`,",
        "            `stat_driving_violation_day`.`driverId` AS `driverId`,",
        "            `stat_driving_violation_day`.`driverName` AS `driverName`,",
        "            `stat_driving_violation_day`.`actionType` AS `actionType`,",
        "            sum(`stat_driving_violation_day`.`totalNum`) AS `totalNum`",
        "              \";",
        "",
        "        //20190508修改",
        "        $driverId \u003d (new DStatDrivingViolationSummaryForBeiJingByDay())",
        "            -\u003eselectRaw(\u0027stat_driving_violation_day.driverId as driverId ,stat_driving_violation_day.driverName as driverName,stat_driving_violation_day.deviceId as deviceId,sum(stat_driving_violation_day.totalNum) as scores\u0027)",
        "            -\u003ejoin(\u0027v_driverinfo\u0027, \u0027stat_driving_violation_day.driverId\u0027, \u0027 \u003d\u0027, \u0027v_driverinfo.driverId\u0027)",
        "            -\u003ewhereIn(\u0027stat_driving_violation_day.lineId\u0027, $ids)-\u003ewhereIn(\u0027stat_driving_violation_day.actionType\u0027, $violationTypeArr);",
        "",
        "        if (isset($this-\u003eparams[\u0027findVal5\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findVal4\u0027])) {",
        "            $driverId \u003d $driverId-\u003ewhereRaw(\u0027stat_driving_violation_day.stat_date\u003e\u003d? and stat_driving_violation_day.stat_date\u003c\u003d? and v_driverinfo.\u0027 . $key . \u0027 \u003d?\u0027, [$startDay, $endDay, $val]);",
        "        } else {",
        "            $driverId \u003d $driverId-\u003ewhereRaw(\u0027v_driverinfo.\u0027 . $key . \u0027\u003d?\u0027, [$val]);",
        "        };",
        "",
        "        $driverId \u003d $driverId",
        "            -\u003egroupBy(\u0027stat_driving_violation_day.driverId\u0027);",
        "",
        "        $driverId \u003d $this-\u003edoSort($params, $driverId);//排序",
        "        $driverId \u003d $this-\u003efilterPagination($params, $driverId);//分页",
        "",
        "        $id \u003d [];",
        "        foreach ($driverId as $s \u003d\u003e $n) {",
        "            $id[] \u003d $n[\u0027driverId\u0027];",
        "        }",
        "        $data \u003d (new DStatDrivingViolationSummaryForBeiJingByDay())",
        "            -\u003eselectRaw($selectStr)",
        "            -\u003ejoin(\u0027v_driverinfo\u0027, \u0027stat_driving_violation_day.driverId\u0027, \u0027\u003d\u0027, \u0027v_driverinfo.driverId\u0027)",
        "            -\u003ewhere(\u0027stat_driving_violation_day.\u0027.$key, \"\u003d\", $val)",
        "            -\u003ewhereIn(\u0027lineId\u0027, $ids)",
        "            -\u003ewhereIn(\u0027v_driverinfo.driverId\u0027, $id)-\u003ewhereIn(\u0027stat_driving_violation_day.actionType\u0027, $violationTypeArr);",
        "        if (isset($this-\u003eparams[\u0027findVal5\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findVal4\u0027])) {",
        "            $data \u003d $data-\u003ewhereRaw(\u0027stat_date\u003e\u003d? and stat_date\u003c\u003d? and v_driverinfo.\u0027 . $key . \u0027 \u003d?\u0027, [$startDay, $endDay, $val]);",
        "        } else {",
        "            $data \u003d $data-\u003ewhereRaw(\u0027v_driverinfo.\u0027 . $key . \u0027 \u003d?\u0027, [$val]);",
        "        };",
        "        $data \u003d $data-\u003egroupBy(\u0027stat_driving_violation_day.driverId\u0027)",
        "            -\u003egroupBy(\u0027stat_driving_violation_day.actiontype\u0027)",
        "            -\u003eorderBy(\u0027stat_driving_violation_day.driverId\u0027)-\u003eget();",
        "        $cnt \u003d count($data);",
        "        $tmpArr \u003d $this-\u003einitArr();",
        "        $arr \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $keyName \u003d $data[$i]-\u003eactionType;",
        "            $keyVal \u003d $data[$i]-\u003etotalNum;",
        "            $dataTemp \u003d [",
        "                \u0027companyId\u0027 \u003d\u003e $data[$i]-\u003ecompanyId,",
        "                \u0027companyName\u0027 \u003d\u003e $data[$i]-\u003ecompanyName,",
        "                \u0027driverId\u0027 \u003d\u003e $data[$i]-\u003edriverId,",
        "                \u0027driverName\u0027 \u003d\u003e $data[$i]-\u003edriverName,",
        "                \u0027groupName\u0027 \u003d\u003e $data[$i]-\u003egroupName,",
        "                \u0027groupId\u0027 \u003d\u003e $data[$i]-\u003egroupId,",
        "                \u0027lineName\u0027 \u003d\u003e $data[$i]-\u003elineName,",
        "                \u0027lineId\u0027 \u003d\u003e $data[$i]-\u003elineId,",
        "                \u0027subCompanyName\u0027 \u003d\u003e $data[$i]-\u003esubCompanyName,",
        "                \u0027subCompanyId\u0027 \u003d\u003e $data[$i]-\u003esubCompanyId,",
        "            ];",
        "",
        "            if ($i \u003d\u003d 0) {",
        "                $tmpArr \u003d array_merge($tmpArr, $dataTemp);",
        "                $tmpArr \u003d array_merge($tmpArr, [$keyName \u003d\u003e $keyVal]);",
        "            } else {",
        "                if ($data[$i]-\u003edriverId \u003d\u003d $data[$i - 1]-\u003edriverId) {",
        "                    //相等说明为同一个司机",
        "                    $tmpArr \u003d array_merge($tmpArr, $dataTemp);",
        "                    $tmpArr \u003d array_merge($tmpArr, [$keyName \u003d\u003e $keyVal]);",
        "                } else {",
        "                    //不相等说明为不同司机",
        "                    array_push($arr, $tmpArr);",
        "                    //数据初始化",
        "                    $tmpArr \u003d $this-\u003einitArr();",
        "                    $tmpArr \u003d array_merge($tmpArr, $dataTemp);",
        "                    $tmpArr \u003d array_merge($tmpArr, [$keyName \u003d\u003e $keyVal]);",
        "                }",
        "            }",
        "            if ($i \u003d\u003d $cnt - 1) {",
        "                array_push($arr, $tmpArr);",
        "            }",
        "        }",
        "",
        "        $result_sort \u003d [];",
        "        //排序",
        "        foreach ($id as $driverIdVal) {",
        "            foreach ($arr as $arrVal) {",
        "                if ($driverIdVal \u003d\u003d $arrVal[\u0027driverId\u0027]) {",
        "                    $result_sort[] \u003d $arrVal;",
        "                }",
        "            }",
        "        }",
        "        if (isset($this-\u003eparams[\u0027noPage\u0027])) {",
        "            return $result_sort;",
        "        }",
        "",
        "        $arr \u003d [\u0027current_page\u0027 \u003d\u003e $driverId-\u003ecurrentPage(),",
        "            \u0027data\u0027 \u003d\u003e $result_sort,",
        "            \u0027from\u0027 \u003d\u003e $driverId-\u003efirstItem(),",
        "            \u0027last_page\u0027 \u003d\u003e $driverId-\u003elastPage(),",
        "            \u0027next_page_url\u0027 \u003d\u003e $driverId-\u003enextPageUrl(),",
        "            \u0027per_page\u0027 \u003d\u003e $driverId-\u003eperPage(),",
        "            \u0027pre_page_url\u0027 \u003d\u003e $driverId-\u003epreviousPageUrl(),",
        "            \u0027to\u0027 \u003d\u003e $driverId-\u003elastItem(),",
        "            \u0027total\u0027 \u003d\u003e $driverId-\u003etotal()",
        "        ];",
        "",
        "        $arr \u003d $this-\u003eaddDeptHeader3($this-\u003etableName, $arr, $params);",
        "        //隐藏head中车牌号和vin",
        "        foreach ($arr[\u0027head\u0027] as $key \u003d\u003e $val) {",
        "            if ($val[\u0027chinese\u0027] \u003d\u003d \u0027设备号\u0027 || $val[\u0027chinese\u0027] \u003d\u003d \u0027车牌号\u0027 || $val[\u0027chinese\u0027] \u003d\u003d \u0027自编号\u0027) {",
        "                $arr[\u0027head\u0027][$key][\u0027show\u0027] \u003d 0;",
        "            }",
        "        }",
        "        return $arr;",
        "    }",
        "",
        "    public function getViolationeName($param)",
        "    {",
        "        $key \u003d $param[\u0027findKeyEqual1\u0027];",
        "        $val \u003d $param[\u0027findValEqual1\u0027];",
        "        $sql \u003d \"select violationeName from driving_violation_type ",
        "        INNER JOIN v_driverinfo on driving_violation_type.deptid\u003dv_driverinfo.companyDeptId",
        "        where v_driverinfo.\";",
        "        $sql .\u003d $key . \"\u003d\u0027$val\u0027\";",
        "        switch ($param[\u0027violationType\u0027]) {",
        "            case 1:",
        "                $sql .\u003d \u0027 and driving_violation_type.badServiceType\u003d1\u0027;",
        "                break;",
        "            case 2:",
        "                $sql .\u003d \u0027 and driving_violation_type.dangerType\u003d1\u0027;",
        "                break;",
        "            case 3:",
        "                $sql .\u003d \u0027 and driving_violation_type.damageType\u003d1\u0027;",
        "            default:",
        "",
        "        }",
        "        $violation \u003d DB::select($sql . \u0027 GROUP BY violationeName\u0027);",
        "",
        "        $ret \u003d [];",
        "        foreach ($violation as $item \u003d\u003e $value) {",
        "            $ret[] \u003d $value-\u003eviolationeName;",
        "        }",
        "",
        "        return $ret;",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     * @return array数据初始化",
        "     */",
        "    public function initArr()",
        "    {",
        "        $other \u003d [",
        "            \u0027companyId\u0027 \u003d\u003e \"0\",",
        "            \u0027companyName\u0027 \u003d\u003e \"0\",",
        "            \u0027subCompanyId\u0027 \u003d\u003e \"0\",",
        "            \u0027subCompanyName\u0027 \u003d\u003e \"0\",",
        "            \u0027groupId\u0027 \u003d\u003e \"0\",",
        "            \u0027groupName\u0027 \u003d\u003e \"0\",",
        "            \u0027lineId\u0027 \u003d\u003e \"0\",",
        "            \u0027lineName\u0027 \u003d\u003e \"0\",",
        "            \u0027driverId\u0027 \u003d\u003e \"0\",",
        "            \u0027driverName\u0027 \u003d\u003e \"0\",",
        "            \u0027vehicleNo\u0027 \u003d\u003e \"0\",",
        "            \u0027vin\u0027 \u003d\u003e \"0\",",
        "            \u0027openDoorNotStopYet\u0027 \u003d\u003e \"0\",",
        "            \u0027overSpeedonBanma\u0027 \u003d\u003e \"0\",",
        "            \u0027overspeed\u0027 \u003d\u003e \"0\",",
        "            \u0027suddenlyBraking\u0027 \u003d\u003e \"0\",",
        "            \u0027suddenlySpeedUp\u0027 \u003d\u003e \"0\",",
        "            \u0027routeKeepAbilityDown\u0027 \u003d\u003e \"0\",",
        "            \u0027scores\u0027 \u003d\u003e \"0\",",
        "            \u0027shortDistance\u0027 \u003d\u003e \"0\",",
        "            \u0027smokingAlarm\u0027 \u003d\u003e \"0\",",
        "            \u0027startAccelerationRapidly\u0027 \u003d\u003e \"0\",",
        "            \u0027startWithDoorOpen\u0027 \u003d\u003e \"0\",",
        "            \u0027startWithoutBrake\u0027 \u003d\u003e \"0\",",
        "            \u0027RightOnLine\u0027 \u003d\u003e \"0\",",
        "            \u0027areaOverSpeed\u0027 \u003d\u003e \"0\",",
        "            \u0027beSleepy\u0027 \u003d\u003e \"0\",",
        "            \u0027blockCamera\u0027 \u003d\u003e \"0\",",
        "            \u0027calling\u0027 \u003d\u003e \"0\",",
        "            \u0027coasting\u0027 \u003d\u003e \"0\",",
        "            \u0027coastingWithEngineOff\u0027 \u003d\u003e \"0\",",
        "            \u0027danger\u0027 \u003d\u003e \"0\",",
        "            \u0027driveInNight\u0027 \u003d\u003e \"0\",",
        "            \u0027engineOverspeed\u0027 \u003d\u003e \"0\",",
        "            \u0027fatigueDriving\u0027 \u003d\u003e \"0\",",
        "            \u0027headLightOffAtNight\u0027 \u003d\u003e \"0\",",
        "            \u0027idlingWithAirConditionerOpen\u0027 \u003d\u003e \"0\",",
        "            \u0027jumpSite\u0027 \u003d\u003e \"0\",",
        "            \u0027leftOnLine\u0027 \u003d\u003e \"0\",",
        "            \u0027longIdling\u0027 \u003d\u003e \"0\",",
        "            \u0027lookLeftAndRight\u0027 \u003d\u003e \"0\",",
        "            \u0027lowSpeedCrash\u0027 \u003d\u003e \"0\",",
        "            \u0027wrongInSite\u0027 \u003d\u003e \"0\",",
        "            \u0027wrongTrumpet\u0027 \u003d\u003e \"0\",",
        "            \u0027wrongTurnAround\u0027 \u003d\u003e \"0\",",
        "            \u0027noTurnLampOnSite\u0027 \u003d\u003e \"0\",",
        "            \u0027openDoorDuringRunning\u0027 \u003d\u003e \"0\"",
        "        ];",
        "        return $other;",
        "    }",
        "",
        "",
        "    /**",
        "     *API: api/statistic/violationDetails",
        "     * @name: 驾驶员违规详情",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: driverId,description:驾驶员ID",
        "     *parameter2: startDate,description:开始时间",
        "     *parameter3: endDate,description:结束时间",
        "     *parameter4: vehicleNo,description:车牌号",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function violationDetails(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027driverId\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027vehicleNo\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "            \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        $jj \u003d $request-\u003eget(\u0027violationType\u0027);",
        "",
        "        switch ($jj) {",
        "",
        "            case 1:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_bs\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 2:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 3:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_damage\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        }",
        "        \\Log::info(\"驾驶员不规范查询\");",
        "        //历史方式，按天获取",
        "        if (isset($params[\u0027findKey\u0027])) {",
        "            $info \u003d $this-\u003equeryViolationDetails($this-\u003eparams);",
        "        } else {",
        "            //新增方式，按时间段获取",
        "            $info \u003d $this-\u003equeryViolationDetails2($this-\u003eparams);",
        "        }",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "        return $ret;",
        "",
        "",
        "    }",
        "",
        "",
        "    /**",
        "     *API: api/statistic/getDriverActionAnalyseList",
        "     * @name: 查询驾驶员参数绑定列表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:页码",
        "     *parameter2: count,description:行数",
        "     *parameter3: dept_id,description:公司ID",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDriverActionAnalyseList()",
        "    {",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $manageDepts \u003d DB::table(\u0027mauth_dept as a\u0027)",
        "            -\u003ejoin(\u0027mauth_dept as b\u0027, function ($join) {",
        "                $join-\u003eon(\u0027a.lft\u0027, \u0027\u003c\u0027, \u0027b.lft\u0027)-\u003eon(\u0027a.rgt\u0027, \u0027\u003e\u0027, \u0027b.rgt\u0027);",
        "            })",
        "            -\u003ewhere(\u0027a.dept_id\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027dept_id\u0027])",
        "            -\u003eselect(\u0027b.dept_id\u0027)",
        "            -\u003eget();",
        "        $manageDeptsArray \u003d json_decode(json_encode($manageDepts), true);",
        "        $manage \u003d [];",
        "        foreach ($manageDeptsArray as $dept) {",
        "            array_push($manage, $dept[\u0027dept_id\u0027]);",
        "        }",
        "        array_push($manage, $this-\u003eparams[\u0027dept_id\u0027]);",
        "",
        "        $data \u003d (new DStatDrivingConfig())",
        "            -\u003ewhereIn(\u0027dept_id\u0027, $manage)",
        "            -\u003eselect(\u0027dept_id\u0027)",
        "            -\u003edistinct(\u0027dept_id\u0027)",
        "            -\u003eget()-\u003etoArray();",
        "",
        "        $ret \u003d DB::table(\u0027mauth_dept\u0027)-\u003ewhereIn(\u0027dept_id\u0027, $data)-\u003eselect(\u0027name\u0027, \u0027dept_id\u0027, \u0027level\u0027)-\u003eorderBy(\u0027dept_id\u0027);",
        "",
        "        $ret \u003d $this-\u003efilterPagination($this-\u003eparams, $ret);//分页",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    public function deleteDriverActionAnalyseParams()",
        "    {",
        "        $rules \u003d [",
        "            \u0027dept_id\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "        $deptId \u003d $this-\u003eparams[\u0027dept_id\u0027];",
        "        DB::beginTransaction();",
        "        $data \u003d DB::delete(\u0027delete from stat_drivingconfig where dept_id \u003d ?\u0027, [$deptId]);",
        "        DB::commit();",
        "        return $this-\u003esetJsonResponse(SUCCESS);",
        "    }",
        "",
        "",
        "    public function queryViolationDetails2($params)",
        "    {",
        "",
        "        $driverId \u003d $params[\u0027driverId\u0027];",
        "        $startDate \u003d $params[\u0027startDate\u0027];",
        "        $endDate \u003d $params[\u0027endDate\u0027];",
        "        $sqlFirst \u003d \"SELECT driverName as 驾驶员姓名,vehicleNo as 车牌号,vin as 车辆编号 ,deviceId as 车载设备ID ,lineName as 线路名称 ,groupName as 车队名称 ,",
        "                            subCompanyName as 分公司名称 ,companyName as 总公司名称,sum(suddenlyBraking) as 急刹车,sum(suddenlySpeedUp) as 急加速,sum(coastingWithEngineOff) as 熄火滑行,sum(coasting) as 空挡滑行,sum(startAccelerationRapidly) as 起步急加速,",
        "                            sum(overspeed) as 超速,sum(openDoorNotStopYet) as 车辆未停稳开车门,sum(longIdling) as 超长怠速,sum(idlingWithAirConditionerOpen) as 怠速空调,",
        "                           sum(startWithoutBrake) as 启动无刹车,sum(fatigueDriving) as 疲劳驾驶,sum(smokingAlarm) as 吸烟报警,sum(lookLeftAndRight) as 左顾右盼,sum(calling) as 打电话,sum(beSleepy) as 打哈欠,sum(blockCamera) as 摄像头遮挡,",
        "                            sum(wrongTrumpet) as 不文明鸣笛,sum(overSpeedonBanma) as 斑马线超速,sum(leftOnLine) as 车道左压线,sum(RightOnLine) as 车道右压线,sum(lowSpeedCrash) as 低速碰撞,sum(shortDistance) as 车距过近,sum(wrongInSite) as 不规范进出站,",
        "                            sum(wrongTurnAround) as 不规范转弯,sum(routeKeepAbilityDown) as 车道保持能力下降,sum(areaOverSpeed) as 区域超速,sum(jumpSite) as 越站,sum(outLine) as 线路偏移,sum(startWithDoorOpen) as 起步不关车门,sum(noTurnLampOnSite) as 进出站未打转向灯",
        "                            FROM v_stat_driving_violation_times_forbeijing_byday  \";",
        "        $fixedCondtion \u003d \" where driverId\u003d$driverId \";",
        "        $dataconditon1 \u003d \"stat_date \u003e\u003d \u0027$startDate\u0027 \";",
        "        $dataconditon2 \u003d \"stat_date \u003c\u003d \u0027$endDate\u0027 \";",
        "        $sqlSecond \u003d $sqlFirst . $fixedCondtion . \" and \" . $dataconditon1 . \" and \" . $dataconditon2;",
        "        if (!empty($params[\u0027vehicleNo\u0027])) {",
        "            $sqlSecond .\u003d \" and vehicleNo \u003d \u0027\" . $params[\u0027vehicleNo\u0027] . \"\u0027\";",
        "        }",
        "        $sqlLast \u003d DB::select($sqlSecond);",
        "        return $sqlLast[0];",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportDriverActionFrequency2",
        "     * @name: 驾驶员不规范操作频次统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: count,description:行数",
        "     *parameter2: sortKey,description:排序键",
        "     *parameter3: sortVal,description:排序值",
        "     *parameter4: findKey5,description:查询键",
        "     *parameter5: findKey4,description:查询键",
        "     *parameter6: findVal4,description:查询值",
        "     *parameter7: findVal5,description:查询值",
        "     *parameter8: violationType,description:违规类型",
        "     *parameter9: findKeyEqual1,description:查询键",
        "     *parameter10: findValEqual1,description:查询值",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportDriverActionFrequency2(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "            \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        $jj \u003d $request-\u003eget(\u0027violationType\u0027);",
        "",
        "        switch ($jj) {",
        "            case -1:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_all\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "            case 1:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_bs\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 2:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_danger\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "                break;",
        "            case 3:",
        "                $this-\u003epredo(\u0027v_stat_driving_violation_times_forbeijing_damage\u0027,",
        "                    \u0027v_stat_driving_violation_times_forbeijing_byday\u0027, 25);",
        "",
        "        }",
        "",
        "        \\Log::info(\"驾驶员不规范查询\");",
        "",
        "        // $data \u003d $this-\u003equeryDepts2($this-\u003eparams);",
        "        if (isset($this-\u003eparams[\u0027summaryType\u0027]) \u0026\u0026 $this-\u003eparams[\u0027summaryType\u0027] \u003d\u003d 1) {",
        "            $data[\u0027body\u0027][\u0027data\u0027] \u003d $this-\u003edriverActionFrequency2SummaryData($request);",
        "",
        "        } else {",
        "            $data \u003d $this-\u003equerySumDriverAction($this-\u003eparams);",
        "        }",
        "",
        "",
        "        //2019-05-16修复驾驶员违规导出",
        "        $data \u003d $data[\u0027body\u0027];",
        "",
        "        //2019-05-16修复驾驶员违规导出",
        "        $records \u003d $data[\u0027data\u0027];",
        "",
        "//        $records \u003d end($data);",
        "",
        "",
        "        \\Log::info(\"导出驾驶员不规范列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead2($this-\u003etableName, $I18N, $records, $jj);//excel表格导出",
        "",
        "        if (count($records) \u003e 0) {",
        "            foreach ($records as $key \u003d\u003e $val) {",
        "                unset($records[$key][\u0027车牌号\u0027]);",
        "                unset($records[$key][\u0027自编号\u0027]);",
        "            }",
        "        }",
        "        //VTF-1337 2020-04-24取消进出站无转向灯",
        "//        for ($index \u003d 0; $index \u003c count($records); $index++) {",
        "//            if (!isset($records[$index][\u0027进出站无转向灯\u0027])) {",
        "//                $records[$index][\u0027进出站无转向灯\u0027] \u003d 0;",
        "//            }",
        "//        }",
        "        $cnt \u003d 15;",
        "",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        // $title \u003d \u0027违规明细\u0027;",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if (!isset($records[0][\u0027总公司\u0027]) || $records[0][\u0027总公司\u0027] \u003d\u003d 0) {",
        "            if (isset($this-\u003eparams[\u0027findkey\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_driverinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027findkey\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findVal\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027deptid\u0027])) {",
        "                $deptType \u003d isset($this-\u003eparams[\u0027depttype\u0027]) ? $this-\u003eparams[\u0027depttype\u0027] : \u0027lineDeptId\u0027;",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($deptType, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027findKeyEqual1\u0027]) || isset($this-\u003eparams[\u0027findValEqual1\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_driverinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            }",
        "            $records[0][\u0027总公司\u0027] \u003d $recordsCompanyName-\u003ecompanyName;",
        "        }",
        "        $title \u003d $records[0][\u0027总公司\u0027] . \"---\";",
        "",
        "        $title1 \u003d \"违规明细报表导出\";",
        "        /* $title1\u003d\"违规明细报表导出\";",
        "         if(isset($data[\u0027title\u0027])){",
        "             $title1\u003d$data[\u0027title\u0027];",
        "         }",
        "         $title.\u003d$title1;*/",
        "",
        "        /* if ($data[\u0027data\u0027]\u003d\u003d[]){",
        "             $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027,\u0027\u003d\u0027,$this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "             $lins\u003d[$recordsCompanyName];",
        "             $data[\u0027data\u0027]\u003d $lins;",
        "         }",
        "         $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";*/",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日违规明细报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日违规明细报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天违规明细报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月违规明细报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月违规明细报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年违规明细报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年违规明细报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \u0027违规明细报表---\u0027 . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "",
        "                } else if (isset($this-\u003eparams[\u0027findVal5\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findVal4\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \u0027违规明细报表---\u0027 . $this-\u003eparams[\u0027findVal5\u0027] . \"至\" . $this-\u003eparams[\u0027findVal4\u0027];",
        "                }",
        "        }",
        "        //VTB-980----2020-04-24",
        "        switch ($jj) {",
        "            case 1:",
        "                $title \u003d str_replace(\"违规明细\", \"不良服务\", $title);",
        "                break;",
        "            case 2:",
        "                $title \u003d str_replace(\"违规明细\", \"危险驾驶\", $title);",
        "                break;",
        "            case 3:",
        "                $title \u003d str_replace(\"违规明细\", \"损车驾驶\", $title);",
        "                break;",
        "            case -1:",
        "                $title \u003d str_replace(\"违规明细\", \"全部违规明细\", $title);",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "",
        "",
        "        //20190425 驾驶员违规统计由月更改为日 注释",
        "//        if (isset($this-\u003eparams[\u0027findKey4\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findKey5\u0027])) {",
        "//            $title \u003d str_replace(\u0027-01\u0027, \u0027到\u0027, $this-\u003eparams[\u0027findVal5\u0027]);",
        "//            $title .\u003d str_replace(\u0027-01\u0027, \u0027违规明细\u0027, $this-\u003eparams[\u0027findVal4\u0027]);",
        "//",
        "//        } else {",
        "//            foreach ($this-\u003eparams as $key \u003d\u003e $val) {",
        "//                if ($val \u003d\u003d \u0027stat_date\u0027) {",
        "//                    $target \u003d str_replace(\u0027Key\u0027, \u0027Val\u0027, $key);",
        "//                    foreach ($this-\u003eparams as $key1 \u003d\u003e $val1) {",
        "//                        if ($key1 \u003d\u003d $target) {",
        "//                            $title \u003d str_replace(\u0027-01\u0027, \u0027违规明细\u0027, $val1);",
        "//                        }",
        "//                    }",
        "//                }",
        "//            }",
        "//        }",
        "//",
        "",
        "        /*Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003esetValueOfCell(\"$title\", \u0027A\u0027, 1);",
        "",
        "                //标题居中",
        "                $sheet-\u003ecells(\u0027A1:\u0027 . $location . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName                         时间：$first\", $location, 2);",
        "",
        "",
        "                $sheet-\u003efromArray($records, null, \u0027A3\u0027);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);*/",
        "",
        "        /* Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "             $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                 $sheet-\u003esetAutoSize(false);",
        "                 $sheet-\u003emergeCells(\"A1:$location\".\u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 $sheet-\u003emergeCells(\"A2:$location\".\u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 // $sheet-\u003emergeCells(\"A3:$location\".\u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                 $style_array \u003d array(",
        "                     \u0027borders\u0027 \u003d\u003e array(",
        "                         \u0027allborders\u0027 \u003d\u003e array(",
        "                             \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                         )",
        "                     ));",
        "                 $sheet-\u003egetStyle(\"A3:$location\" . (count($records) + 3))-\u003eapplyFromArray($style_array);",
        "                 $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                 $userName \u003d Auth::user()-\u003ereal_name;",
        "                 $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                 //合并第一行",
        "                 $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                 $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                     $cells-\u003esetAlignment(\u0027center\u0027);",
        "                     $cells-\u003esetFontSize(15);",
        "                 });",
        "                 $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                 $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                 $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                     $cells-\u003esetAlignment(\u0027center\u0027);",
        "                     $cells-\u003esetFontSize(13);",
        "                 });",
        "                 //第三行开始填充数据",
        "                 $recordsNum \u003d count($records) + 4;",
        "                 $sheet-\u003efromArray($records, null, \u0027A3\u0027);",
        "                 //$sheet-\u003esetAutoSize(true);",
        "                 $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 //设置第二行值",
        "                 $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                 $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                     $cells-\u003esetAlignment(\u0027right\u0027);",
        "                     $cells-\u003esetFontSize(12);",
        "                 });",
        "                 $sheet-\u003egetAutosize();",
        "             });",
        "         })-\u003eexport(\u0027xlsx\u0027);*/",
        "",
        "    }",
        "",
        "    /**",
        "     * 驾驶员不规范操作频次统计  forbeijing",
        "     *",
        "     * @param \\Illuminate\\Http\\Request $request",
        "     */",
        "    public function exportDriverActionDetail(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $ret \u003d $this-\u003edriverActionDetailByDate($this-\u003eparams);",
        "",
        "        //2019-05-16修复驾驶员违规导出",
        "",
        "        //2019-05-16修复驾驶员违规导出",
        "        $records \u003d $ret[\u0027data\u0027];",
        "",
        "//        $records \u003d end($data);",
        "",
        "",
        "        \\Log::info(\"导出驾驶员违规明细\");",
        "",
        "",
        "        $I18N \u003d 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027driverActionDetail\u0027, $I18N, $records);//excel表格导出",
        "",
        "        $cnt \u003d 15;",
        "",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        // $title \u003d \u0027违规明细\u0027;",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        $company \u003d \u0027\u0027;",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if (!isset($records[0][\u0027总公司\u0027]) || $records[0][\u0027总公司\u0027] \u003d\u003d 0) {",
        "            if (isset($this-\u003eparams[\u0027findkey\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_driverinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027findkey\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findVal\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027deptid\u0027])) {",
        "                $deptType \u003d isset($this-\u003eparams[\u0027depttype\u0027]) ? $this-\u003eparams[\u0027depttype\u0027] : \u0027lineDeptId\u0027;",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($deptType, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027findKeyEqual1\u0027]) || isset($this-\u003eparams[\u0027findValEqual1\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_driverinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027driverId\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_driverinfo_all\u0027)-\u003ewhere(\u0027driverId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027driverId\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027companyId\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027companyDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027companyId\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027subCompanyId\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027subCompanyDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027subCompanyId\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027groupId\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027groupDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027groupDeptId\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else if (isset($this-\u003eparams[\u0027lineId\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027lineDeptId\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            }",
        "            $company \u003d $recordsCompanyName-\u003ecompanyName;",
        "        } else {",
        "            $company \u003d $records[0][\u0027总公司\u0027];",
        "        }",
        "        $title \u003d $company . \"---\";",
        "",
        "        $title1 \u003d \"违规明细报表导出\";",
        "        /* $title1\u003d\"违规明细报表导出\";",
        "         if(isset($data[\u0027title\u0027])){",
        "             $title1\u003d$data[\u0027title\u0027];",
        "         }",
        "         $title.\u003d$title1;*/",
        "",
        "        /* if ($data[\u0027data\u0027]\u003d\u003d[]){",
        "             $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027,\u0027\u003d\u0027,$this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "             $lins\u003d[$recordsCompanyName];",
        "             $data[\u0027data\u0027]\u003d $lins;",
        "         }",
        "         $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";*/",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日违规明细报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日违规明细报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天违规明细报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月违规明细报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月违规明细报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年违规明细报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年违规明细报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \u0027违规明细报表---\u0027 . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "",
        "                } else if (isset($this-\u003eparams[\u0027findVal5\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findVal4\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \u0027违规明细报表---\u0027 . $this-\u003eparams[\u0027findVal5\u0027] . \"至\" . $this-\u003eparams[\u0027findVal4\u0027];",
        "                } else {",
        "                    $title .\u003d \u0027违规明细报表\u0027;",
        "                }",
        "        }",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "",
        "",
        "        //20190425 驾驶员违规统计由月更改为日 注释",
        "//        if (isset($this-\u003eparams[\u0027findKey4\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findKey5\u0027])) {",
        "//            $title \u003d str_replace(\u0027-01\u0027, \u0027到\u0027, $this-\u003eparams[\u0027findVal5\u0027]);",
        "//            $title .\u003d str_replace(\u0027-01\u0027, \u0027违规明细\u0027, $this-\u003eparams[\u0027findVal4\u0027]);",
        "//",
        "//        } else {",
        "//            foreach ($this-\u003eparams as $key \u003d\u003e $val) {",
        "//                if ($val \u003d\u003d \u0027stat_date\u0027) {",
        "//                    $target \u003d str_replace(\u0027Key\u0027, \u0027Val\u0027, $key);",
        "//                    foreach ($this-\u003eparams as $key1 \u003d\u003e $val1) {",
        "//                        if ($key1 \u003d\u003d $target) {",
        "//                            $title \u003d str_replace(\u0027-01\u0027, \u0027违规明细\u0027, $val1);",
        "//                        }",
        "//                    }",
        "//                }",
        "//            }",
        "//        }",
        "//",
        "",
        "        /*Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003esetValueOfCell(\"$title\", \u0027A\u0027, 1);",
        "",
        "                //标题居中",
        "                $sheet-\u003ecells(\u0027A1:\u0027 . $location . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName                         时间：$first\", $location, 2);",
        "",
        "",
        "                $sheet-\u003efromArray($records, null, \u0027A3\u0027);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);*/",
        "",
        "        /* Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "             $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                 $sheet-\u003esetAutoSize(false);",
        "                 $sheet-\u003emergeCells(\"A1:$location\".\u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 $sheet-\u003emergeCells(\"A2:$location\".\u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 // $sheet-\u003emergeCells(\"A3:$location\".\u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                 $style_array \u003d array(",
        "                     \u0027borders\u0027 \u003d\u003e array(",
        "                         \u0027allborders\u0027 \u003d\u003e array(",
        "                             \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                         )",
        "                     ));",
        "                 $sheet-\u003egetStyle(\"A3:$location\" . (count($records) + 3))-\u003eapplyFromArray($style_array);",
        "                 $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                 $userName \u003d Auth::user()-\u003ereal_name;",
        "                 $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                 //合并第一行",
        "                 $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                 $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                     $cells-\u003esetAlignment(\u0027center\u0027);",
        "                     $cells-\u003esetFontSize(15);",
        "                 });",
        "                 $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                 $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                 $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                     $cells-\u003esetAlignment(\u0027center\u0027);",
        "                     $cells-\u003esetFontSize(13);",
        "                 });",
        "                 //第三行开始填充数据",
        "                 $recordsNum \u003d count($records) + 4;",
        "                 $sheet-\u003efromArray($records, null, \u0027A3\u0027);",
        "                 //$sheet-\u003esetAutoSize(true);",
        "                 $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 //设置第二行值",
        "                 $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                 $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                     $cells-\u003esetAlignment(\u0027right\u0027);",
        "                     $cells-\u003esetFontSize(12);",
        "                 });",
        "                 $sheet-\u003egetAutosize();",
        "             });",
        "         })-\u003eexport(\u0027xlsx\u0027);*/",
        "",
        "    }",
        "",
        "    /**",
        "     * 所有驾驶员不规范操作频次综合统计",
        "     *",
        "     * @param \\Illuminate\\Http\\Request $request",
        "     */",
        "    public function driverAllActionFrequency(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027type\u0027 \u003d\u003e \u0027required\u0027, // 数据类型",
        "            \u0027stat_date\u0027 \u003d\u003e \u0027required\u0027, // 统计日期",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatDrivingFrequency([], $request))-\u003egetData($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/driverAllActionFrequency2",
        "     * @name: 驾驶员违规趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:查询类型",
        "     *parameter2: deptid,description:线路ID",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function driverAllActionFrequency2(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "//        $rules \u003d [",
        "//            \u0027type\u0027 \u003d\u003e \u0027required\u0027 // 数据类型",
        "//        ];",
        "//",
        "//        $this-\u003eapiParamVerify($rules);",
        "        //20190424修改 if为月统计  else中为日统计",
        "        if (isset($this-\u003eparams[\u0027stat_date\u0027])) {",
        "            $ret \u003d (new BStatDrivingFrequency([], $request))-\u003egetData2($this-\u003eparams);",
        "        } else {",
        "            $ret \u003d (new BStatDrivingFrequency([], $request))-\u003egetData3($this-\u003eparams);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    /**",
        "     * 车辆里程统计",
        "     *",
        "     * @param \\Illuminate\\Http\\Request $request",
        "     */",
        "    public function vehicleMiles()",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_vehiclemiles\u0027, \u0027v_vehiclemiles\u0027, 12);",
        "",
        "        \\Log::info(\"里程统计查询\");",
        "",
        "        $info \u003d $this-\u003equeryDepts($this-\u003eparams);",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     * 车辆里程统计GPS里程校准",
        "     *",
        "     *",
        "     * @param \\Illuminate\\Http\\Request $request",
        "     */",
        "    public function editVehicleMiles()",
        "    {",
        "",
        "",
        "        \\Log::info(\"里程GPS校准\");",
        "",
        "        DB::table(\u0027t_vehiclemiles\u0027)",
        "            -\u003ewhere(\u0027vehicledeviceid\u0027, $this-\u003eparams[\u0027deviceId\u0027])",
        "            -\u003eupdate([\u0027gpsmiles\u0027 \u003d\u003e $this-\u003eparams[\u0027gpsMiles\u0027], \u0027adjustDate\u0027 \u003d\u003e date(\"Y-m-d\")]);",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, 1);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/energyConsume",
        "     * @name: 车辆能耗统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: findKeyEqual1,description:查询类型",
        "     *parameter2: findValEqual1,description:类型值",
        "     *parameter3: findKey,description:查询类型",
        "     *parameter4: findVal,description:类型值",
        "     *parameter5: findKey3,description:查询类型",
        "     *parameter6: findVal3,description:类型值",
        "     *parameter7: sortKey,description:排序字段",
        "     *parameter8: sortVal,description:排序类型",
        "     *parameter9: page,description:页码",
        "     *parameter10: count,description:行数",
        "     *parameter11: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function energyConsume(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_vehicleenerysum\u0027, \u0027v_vehicleenerysum_new\u0027, 14);",
        "",
        "        \\Log::info(\"能耗统计查询\");",
        "        $thisParams \u003d $this-\u003eparams;",
        "        if (isset($thisParams[\u0027timeType\u0027])) {",
        "            if ($thisParams[\u0027timeType\u0027] \u003d\u003d 6) {",
        "                $thisParams[\u0027findKey4\u0027] \u003d \u0027stat_date\u0027;",
        "                $thisParams[\u0027findKey5\u0027] \u003d \u0027stat_date\u0027;",
        "            }",
        "        }",
        "        //      $info \u003d $this-\u003equeryDepts($thisParams);",
        "        $records \u003d DB::table($this-\u003ev_tableName);",
        "",
        "        if (isset($thisParams[\u0027timeType\u0027])) $records \u003d $records-\u003ewhereRaw(\u00271\u003d1\u0027 . $this-\u003egetWhereStrByTimeType(\u0027stat_date\u0027, $thisParams[\u0027timeType\u0027], null, null));",
        "        $records \u003d $this-\u003efilterKeywords($thisParams, $records);//关键字过滤",
        "        $records \u003d $this-\u003edoSort($thisParams, $records);//排序",
        "        if (isset($thisParams[\u0027deptKey\u0027]) \u0026\u0026 isset($thisParams[\u0027deptVal\u0027])) {",
        "            $records \u003d $records-\u003ewhere($thisParams[\u0027deptKey\u0027], \u0027\u003d\u0027, $thisParams[\u0027deptVal\u0027]);",
        "        }",
        "",
        "        $records \u003d $this-\u003efilterPagination($thisParams, $records);//分页",
        "        $info \u003d $this-\u003eaddDeptHeader($this-\u003etableName, $records, $thisParams);//添加中英文表头",
        "        $body \u003d (array)$info[\"body\"];",
        "        foreach ($body[\"\\x00*\\x00items\"] as $val) {",
        "            // $deviceIdString.\u003d$val-\u003edeviceId.\",\";",
        "            switch ($val-\u003emotorType) {",
        "                case 1;",
        "                    $val-\u003emotorType \u003d \u0027燃油车\u0027;",
        "                    break;",
        "                case 2;",
        "                    $val-\u003emotorType \u003d \u0027电车\u0027;",
        "                    break;",
        "                case 3;",
        "                    $val-\u003emotorType \u003d \u0027油电混合动力车\u0027;",
        "                    break;",
        "                case 4;",
        "                    $val-\u003emotorType \u003d \u0027燃气车\u0027;",
        "                    break;",
        "                case 5;",
        "                    $val-\u003emotorType \u003d \u0027气电混合动力车\u0027;",
        "                    break;",
        "            }",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportEnergyConsume",
        "     * @name: 导出车辆能耗统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: count,description:行数",
        "     *parameter2: findkey,description:查询键",
        "     *parameter3: findVal,description:查询值",
        "     *parameter4: startDate,description:开始时间",
        "     *parameter5: endDate,description:结束时间",
        "     *parameter6: findKeyEqual1,description:查询键",
        "     *parameter7: findValEqual1,description:查询值",
        "     *parameter8: depttype,description:组织类型",
        "     *parameter8: deptid,description:组织ID",
        "     *parameter8: violationType,description:违规类型",
        "     *parameter8: timeType,description:时间类型",
        "     *parameter8: findKey4,description:查询键",
        "     *parameter8: findKey5,description:查询键",
        "     *parameter8: findVal4,description:查询值",
        "     *parameter8: findVal5,description:查询值",
        "     *parameter8: deptKey,description:组织键",
        "     *parameter8: deptVal,description:组织值",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportEnergyConsume(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_vehicleenerysum\u0027, \u0027v_vehicleenerysum_new\u0027, 14);",
        "",
        "        \\Log::info(\"能耗统计查询\");",
        "        $thisParams \u003d $this-\u003eparams;",
        "        if (isset($thisParams[\u0027timeType\u0027])) {",
        "            if ($thisParams[\u0027timeType\u0027] \u003d\u003d 6) {",
        "                $thisParams[\u0027findKey4\u0027] \u003d \u0027stat_date\u0027;",
        "                $thisParams[\u0027findKey5\u0027] \u003d \u0027stat_date\u0027;",
        "            }",
        "        }",
        "",
        "        $data \u003d $this-\u003equeryDepts($thisParams);",
        "        //$data \u003d $this-\u003equeryDepts($this-\u003eparams);",
        "",
        "        $data \u003d $data[\u0027body\u0027]-\u003etoarray();",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出能耗明细列表\");",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "",
        "            switch ($val-\u003emotorType) {",
        "                case 1;",
        "                    $val-\u003emotorType \u003d \u0027燃油车\u0027;",
        "                    break;",
        "                case 2;",
        "                    $val-\u003emotorType \u003d \u0027电车\u0027;",
        "                    break;",
        "                case 3;",
        "                    $val-\u003emotorType \u003d \u0027油电混合动力车\u0027;",
        "                    break;",
        "                case 4;",
        "                    $val-\u003emotorType \u003d \u0027燃气车\u0027;",
        "                    break;",
        "                case 5;",
        "                    $val-\u003emotorType \u003d \u0027气电混合动力车\u0027;",
        "                    break;",
        "            }",
        "",
        "",
        "        }",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        /*   $title \u003d \u0027所有能耗统计报表\u0027;",
        "           // 只支持昨日查询",
        "           if (isset($this-\u003eparams[\u0027findKey4\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findKey5\u0027])) {",
        "               //dd($this-\u003eparams[\u0027findVal5\u0027]);",
        "               $title \u003d substr_replace($this-\u003eparams[\u0027findVal5\u0027], \u0027到\u0027, -3, +3);",
        "",
        "               //$title \u003d str_replace(\u0027-01\u0027, \u0027到\u0027, $this-\u003eparams[\u0027findVal5\u0027]);",
        "",
        "               $title .\u003d str_replace(\u0027-01\u0027, \u0027能耗统计报表\u0027, $this-\u003eparams[\u0027findVal4\u0027]);",
        "",
        "           } else {",
        "",
        "               foreach ($this-\u003eparams as $key \u003d\u003e $val) {",
        "                   if ($val \u003d\u003d \u0027stat_date\u0027) {",
        "                       $target \u003d str_replace(\u0027Key\u0027, \u0027Val\u0027, $key);",
        "                       foreach ($this-\u003eparams as $key1 \u003d\u003e $val1) {",
        "                           if ($key1 \u003d\u003d $target) {",
        "                               $title \u003d str_replace(\u0027-01\u0027, \u0027\u0027, $val1) . \u0027能耗统计报表\u0027;",
        "",
        "                           }",
        "                       }",
        "                   }",
        "               }",
        "           }",
        "",
        "           Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "               $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "",
        "                   $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                   $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                   $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                   $sheet-\u003esetValueOfCell(\"                                                                             \" . $title, \u0027A\u0027, 1);",
        "                   $sheet-\u003esetValueOfCell(\"制表人:$userName  时间：$first\", \u0027H\u0027, 2);",
        "",
        "                   $sheet-\u003efromArray($records, null, \u0027A3\u0027);",
        "                   $sheet-\u003esetAutoSize(true);",
        "               });",
        "           })-\u003eexport(\u0027xlsx\u0027);*/",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日能耗明细报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日能耗明细报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天能耗明细报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月能耗明细报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月能耗明细报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年能耗统计报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年能耗统计报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"能耗明细报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "            $records[$key][\u0027标准能耗\u0027] \u003d \u0027\u0027 . $val[\u0027标准能耗\u0027];",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027A\u0027)-\u003esetWidth(30);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/energyConsumeCompare",
        "     * @name: 车辆能耗统计-获取比对数据",
        "     * @table: t_vehicleinfo:车辆信息表，stat_energy_compare:能耗分析小时统计表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: vehicleNos,description:车牌号",
        "     *parameter2: date,description:时间",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function energyConsumeCompare(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2\u0027, // 数据类型",
        "            \u0027date\u0027 \u003d\u003e \u0027required\u0027, // 日期",
        "            \u0027vehicleNos\u0027 \u003d\u003e \u0027required\u0027,",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatEnergyConsume([], $request))-\u003egetData($this-\u003eparams);",
        "",
        "        foreach ($ret as $key \u003d\u003e $val) {",
        "",
        "            $records \u003d (array)DB::table(\u0027t_vehicleinfo\u0027)-\u003eselect(\u0027deviceid\u0027, \u0027motorType\u0027)-\u003ewhere(\u0027vehicleNo\u0027, $key)-\u003eget()[0];",
        "            if (empty($records)) {",
        "                $records \u003d [\u0027deviceid\u0027 \u003d\u003e \u0027\u0027, \u0027motortype\u0027 \u003d\u003e \u0027\u0027];",
        "            }",
        "            $deviceId \u003d $records[\u0027deviceid\u0027];",
        "            $motortype \u003d $records[\u0027motorType\u0027];",
        "            $timetype \u003d $this-\u003eparams[\u0027timeType\u0027];",
        "",
        "",
        "            foreach ($val as $key1 \u003d\u003e $val1) {",
        "",
        "                if (empty($val1)) {",
        "                    $ret[\"$key\"][\"$key1\"] \u003d [",
        "                        \u0027vehicleNo\u0027 \u003d\u003e $key,",
        "                        \u0027deviceId\u0027 \u003d\u003e $deviceId,",
        "                        \u0027motortype\u0027 \u003d\u003e $motortype,",
        "                        \u0027timetype\u0027 \u003d\u003e $timetype,",
        "                        \u0027time\u0027 \u003d\u003e $key1,",
        "                        \u0027stat_date\u0027 \u003d\u003e $key1,",
        "                        \u0027gasAvg\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027gasHundredMiles\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027gasTotal\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027fuleAvg\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027fuleHundredMiles\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027fuleTotal\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027elecAvg\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027elecHundredMiles\u0027 \u003d\u003e \u00270\u0027,",
        "                        \u0027elecTotal\u0027 \u003d\u003e \u00270\u0027,",
        "                    ];",
        "                }",
        "            }",
        "        }",
        "",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "        return $ret;",
        "    }",
        "",
        "",
        "    /**",
        "     * 获取某些车辆某段时间的某些Can数据",
        "     */",
        "    public function getVehicleCanData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027startTime\u0027 \u003d\u003e \u0027required\u0027, // 开始时间",
        "            \u0027stopTime\u0027 \u003d\u003e \u0027required\u0027, // 结束时间",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required\u0027, // 数据类型",
        "            \u0027vehicledeviceid\u0027 \u003d\u003e \u0027required\u0027, // 车辆ID",
        "            \u0027indicators\u0027 \u003d\u003e \u0027required\u0027,//指标",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatVehicleCanData([], $request))-\u003egetSomeData($this-\u003eparams);",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/energySaveAnalyse",
        "     * @name: 节能分析",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: findKey,description:查询键",
        "     *parameter2: findVal,description:查询值",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: findKey2,description:查询键",
        "     *parameter6: findVal2,description:查询值",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function energySaveAnalyse(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_stat_energy_saving_summary\u0027, \u0027v_stat_energy_saving_summary\u0027, 16);",
        "        \\Log::info(\"节能分析查询\");",
        "        $thisParams \u003d $this-\u003eparams;",
        "        $records \u003d DB::table($this-\u003ev_tableName);",
        "        if (isset($thisParams[\u0027timeType\u0027])) {",
        "            if ($thisParams[\u0027timeType\u0027] \u003d\u003d 6) {",
        "                $thisParams[\u0027findKey4\u0027] \u003d \u0027stat_date\u0027;",
        "                $thisParams[\u0027findKey5\u0027] \u003d \u0027stat_date\u0027;",
        "            }",
        "            $records \u003d $records-\u003ewhereRaw(\u00271\u003d1\u0027 . $this-\u003egetWhereStrByTimeType(\u0027stat_date\u0027, $thisParams[\u0027timeType\u0027], null, null));",
        "        }",
        "        // $info\u003d $this-\u003equeryDepts($thisParams);",
        "        $records \u003d $this-\u003efilterKeywords($thisParams, $records);//关键字过滤",
        "        $records \u003d $this-\u003edoSort($thisParams, $records);//排序",
        "        $records \u003d $this-\u003efilterPagination($thisParams, $records);//分页",
        "        $info \u003d $this-\u003eaddDeptHeader($this-\u003etableName, $records, $thisParams);//添加中英文表头",
        "        $body \u003d (array)$info[\"body\"];",
        "        foreach ($body[\"\\x00*\\x00items\"] as $val) {",
        "            $val-\u003estat_date \u003d substr_replace($val-\u003estat_date, \u0027\u0027, -3, +3);",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportEnergySaveAnalyse",
        "     * @name: 导出节能分析统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: count,description:行数",
        "     *parameter2: findkey,description:查询键",
        "     *parameter3: findVal,description:查询值",
        "     *parameter4: startDate,description:开始时间",
        "     *parameter5: endDate,description:结束时间",
        "     *parameter6: findKeyEqual1,description:查询键",
        "     *parameter7: findValEqual1,description:查询值",
        "     *parameter8: depttype,description:组织类型",
        "     *parameter8: deptid,description:组织ID",
        "     *parameter8: violationType,description:违规类型",
        "     *parameter8: timeType,description:时间类型",
        "     *parameter8: findKey4,description:查询键",
        "     *parameter8: findKey5,description:查询键",
        "     *parameter8: findVal4,description:查询值",
        "     *parameter8: findVal5,description:查询值",
        "     *parameter8: deptKey,description:组织键",
        "     *parameter8: deptVal,description:组织值",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportEnergySaveAnalyse(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_stat_energy_saving_summary\u0027, \u0027v_stat_energy_saving_summary\u0027, 16);",
        "",
        "        \\Log::info(\"节能分析查询\");",
        "        $thisParams \u003d $this-\u003eparams;",
        "        if (isset($thisParams[\u0027timeType\u0027])) {",
        "            if ($thisParams[\u0027timeType\u0027] \u003d\u003d 6) {",
        "                $thisParams[\u0027findKey4\u0027] \u003d \u0027stat_date\u0027;",
        "                $thisParams[\u0027findKey5\u0027] \u003d \u0027stat_date\u0027;",
        "            }",
        "        }",
        "        $data \u003d $this-\u003equeryDepts($thisParams);",
        "        // $data \u003d $this-\u003equeryDepts($this-\u003eparams);",
        "",
        "        //   $records \u003d end($data);",
        "        $data \u003d $data[\u0027body\u0027]-\u003etoarray();",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出节能分析列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        /*$title \u003d \u0027所有节能分析计报表\u0027;",
        "        if (isset($this-\u003eparams[\u0027findKey4\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findKey5\u0027])) {",
        "            // $title \u003d str_replace(\u0027-01\u0027, \u0027到\u0027, $this-\u003eparams[\u0027findVal5\u0027]);",
        "            $title \u003d substr_replace($this-\u003eparams[\u0027findVal5\u0027], \u0027到\u0027, -3, +3);",
        "            $title .\u003d str_replace(\u0027-01\u0027, \u0027节能分析报表\u0027, $this-\u003eparams[\u0027findVal4\u0027]);",
        "",
        "        } else {",
        "            foreach ($this-\u003eparams as $key \u003d\u003e $val) {",
        "                if ($val \u003d\u003d \u0027stat_date\u0027) {",
        "                    $target \u003d str_replace(\u0027Key\u0027, \u0027Val\u0027, $key);",
        "                    foreach ($this-\u003eparams as $key1 \u003d\u003e $val1) {",
        "                        if ($key1 \u003d\u003d $target) {",
        "                            $title \u003d str_replace(\u0027-01\u0027, \u0027节能分析报表\u0027, $val1);",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003esetValueOfCell(\"                                                                                                                                                            \" . $title, \u0027A\u0027, 1);",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName  时间：$first\", \u0027P\u0027, 2);",
        "",
        "                $sheet-\u003efromArray($records, null, \u0027A3\u0027);",
        "",
        "",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);*/",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            if (isset($this-\u003eparams[\u0027findkey\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_vehicleinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027findkey\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findVal\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            } else {",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            }",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日节能分析报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日节能分析报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天节能分析报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月节能分析报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月节能分析报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年节能分析报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年节能分析报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"节能分析报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027G\u0027)-\u003esetWidth(20);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDrivingChartData",
        "     * @name: 行车图表数据获取",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: indicators,description:指示",
        "     *parameter2: startTime,description:开始时间",
        "     *parameter3: stopTime,description:结束时间",
        "     *parameter4: isAddUnit,description:单位",
        "     *parameter5: vehicledeviceid,description:车辆设备id",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDrivingChartData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027startTime\u0027 \u003d\u003e \u0027required\u0027, // 开始时间",
        "            \u0027stopTime\u0027 \u003d\u003e \u0027required\u0027, // 结束时间",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required\u0027, // 数据类型",
        "            \u0027vehicledeviceid\u0027 \u003d\u003e \u0027required\u0027, // 车辆ID",
        "            \u0027indicators\u0027 \u003d\u003e \u0027required\u0027,//指标",
        "",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $this-\u003eparams[\u0027isAddUnit\u0027] \u003d true;",
        "",
        "        $original_data \u003d (new BStatVehicleCanData([], $request))-\u003egetSomeData($this-\u003eparams);",
        "",
        "        //如果返回的为数组-\u003e有查询记录无报错",
        "        if (is_array($original_data)) {",
        "            $this-\u003eparams[\u0027vehicledeviceid\u0027] \u003d str_replace(\u0027\"\u0027, \u0027\u0027, $this-\u003eparams[\u0027vehicledeviceid\u0027]);",
        "",
        "            //查询该车的偏移量绑定信息",
        "            $result \u003d DB::table(\u0027t_vehicleinfo as a\u0027)",
        "                -\u003ejoin(\u0027t_vehicleanalog_offset as b\u0027, \u0027a.offsetId\u0027, \u0027\u003d\u0027, \u0027b.id\u0027)",
        "                -\u003ewhere(\u0027a.deviceid\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027vehicledeviceid\u0027])-\u003eselectRaw(\u0027state_content,offset_content\u0027)-\u003efirst();",
        "            //获取其中状态量说明部分",
        "            $stat \u003d json_decode($result-\u003estate_content, true);",
        "",
        "            //循环处理查询出的原始数据",
        "            for ($i \u003d 0; $i \u003c count($original_data); $i++) {",
        "                //获取单独key的一个数据组",
        "                $originalData \u003d $original_data[$i];",
        "                //获取key",
        "                $key \u003d array_keys($originalData);",
        "",
        "                for ($j \u003d 0; $j \u003c count($key); $j++) {",
        "                    $key_j \u003d $key[$j];",
        "                    //如果协议中存在该值 状态量标识替换为中文含义",
        "                    if (isset($stat[$key_j])) {",
        "                        $stateList \u003d $stat[$key_j][\u0027stateList\u0027];",
        "                        if (isset($stateList[$originalData[$key_j]])) {",
        "                            $originalData[$key_j] \u003d $stateList[$originalData[$key_j]];",
        "                        }",
        "                    } else if (is_numeric($key_j)) {",
        "                        $originalData[$key_j] \u003d $originalData[$key_j] \u003d\u003d null ? \u0027无\u0027 : \u0027有\u0027;",
        "                    }",
        "                }",
        "                $original_data[$i] \u003d $originalData;",
        "            }",
        "        }",
        "        $ret \u003d $original_data;",
        "        return $this-\u003esetJsonResponse(SUCCESS, [\"data\" \u003d\u003e $ret]);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportDrivingChartData",
        "     * @name: 行车图表数据导出",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: startTime,description:开始时间",
        "     *parameter2: stopTime,description:结束时间",
        "     *parameter3: vehicledeviceid,description:车辆ID",
        "     *parameter4: indicators,description:指标",
        "     *parameter5: indicatorscname,description:指标中文名",
        "     *parameter6: exportData,description:以数据形式导出",
        "     *parameter7: lineName,description:线路名称",
        "     *parameter8: groupName,description:组名称",
        "     *parameter9: vehicledeviceid,description:车辆设备ID",
        "     *parameter10: companyName,description:公司名称",
        "     *parameter11: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportDrivingChartData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027startTime\u0027 \u003d\u003e \u0027required\u0027, // 开始时间",
        "            \u0027stopTime\u0027 \u003d\u003e \u0027required\u0027, // 结束时间",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required\u0027, // 数据类型",
        "            \u0027vehicledeviceid\u0027 \u003d\u003e \u0027required\u0027, // 车辆ID",
        "            \u0027indicators\u0027 \u003d\u003e \u0027required\u0027,//指标",
        "            \u0027indicatorscname\u0027 \u003d\u003e \u0027required\u0027,//指标中文名",
        "            \u0027exportData\u0027 \u003d\u003e \u0027required|in:1\u0027,",
        "",
        "        ];",
        "",
        "        //定义变量一定要提前声明，否则就报错",
        "        $records \u003d array();",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $this-\u003eparams[\u0027isAddUnit\u0027] \u003d true;",
        "",
        "        $original_data \u003d (new BStatVehicleCanData([], $request))-\u003egetSomeData($this-\u003eparams);",
        "        $init \u003d explode(\",\", $request[\u0027indicatorscname\u0027]);",
        "        $ret_init \u003d [];",
        "",
        "        foreach ($init as $val) {",
        "            $ret_init[\"$val\"] \u003d null;",
        "        }",
        "",
        "        //如果返回的为数组-\u003e有查询记录无报错",
        "        if (is_array($original_data)) {",
        "            $this-\u003eparams[\u0027vehicledeviceid\u0027] \u003d str_replace(\u0027\"\u0027, \u0027\u0027, $this-\u003eparams[\u0027vehicledeviceid\u0027]);",
        "            //查询该车的偏移量绑定信息",
        "            $result \u003d DB::table(\u0027t_vehicleinfo as a\u0027)",
        "                -\u003ejoin(\u0027t_vehicleanalog_offset as b\u0027, \u0027a.offsetId\u0027, \u0027\u003d\u0027, \u0027b.id\u0027)",
        "                -\u003ewhere(\u0027a.deviceid\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027vehicledeviceid\u0027])-\u003eselectRaw(\u0027state_content,offset_content\u0027)-\u003efirst();",
        "            //获取其中状态量说明部分",
        "            $stat \u003d json_decode($result-\u003estate_content, true);",
        "            //循环处理查询出的原始数据",
        "            for ($i \u003d 0; $i \u003c count($original_data); $i++) {",
        "                //获取单独时间的一个数据组",
        "                $originalData \u003d $original_data[$i];",
        "                //获取key",
        "                $key \u003d array_keys($originalData);",
        "",
        "                for ($j \u003d 0; $j \u003c count($key); $j++) {",
        "                    $key_j \u003d $key[$j];",
        "                    //如果协议中存在该值",
        "                    //如果协议中存在该值 状态量标识替换为中文含义",
        "                    if (isset($stat[$key_j])) {",
        "                        $stateList \u003d $stat[$key_j][\u0027stateList\u0027];",
        "                        if (isset($stateList[$originalData[$key_j]])) {",
        "                            $originalData[$key_j] \u003d $stateList[$originalData[$key_j]];",
        "                        }",
        "                    } else if (is_numeric($key[$j])) {",
        "                        $originalData[$key[$j]] \u003d $originalData[$key[$j]] \u003d\u003d null ? \u0027无\u0027 : \u0027有\u0027;",
        "                    }",
        "                }",
        "                $original_data[$i] \u003d $originalData;",
        "            }",
        "        }",
        "        foreach ($original_data as $key \u003d\u003e $val) {",
        "            $records[$key] \u003d array_merge($ret_init, $val);",
        "        }",
        "        $I18N \u003d 0;",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027exportDrvingChartData\u0027, $I18N, $records);//excel表格导出",
        "",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        /* $indicatorscname \u003d$this-\u003eparams[\u0027indicatorscname\u0027];",
        "",
        "         $indicatorscnameArray\u003dexplode(\u0027,\u0027, $indicatorscname);*/",
        "        $countLongFindArray \u003d array();",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "",
        "",
        "            if (count($countLongFindArray) \u003c count($records[$key])) {",
        "                $countLongFindArray \u003d $records[$key];",
        "            }",
        "        }",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "            foreach ($countLongFindArray as $key1 \u003d\u003e $val1) {",
        "                if (!isset($records[$key][$key1])) {",
        "                    $records[$key][$key1] \u003d \"\";",
        "                }",
        "            }",
        "            $records[$key][\u0027设备号\u0027] \u003d str_replace(\"\\\"\", \"\", $this-\u003eparams[\u0027vehicledeviceid\u0027]);",
        "            $records[$key][\u0027车牌号\u0027] \u003d $this-\u003eparams[\u0027vehicleNo\u0027];",
        "            $records[$key][\u0027总公司\u0027] \u003d $this-\u003eparams[\u0027companyName\u0027];",
        "            $records[$key][\u0027分公司\u0027] \u003d $this-\u003eparams[\u0027groupName\u0027];",
        "            $records[$key][\u0027线路\u0027] \u003d $this-\u003eparams[\u0027lineName\u0027];",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        $i \u003d 0;",
        "        for (; $i \u003c $cnt + 3; $i++) {",
        "            $location++;",
        "        }",
        "",
        "        /* $title \u003d $this-\u003eparams[\u0027startTime\u0027] . \"-\";",
        "         $title .\u003d $this-\u003eparams[\u0027stopTime\u0027] . \u0027行车指标报表\u0027;*/",
        "        $title \u003d $this-\u003eparams[\u0027companyName\u0027] . \"---\";",
        "        $title .\u003d \"行车指标报表---\" . $this-\u003eparams[\u0027startTime\u0027] . \"至\" . $this-\u003eparams[\u0027stopTime\u0027];",
        "",
        "        /*Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName            \" . $title . \"              时间：$first\", \u0027A\u0027, 1);",
        "",
        "",
        "                $sheet-\u003efromArray($records, null, \u0027A2\u0027);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);*/",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027B\u0027)-\u003esetWidth(18);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "",
        "",
        "    }",
        "",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmSummary",
        "     * @name: 查询故障列表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:当前页",
        "     *parameter2: count,description:每页显示数据数量",
        "     *parameter3: findKey,description:查询键(报警类型)",
        "     *parameter4: findVal,description:查询值(报警名称)",
        "     *parameter5: findKeyEqual,description:查询键",
        "     *parameter6: findValEqual,description:查询值",
        "     *parameter7: sortKey,description:排序字段",
        "     *parameter8: sortVal,description:排序类型（asc，desc)",
        "     *parameter9: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmSummary(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027t_alarmsummary\u0027, \u0027t_alarmsummary\u0027, 17);",
        "        $records \u003d $this-\u003egetRecords($this-\u003eparams);//分页",
        "        $array \u003d $records[\u0027data\u0027];",
        "        if ($array !\u003d null) {",
        "",
        "            foreach ($array as $key \u003d\u003e $val) {",
        "                if ($val-\u003ealarmlocation \u003d\u003d null) {",
        "                    $gps \u003d $val-\u003egx . \",\" . $val-\u003egy;",
        "                    $address \u003d $this-\u003egetAddress($gps);",
        "                    $val-\u003ealarmlocation \u003d $address;",
        "                }",
        "",
        "                $array \u003d explode(\u0027,\u0027, $val-\u003eintervalTime);",
        "                $cnt \u003d count($array);",
        "                $arrayNew \u003d array();",
        "",
        "                for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "                    $arrayObejct \u003d new \\stdClass();",
        "                    $intervalTimeArray \u003d explode(\u0027--\u0027, explode(\u0027)\u0027, explode(\u0027(\u0027, $array[$i])[1])[0]);",
        "                    // dd($intervalTimeArray);",
        "                    $start \u003d $intervalTimeArray[0];",
        "                    $end \u003d $intervalTimeArray[1];",
        "",
        "                    $arrayObejct-\u003estart \u003d $start;",
        "                    $arrayObejct-\u003eend \u003d $end;",
        "                    $arrayNew[$i] \u003d $arrayObejct;",
        "",
        "                }",
        "                $val-\u003eintervalTime \u003d $arrayNew;",
        "            }",
        "        }",
        "        $records \u003d $this-\u003eaddDeptHeader($this-\u003etableName, $records, $this-\u003eparams);//添加中英文表头",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "    public function getAlarmSummaryByAlarmType(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027summaryType\u0027 \u003d\u003e \u0027required|in:0,1\u0027,",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027findKey\u0027 \u003d\u003e \u0027required\u0027, //线路名称字段名",
        "            \u0027findVal\u0027 \u003d\u003e \u0027required\u0027,//线路名称",
        "            \u0027findKeyEqual1\u0027 \u003d\u003e \u0027required\u0027, //线路名称字段名",
        "            \u0027findValEqual1\u0027 \u003d\u003e \u0027required\u0027,//线路名称",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $startdate \u003d isset($this-\u003eparams[\u0027startdate\u0027]) ? $this-\u003eparams[\u0027startdate\u0027] : null;",
        "        $enddate \u003d isset($this-\u003eparams[\u0027enddate\u0027]) ? $this-\u003eparams[\u0027enddate\u0027] : null;",
        "        $time \u003d $this-\u003egetdataByTime($this-\u003eparams[\u0027timeType\u0027], $startdate, $enddate);",
        "        $key \u003d isset($this-\u003eparams[\u0027findKey\u0027]) ? $this-\u003eparams[\u0027findKey\u0027] : null;",
        "        $val \u003d isset($this-\u003eparams[\u0027findVal\u0027]) ? $this-\u003eparams[\u0027findVal\u0027] : null;",
        "",
        "        if ($this-\u003eparams[\u0027summaryType\u0027] \u003d\u003d 0) {",
        "            $select \u003d DB::table(\u0027api_breakdowns\u0027)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, \u0027api_breakdowns.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId, v_vehicleinfo.vehicleNo,deviceId,",
        "                case motorType when 1 then \\\u0027燃油车\\\u0027 when 2 then \\\u0027电车\\\u0027 when 3 then \\\u0027油电混合动力车\\\u0027 when 4 then \\\u0027燃气车\\\u0027 when 5 then \\\u0027气电混合动力车\\\u0027 end as motorType ,",
        "                           alarmtypename as alarmType,SUM(total) as total\u0027)",
        "                -\u003ewhere($key, \u0027\u003d\u0027, $val)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003e\u003d\u0027, $time[0])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003c\u003d\u0027, $time[1])",
        "                -\u003egroupBy(\u0027deviceId\u0027)-\u003eorderBy(\u0027total\u0027, \u0027desc\u0027);",
        "        }",
        "        if ($this-\u003eparams[\u0027summaryType\u0027] \u003d\u003d 1) {",
        "            $select \u003d DB::table(\u0027api_breakdowns\u0027)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, \u0027api_breakdowns.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId, v_vehicleinfo.vehicleNo,deviceId,",
        "                case motorType when 1 then \\\u0027燃油车\\\u0027 when 2 then \\\u0027电车\\\u0027 when 3 then \\\u0027油电混合动力车\\\u0027 when 4 then \\\u0027燃气车\\\u0027 when 5 then \\\u0027气电混合动力车\\\u0027 end as motorType ,",
        "               alarmtypename as alarmType , SUM(total) as total\u0027)",
        "                -\u003ewhere($key, \u0027\u003d\u0027, $val)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003e\u003d\u0027, $time[0])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003c\u003d\u0027, $time[1])",
        "                -\u003egroupBy(\u0027api_breakdowns.alarmtypename\u0027)-\u003eorderBy(\u0027total\u0027, \u0027desc\u0027);",
        "        }",
        "        $ret \u003d $this-\u003efilterPagination($this-\u003eparams, $select);",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027v_vehicleinfo_alarmSumAll\u0027, $ret, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    public function exportAlarmSummary(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027t_alarmsummary\u0027, \u0027t_alarmsummary\u0027, 17);",
        "        $data \u003d $this-\u003egetRecords($this-\u003eparams);//分页",
        "",
        "        $gpsArr \u003d null;",
        "        foreach ($data[\u0027data\u0027] as $key \u003d\u003e $val) {",
        "            if ($val-\u003ealarmlocation \u003d\u003d null) {",
        "                $gps \u003d $val-\u003egx . \",\" . $val-\u003egy;",
        "                $gpsArr[] \u003d $gps;",
        "            }",
        "        }",
        "",
        "        $addressReal \u003d $this-\u003egetAddressReal($gpsArr);",
        "        $addressArr \u003d json_decode($addressReal, true);",
        "        foreach ($data[\u0027data\u0027] as $key \u003d\u003e $val) {",
        "            if (isset($addressArr[$val-\u003egx . \u0027,\u0027 . $val-\u003egy])) {",
        "                $data[\u0027data\u0027][$key]-\u003ealarmlocation \u003d $addressArr[$val-\u003egx . \u0027,\u0027 . $val-\u003egy];",
        "            } else {",
        "                $data[\u0027data\u0027][$key]-\u003ealarmlocation \u003d \u0027GPS无效\u0027;",
        "            }",
        "        }",
        "",
        "        $records \u003d $data;",
        "        \\Log::info(\"导出监控故障汇总列表\");",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if (!isset($records[0][\u0027总公司\u0027])) {",
        "            /*   $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "               $records[0][\u0027总公司\u0027] \u003d $recordsCompanyName-\u003ecompanyName;*/",
        "            if (isset($this-\u003eparams[\u0027deptid\u0027])) {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_vehicleinfo_all\u0027)-\u003eselect(\u0027companyName\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027]);",
        "",
        "                if (isset($this-\u003eparams[\u0027findKeyEqual1\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findValEqual1\u0027])) {",
        "                    if ($this-\u003eparams[\u0027findKeyEqual1\u0027] !\u003d \"\") {",
        "                        $recordsCompanyName \u003d $this-\u003eparams-\u003ewhere($this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027]);",
        "                    }",
        "                }",
        "                $recordsCompanyName \u003d $recordsCompanyName-\u003efirst();",
        "                $records[0][\u0027总公司\u0027] \u003d $recordsCompanyName-\u003ecompanyName;",
        "            } else {",
        "                $recordsCompanyName \u003d DB::table(\u0027v_vehicleinfo_all\u0027)-\u003eselect(\u0027companyName\u0027);",
        "                if (isset($this-\u003eparams[\u0027findKeyEqual1\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027findValEqual1\u0027])) {",
        "                    if ($this-\u003eparams[\u0027findKeyEqual1\u0027] !\u003d \"\") {",
        "                        $recordsCompanyName \u003d $recordsCompanyName-\u003ewhere($this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027]);",
        "                    }",
        "                }",
        "                $recordsCompanyName \u003d $recordsCompanyName-\u003efirst();",
        "                $records[0][\u0027总公司\u0027] \u003d $recordsCompanyName-\u003ecompanyName;",
        "            }",
        "        }",
        "        $title \u003d $records[0][\u0027总公司\u0027] . \"---\";",
        "        /*$title1\u003d\"监控故障汇总\";",
        "        if(isset($data[\u0027title\u0027])){",
        "            $title1\u003d$data[\u0027title\u0027];",
        "        }",
        "        $title.\u003d$title1;*/",
        "        // $title \u003d \u0027监控故障汇总\u0027;",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日报警汇总报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日报警汇总报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天报警汇总报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月报警汇总报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月报警汇总报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年报警汇总报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年报警汇总报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"报警汇总报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "                if (isset($this-\u003eparams[\u0027startdate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027enddate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"报警汇总报表---\" . $this-\u003eparams[\u0027startdate\u0027] . \"至\" . $this-\u003eparams[\u0027enddate\u0027];",
        "                }",
        "        }",
        "        $tmp \u003d explode(\u0027---\u0027, $title);",
        "",
        "        if (isset($this-\u003eparams[\u0027findVal\u0027])) {",
        "            $tmp[1] \u003d $this-\u003eparams[\u0027findVal\u0027] . \u0027明细报表\u0027;",
        "            $title \u003d implode(\u0027---\u0027, $tmp);",
        "        }",
        "",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "            if (isset($val[\u0027持续时间(s)\u0027])) {",
        "                $records[$key][\u0027持续时间(s)\u0027] \u003d (String)$val[\u0027持续时间(s)\u0027];",
        "            }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027F\u0027)-\u003esetWidth(18);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportLastingAlarmSummary",
        "     * @name: 行车监控报警汇总数导出",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:当前页",
        "     *parameter2: count,description:行数",
        "     *parameter3: findKeyEqual1,description:查询类型",
        "     *parameter4: findValEqual,description:查询值",
        "     *parameter5: sortKey,description:排序字段",
        "     *parameter6: sortVal,description:排序类型(asc,desc)",
        "     *parameter7: deptid,description:组织ID",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportLastingAlarmSummary(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027t_alarmsummary_unfinished\u0027, \u0027t_alarmsummary_unfinished\u0027, 26);",
        "        $data \u003d $this-\u003egetRecordsFromAlarmLastingSummary($this-\u003eparams);//分页",
        "",
        "",
        "        $gpsArr \u003d null;",
        "        foreach ($data[\u0027data\u0027] as $key \u003d\u003e $val) {",
        "            if ($val-\u003ealarmlocation \u003d\u003d null) {",
        "                $gps \u003d $val-\u003egx . \",\" . $val-\u003egy;",
        "                $gpsArr[] \u003d $gps;",
        "            }",
        "        }",
        "",
        "        $addressReal \u003d $this-\u003egetAddressReal($gpsArr);",
        "        $addressArr \u003d json_decode($addressReal, true);",
        "        foreach ($data[\u0027data\u0027] as $key \u003d\u003e $val) {",
        "            if (isset($addressArr[$val-\u003egx . \u0027,\u0027 . $val-\u003egy])) {",
        "                $data[\u0027data\u0027][$key]-\u003ealarmlocation \u003d $addressArr[$val-\u003egx . \u0027,\u0027 . $val-\u003egy];",
        "            } else {",
        "                $data[\u0027data\u0027][$key]-\u003ealarmlocation \u003d \u0027GPS无效\u0027;",
        "            }",
        "        }",
        "        $records \u003d end($data);",
        "        \\Log::info(\"导出持续监控故障汇总列表\");",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        /* $title \u003d \u0027持续报警汇总\u0027;",
        "         Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "             $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                 $userName \u003d Auth::user()-\u003ereal_name;",
        "                 $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                 $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 $sheet-\u003esetValueOfCell(\"制表人:$userName            \" . $title . \"              时间：$first\", \u0027A\u0027, 1);",
        "",
        "                 $sheet-\u003efromArray($records, null, \u0027A2\u0027);",
        "                 $sheet-\u003esetAutoSize(true);",
        "             });",
        "         })-\u003eexport(\u0027xlsx\u0027);*/",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            /* $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "             $lins \u003d [$recordsCompanyName];",
        "             $data[\u0027data\u0027] \u003d $lins;*/",
        "",
        "            if (isset($this-\u003eparams[\u0027deptid\u0027])) {",
        "                /* $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027,\u0027\u003d\u0027,$this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "                 $records[0][\u0027总公司\u0027]\u003d$recordsCompanyName-\u003ecompanyName;*/",
        "",
        "                $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "                $lins \u003d [$recordsCompanyName];",
        "                $data[\u0027data\u0027] \u003d $lins;",
        "            } else {",
        "                // dd(\"select companyName from t_mauth_dept a , t_vehicleinfo t where  a.lineDeptId \u003d t.deptId and t.vehicleNo\u003d \u0027\".$this-\u003eparams[\u0027findVal\u0027].\"\u0027\");",
        "                $recordsCompanyName \u003d DB::select(\"select companyName from t_mauth_dept a , t_vehicleinfo t where  a.lineDeptId \u003d t.deptId and t.vehicleNo\u003d \u0027\" . $this-\u003eparams[\u0027findVal\u0027] . \"\u0027\");",
        "                // $records[0][\u0027总公司\u0027]\u003d$recordsCompanyName[0]-\u003ecompanyName;",
        "                $lins \u003d [$recordsCompanyName];",
        "                $data[\u0027data\u0027] \u003d $lins;",
        "            }",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日持续报警汇总报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日持续报警汇总报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天持续报警汇总报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月持续报警汇总报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月持续报警汇总报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年持续报警汇总报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年持续报警汇总报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"持续报警汇总报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                } else {",
        "                    $title .\u003d \"持续报警汇总报表\";",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                }",
        "",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027B\u0027)-\u003esetWidth(18);",
        "                $sheet-\u003egetAutosize();",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmLastingSummary",
        "     * @name: 行车持续报警汇总数据获取",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:当前页",
        "     *parameter2: count,description:行数",
        "     *parameter3: findKeyEqual1,description:查询类型",
        "     *parameter4: findValEqual,description:查询值",
        "     *parameter5: sortKey,description:排序字段",
        "     *parameter6: sortVal,description:排序类型(asc,desc)",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmLastingSummary(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027t_alarmsummary_unfinished\u0027, \u0027t_alarmsummary_unfinished\u0027, 26);",
        "",
        "        $records \u003d $this-\u003egetRecordsFromAlarmLastingSummary($this-\u003eparams);//分页",
        "",
        "        $array \u003d $records[\u0027data\u0027];",
        "        if ($array !\u003d null) {",
        "            $gpsArr \u003d null;",
        "            foreach ($array as $key \u003d\u003e $val) {",
        "                if ($val-\u003ealarmlocation \u003d\u003d null) {",
        "                    $gps \u003d $val-\u003egx . \",\" . $val-\u003egy;",
        "                    $gpsArr[] \u003d $gps;",
        "                }",
        "            }",
        "            $addressReal \u003d $this-\u003egetAddressReal($gpsArr);",
        "            $addressArr \u003d json_decode($addressReal, true);",
        "            foreach ($array as $key \u003d\u003e $val) {",
        "                if (isset($addressArr[$val-\u003egx . \u0027,\u0027 . $val-\u003egy])) {",
        "                    $array[$key]-\u003ealarmlocation \u003d $addressArr[$val-\u003egx . \u0027,\u0027 . $val-\u003egy];",
        "                } else {",
        "                    $array[$key]-\u003ealarmlocation \u003d \u0027GPS无效\u0027;",
        "                }",
        "            }",
        "        }",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027t_alarmsummary_unfinished\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "",
        "    public function getRecordsFromAlarmLastingSummary($params)",
        "    {",
        "        /*$count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;*/",
        "        $startIndex \u003d 0;",
        "        $move \u003d 8;",
        "        if (isset($params[\u0027count\u0027]) \u0026\u0026 isset($params[\u0027page\u0027])) {",
        "            $startIndex \u003d $params[\u0027count\u0027] * ($params[\u0027page\u0027] - 1);",
        "            $move \u003d $params[\u0027count\u0027];",
        "        }",
        "",
        "",
        "        $selectSql \u003d \"select  id,vehicleNo,deviceId,driverName,alarmType,type,parenttype,alarmstarttime,lastAlarmTime,duration as  lastduration,alarmlocation,",
        "               case motorType when 1 then \u0027燃油车\u0027 when 2 then \u0027电车\u0027 when 3 then \u0027油电混合动力车\u0027 when 4 then \u0027燃气车\u0027 when 5 then \u0027气电混合动力车\u0027 end as motorType ,",
        "        dismissTime,if(lastlevel\u003d0,\u0027一般\u0027,\u0027严重\u0027) as alarmLevel,statTime,",
        "          gx,gy,lastAlarmTime,alarmtypeid,alarmFlag,companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,finished from \";",
        "",
        "        $tempTableSql \u003d \"(select d.*,ifnull(b.alarmlevel,d.alarmlevel)as lastlevel from (",
        "select a.* ,c.alarmname from t_alarmsummary_unfinished a inner join ",
        "(SELECT * FROM t_vehiclealarmtype UNION ALL SELECT * FROM t_vehiclealarmtype2 UNION ALL SELECT * FROM t_vehiclealarmtype3)c on a.alarmtype\u003dc.alarmtypename )d",
        "left join t_alarmlevelinfo b on d. companyDeptId\u003db.deptId and d.alarmname\u003db.alarmtypename)t_alarmsummary_unfinished\";",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                $sql \u003d \"    where  \";",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"    where companyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 2:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"    where subCompanyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"    where groupDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"    where lineDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "",
        "        }",
        "",
        "        $sql .\u003d \"1\u003d1\";",
        "",
        "        if (isset($params[\u0027findKey\u0027]) \u0026\u0026 isset($params[\u0027findVal\u0027])) {",
        "            $key \u003d $params[\u0027findKey\u0027];",
        "            $val \u003d $params[\u0027findVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey2\u0027]) \u0026\u0026 isset($params[\u0027findVal2\u0027])) {",
        "            $key \u003d $params[\u0027findKey2\u0027];",
        "            $val \u003d $params[\u0027findVal2\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "        }",
        "        if (isset($params[\u0027findKeyEqual1\u0027]) \u0026\u0026 isset($params[\u0027findValEqual1\u0027])) {",
        "            $key \u003d $params[\u0027findKeyEqual1\u0027];",
        "            $val \u003d $params[\u0027findValEqual1\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key \u003d \u0027$val\u0027 \";",
        "            }",
        "            //      $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "        }",
        "        if (isset($params[\u0027findKeyEqual2\u0027]) \u0026\u0026 isset($params[\u0027findValEqual2\u0027])) {",
        "            $key \u003d $params[\u0027findKeyEqual2\u0027];",
        "            $val \u003d $params[\u0027findValEqual2\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key \u003d \u0027$val\u0027 \";",
        "            }",
        "            //      $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "        }",
        "",
        "        //    $total \u003d (array)DB::select($countSql . $sql)[0];",
        "",
        "        if (isset($params[\u0027sortKey\u0027]) \u0026\u0026 isset($params[\u0027sortVal\u0027])) {",
        "            $key \u003d $params[\u0027sortKey\u0027];",
        "            $val \u003d $params[\u0027sortVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" order by $key $val \";",
        "            }",
        "        }",
        "",
        "        /* $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "         $sql .\u003d \" limit $offset , $count\";",
        "",
        "         $records \u003d (array)DB::select($selectSql . $sql);",
        "",
        "",
        "         $data \u003d [",
        "             \u0027current_page\u0027 \u003d\u003e $page,",
        "             \u0027from\u0027 \u003d\u003e $offset + 1,",
        "             \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "             \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "             \u0027per_page\u0027 \u003d\u003e $count,",
        "             \u0027to\u0027 \u003d\u003e $offset + $count,",
        "             \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "             \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "             \u0027data\u0027 \u003d\u003e $records",
        "         ];*/",
        "        $offset \u003d $move * ($startIndex - 1) \u003c\u003d 0 ? 0 : $startIndex;",
        "        $sql .\u003d \" limit $offset , \" . ($move + 1);",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $tempTableSql . $sql, 20);",
        "",
        "",
        "        $flag \u003d 0;",
        "        if (count($records) \u003d\u003d $move + 1) {",
        "            unset($records[$move]);",
        "",
        "            $flag \u003d 1;",
        "        }",
        "        $data \u003d [\u0027flag\u0027 \u003d\u003e $flag, \u0027data\u0027 \u003d\u003e $records];",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     * 获取车辆6监控报警汇总",
        "     */",
        "    public function getAlarmSummaryMonitor(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        $this-\u003epredo(\u0027stat_6monitoralarm_summary\u0027, \u0027stat_6monitoralarm_summary\u0027, 21);",
        "",
        "        $records \u003d $this-\u003egetRecordsfromMonitorSummary($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader($this-\u003etableName, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "",
        "    }",
        "",
        "",
        "    public function exportAlarmSummaryMonitor(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027stat_6monitoralarm_summary\u0027, \u0027stat_6monitoralarm_summary\u0027, 21);",
        "        $data \u003d $this-\u003egetRecordsfromMonitorSummary($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出监控故障汇总列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records) {",
        "                $sheet-\u003efromArray($records);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "",
        "    public function exportAlarmDetailMonitor(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027stat_6monitoralarm_detail\u0027, \u0027stat_6monitoralarm_detail\u0027, 22);",
        "        $data \u003d $this-\u003egetRecordsfromMonitorDetail($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出监控故障详情列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records) {",
        "                $sheet-\u003efromArray($records);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    public function exportAlarmMonitorAlarmRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027v_6monitoralarmrank\u0027, \u0027v_6monitoralarmrank\u0027, 23);",
        "        $data \u003d $this-\u003egetRecordsfromAlarmMonitorAlarmRank($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出故障次数故障排名列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records) {",
        "                $sheet-\u003efromArray($records);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    public function exportAlarmMonitorVehicleRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027v_6monitorvehiclerank\u0027, \u0027v_6monitorvehiclerank\u0027, 24);",
        "        $data \u003d $this-\u003egetRecordsfromAlarmMonitorVehicleRank($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出故障次数车辆排名列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead($this-\u003etableName, $I18N, $records);//excel表格导出",
        "",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records) {",
        "                $sheet-\u003efromArray($records);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "",
        "    /**",
        "     * 获取车辆6监控报警详情",
        "     */",
        "    public function getAlarmDetailMonitor(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027stat_6monitoralarm_detail\u0027, \u0027stat_6monitoralarm_detail\u0027, 22);",
        "",
        "        $records \u003d $this-\u003egetRecordsfromMonitorDetail($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader($this-\u003etableName, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "",
        "    public function getAlarmMonitorAlarmRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_6monitoralarmrank\u0027, \u0027v_6monitoralarmrank\u0027, 23);",
        "",
        "        $records \u003d $this-\u003egetRecordsfromAlarmMonitorAlarmRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader($this-\u003etableName, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getAlarmMonitorVehicleRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_6monitorvehiclerank\u0027, \u0027v_6monitorvehiclerank\u0027, 24);",
        "",
        "        $records \u003d $this-\u003egetRecordsfromAlarmMonitorVehicleRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader($this-\u003etableName, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "",
        "    public function getRecords($params)",
        "    {",
        "        $selectSql \u003d \"select t_alarmsummary.id,vehicleNo,deviceId,driverName,alarmType,t_alarmsummary.type,t_alarmsummary.parenttype,alarmstarttime,duration,alarmlocation,",
        "        case motorType when 1 then \u0027燃油车\u0027 when 2 then \u0027电车\u0027 when 3 then \u0027油电混合动力车\u0027 when 4 then \u0027燃气车\u0027 when 5 then \u0027气电混合动力车\u0027 end as motorType ,",
        "        dismissTime,if(ifnull(c.alarmLevel,t_alarmsummary.alarmLevel)\u003d0,\u0027一般\u0027,\u0027严重\u0027) as alarmLevel,statTime,",
        "          gx,gy,lastAlarmTime,t_alarmsummary.alarmtypeid,alarmFlag,companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,finished,intervalTime    from t_alarmsummary  ",
        "          LEFT JOIN v_alarmtype alar ON t_alarmsummary.alarmType \u003d alar.alarmtypename ",
        "          LEFT JOIN t_alarmlevelinfo c ON t_alarmsummary.companyDeptId \u003d c.deptId and c.alarmTypeName \u003d alar.alarmname ",
        "          ",
        "          \";",
        "",
        "        $selectSql2 \u003d \"select t_alarmsummary.id,vehicleNo,deviceId,driverName,alarmType,t_alarmsummary.type,t_alarmsummary.parenttype,alarmstarttime,duration,alarmlocation,",
        "        case motorType when 1 then \u0027燃油车\u0027 when 2 then \u0027电车\u0027 when 3 then \u0027油电混合动力车\u0027 when 4 then \u0027燃气车\u0027 when 5 then \u0027气电混合动力车\u0027 end as motorType ,",
        "        dismissTime,if(ifnull(c.alarmLevel,t_alarmsummary.alarmLevel)\u003d0,\u0027一般\u0027,\u0027严重\u0027) as alarmLevel,statTime,",
        "          gx,gy,lastAlarmTime,t_alarmsummary.alarmtypeid,alarmFlag,companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,finished,\u0027未结束\u0027 as intervalTime   from t_alarmsummary_unfinished as t_alarmsummary",
        "          LEFT JOIN v_alarmtype alar ON t_alarmsummary.alarmType \u003d alar.alarmtypename ",
        "          LEFT JOIN t_alarmlevelinfo c ON t_alarmsummary.companyDeptId \u003d c.deptId and c.alarmTypeName \u003d alar.alarmname ",
        "          \";",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                $sql \u003d \" where  \";",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"  where companyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 2:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"  where subCompanyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   where groupDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"    where lineDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "",
        "        }",
        "        $sql .\u003d \"1\u003d1\";",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $startdate \u003d isset($params[\u0027startdate\u0027]) ? $params[\u0027startdate\u0027] : null;",
        "            $enddate \u003d isset($params[\u0027enddate\u0027]) ? $params[\u0027enddate\u0027] : null;",
        "            if ($enddate \u003d\u003d $startdate) {",
        "                $enddate \u003d date(\u0027Y-m-d\u0027, strtotime(\"$startdate +1 day\"));",
        "            }",
        "            $sql .\u003d $this-\u003egetdataByTimeType(\u0027alarmstarttime\u0027, $params[\u0027timeType\u0027], $startdate, $enddate);",
        "",
        "        }",
        "",
        "        if (isset($params[\u0027findKey\u0027]) \u0026\u0026 !empty($params[\u0027findKey\u0027]) \u0026\u0026 isset($params[\u0027findVal\u0027]) \u0026\u0026 !empty($params[\u0027findVal\u0027])) {",
        "            $key \u003d $params[\u0027findKey\u0027];",
        "            $val \u003d $params[\u0027findVal\u0027];",
        "",
        "            if ($key \u003d\u003d \u0027alarmType\u0027) {",
        "                $val2 \u003d $val;",
        "                $typeid \u003d DB::select(",
        "                    \"SELECT * FROM `t_vehiclealarmtype2`where alarmtypename\u003d\u0027$val\u0027",
        "                            UNION",
        "                            SELECT * FROM `t_vehiclealarmtype`where alarmtypename\u003d\u0027$val\u0027",
        "                            UNION",
        "                            SELECT * FROM `t_vehiclealarmtype3`where alarmtypename\u003d\u0027$val\u0027\"",
        "                )[0]-\u003ealarmtypeid;",
        "                $key \u003d \u0027alarmtypeid\u0027;",
        "                $val \u003d $typeid;",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003d\u0027$val\u0027 and t_alarmsummary.alarmType\u003d\u0027$val2\u0027 \";",
        "            } else if ($key \u003d\u003d \u0027parenttype\u0027) {",
        "                $val \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $val);",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003d \u0027$val\u0027 \";",
        "            } else if ($key \u003d\u003d \u0027type\u0027) {",
        "                $val \u003d $this-\u003esystemConvertCode(\"systemType\", $val);",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003d \u0027$val\u0027 \";",
        "            } else {",
        "                if ($val !\u003d \"\") {",
        "                    $sql .\u003d \" and  t_alarmsummary.$key \u003d \u0027$val\u0027 \";",
        "                }",
        "            }",
        "",
        "        }",
        "",
        "        if (isset($params[\u0027findKey2\u0027]) \u0026\u0026 isset($params[\u0027findVal2\u0027])) {",
        "            $key \u003d $params[\u0027findKey2\u0027];",
        "            $val \u003d $params[\u0027findVal2\u0027];",
        "            if ($key \u003d\u003d \u0027parenttype\u0027) {",
        "                $val \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $val);",
        "            };",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003d \u0027$val\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey3\u0027]) \u0026\u0026 isset($params[\u0027findVal3\u0027])) {",
        "            $key \u003d $params[\u0027findKey3\u0027];",
        "            $val \u003d $params[\u0027findVal3\u0027];",
        "            if ($key \u003d\u003d \u0027parenttype\u0027) {",
        "                $val \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $val);",
        "            };",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003c\u003d \u0027$val\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey4\u0027]) \u0026\u0026 isset($params[\u0027findVal4\u0027])) {",
        "            $key \u003d $params[\u0027findKey4\u0027];",
        "            $val \u003d $params[\u0027findVal4\u0027];",
        "            if ($key \u003d\u003d \u0027parenttype\u0027) {",
        "                $val \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $val);",
        "            };",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003e\u003d \u0027$val\u0027 \";",
        "            }",
        "        }",
        "        if (isset($params[\u0027findKeyEqual1\u0027]) \u0026\u0026 isset($params[\u0027findValEqual1\u0027])) {",
        "            $key \u003d $params[\u0027findKeyEqual1\u0027];",
        "            $val \u003d $params[\u0027findValEqual1\u0027];",
        "            if ($key \u003d\u003d \u0027parenttype\u0027) {",
        "                $val \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $val);",
        "            };",
        "            if ($val !\u003d \"\") {",
        "                if ($key \u003d\u003d \"vehicleNo\") {",
        "                    $deviceid \u003d DB::select(\"select deviceid  from t_vehicleinfo where vehicleno\u003d\u0027$val\u0027 \");",
        "                    $key \u003d \u0027deviceid\u0027;",
        "                    $val \u003d $deviceid[0]-\u003edeviceid;",
        "                }",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003d \u0027$val\u0027 \";",
        "            }",
        "        }",
        "        if (isset($params[\u0027findKeyEqual2\u0027]) \u0026\u0026 isset($params[\u0027findValEqual2\u0027])) {",
        "            $key \u003d $params[\u0027findKeyEqual2\u0027];",
        "            $val \u003d $params[\u0027findValEqual2\u0027];",
        "            if ($key \u003d\u003d \u0027parenttype\u0027) {",
        "                $val \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $val);",
        "            };",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  t_alarmsummary.$key \u003d \u0027$val\u0027 \";",
        "            }",
        "        }",
        "        // 排序",
        "        $orderBySql \u003d \"\";",
        "        if (isset($params[\u0027sortKey\u0027]) \u0026\u0026 isset($params[\u0027sortVal\u0027])) {",
        "            $key \u003d $params[\u0027sortKey\u0027];",
        "            $val \u003d $params[\u0027sortVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $orderBySql \u003d \" order by $key $val \";",
        "            }",
        "        }",
        "        // 分页",
        "        $limitSql \u003d \"\";",
        "        if (isset($params[\u0027count\u0027]) \u0026\u0026 isset($params[\u0027page\u0027])) {",
        "            $startIndex \u003d $params[\u0027count\u0027] * ($params[\u0027page\u0027] - 1);",
        "            $offset \u003d $params[\u0027count\u0027] * ($startIndex - 1) \u003c\u003d 0 ? 0 : $startIndex;",
        "            $limitSql \u003d \" limit $offset , \" . ($params[\u0027count\u0027] + 1);",
        "        }",
        "        //结果缓存",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime(\u0027select * from ((\u0027 . $selectSql . $sql . \u0027)\u0027 . \u0027 union all (\u0027 . $selectSql2 . $sql . \u0027)) a group by id \u0027 . $orderBySql . \u0027 \u0027 . $limitSql, 20);",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "            $selectVehicleSN \u003d \"select vehicleSN from t_vehicleinfo where deviceId \u003d \u0027\" . ($val-\u003edeviceId) . \"\u0027\";",
        "            $recordsVehicleSN \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectVehicleSN, 20);",
        "            if (count($recordsVehicleSN) \u003e 0) {",
        "                $val-\u003evehicleSN \u003d $recordsVehicleSN[0]-\u003evehicleSN;",
        "            } else {",
        "                $val-\u003evehicleSN \u003d \"\";",
        "            }",
        "        }",
        "        // 分页时是否存在下一页",
        "        $flag \u003d 0;",
        "        if ($limitSql !\u003d \"\" \u0026\u0026 count($records) \u003d\u003d $params[\u0027count\u0027] + 1) {",
        "            unset($records[$params[\u0027count\u0027]]);",
        "            $flag \u003d 1;",
        "        }",
        "        return [\u0027flag\u0027 \u003d\u003e $flag, \u0027data\u0027 \u003d\u003e $records];",
        "    }",
        "",
        "    /**",
        "     * @param $params",
        "     * @return array",
        "     */",
        "    public function getRecordsfromMonitorSummary($params)",
        "    {",
        "",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $countSql \u003d \"select count(1) as total \";",
        "",
        "        $selectSql \u003d \"select * \";",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                $sql \u003d \"   from stat_6monitoralarm_summary where   \";",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_summary where companyDeptId \u003d \u0027$id\u0027 and  \";",
        "                break;",
        "            case 2:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_summary where subCompanyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_summary where groupDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_summary where lineDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "",
        "",
        "        }",
        "",
        "        $sql .\u003d \"1\u003d1\";",
        "",
        "        if (isset($params[\u0027findKey\u0027]) \u0026\u0026 isset($params[\u0027findVal\u0027])) {",
        "            $key \u003d $params[\u0027findKey\u0027];",
        "            $val \u003d $params[\u0027findVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey2\u0027]) \u0026\u0026 isset($params[\u0027findVal2\u0027])) {",
        "            $key \u003d $params[\u0027findKey2\u0027];",
        "            $val \u003d $params[\u0027findVal2\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey3\u0027]) \u0026\u0026 isset($params[\u0027findVal3\u0027])) {",
        "",
        "",
        "            $key \u003d $params[\u0027findKey3\u0027];",
        "            $val \u003d $params[\u0027findVal3\u0027];",
        "",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and ( $key in (\u0027$val\u0027)\";",
        "            }",
        "            //      $sql .\u003d \" and ( $key in (\u0027$val\u0027)\" ;",
        "        }",
        "",
        "        if (isset($params[\u0027findKey6\u0027]) \u0026\u0026 isset($params[\u0027findVal6\u0027])) {",
        "            $key \u003d $params[\u0027findKey6\u0027];",
        "            $val \u003d $params[\u0027findVal6\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" or  $key in (\u0027$val\u0027) )\";",
        "            }",
        "            //      $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "        }",
        "        if (isset($params[\u0027findKeyEqual1\u0027]) \u0026\u0026 isset($params[\u0027findValEqual1\u0027])) {",
        "            $key \u003d $params[\u0027findKeyEqual1\u0027];",
        "            $val \u003d $params[\u0027findValEqual1\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key \u003d \u0027$val\u0027 \";",
        "            }",
        "            //      $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "        }",
        "        if (isset($params[\u0027findKeyEqual2\u0027]) \u0026\u0026 isset($params[\u0027findValEqual2\u0027])) {",
        "            $key \u003d $params[\u0027findKeyEqual2\u0027];",
        "            $val \u003d $params[\u0027findValEqual2\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key \u003d \u0027$val\u0027 \";",
        "            }",
        "            //      $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "        }",
        "",
        "",
        "        // findKey3 findKey6 备用判断",
        "//    if ((isset($params[\u0027findKey3\u0027])\u0026\u0026isset($params[\u0027findVal3\u0027]))\u0026\u0026(isset($params[\u0027findKey6\u0027])\u0026\u0026isset($params[\u0027findVal6\u0027]))){",
        "//",
        "//            $key \u003d $params[\u0027findKey3\u0027];",
        "//            $val \u003d $params[\u0027findVal3\u0027];",
        "//            if($val !\u003d \"\" ){",
        "//                $sql .\u003d \" and ( $key in (\u0027$val\u0027)\" ;",
        "//            }",
        "//",
        "//             $key \u003d $params[\u0027findKey6\u0027];",
        "//             $val \u003d $params[\u0027findVal6\u0027];",
        "//             if($val !\u003d \"\" ){",
        "//                $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "//        } elseif(isset($params[\u0027findKey3\u0027])\u0026\u0026isset($params[\u0027findVal3\u0027])) {",
        "//",
        "//",
        "//            $key \u003d $params[\u0027findKey3\u0027];",
        "//            $val \u003d $params[\u0027findVal3\u0027];",
        "//",
        "//            if($val !\u003d \"\" ){",
        "//                $sql .\u003d \" and  $key in (\u0027$val\u0027)\" ;",
        "//            }",
        "//                }elseif(isset($params[\u0027findKey6\u0027])\u0026\u0026isset($params[\u0027findVal6\u0027])) {",
        "//            $key \u003d $params[\u0027findKey6\u0027];",
        "//            $val \u003d $params[\u0027findVal6\u0027];",
        "//            if($val !\u003d \"\" ){",
        "//                $sql .\u003d \" and  $key in (\u0027$val\u0027) \" ;",
        "//            }",
        "//            }",
        "//",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "        if (isset($params[\u0027sortKey\u0027]) \u0026\u0026 isset($params[\u0027sortVal\u0027])) {",
        "            $key \u003d $params[\u0027sortKey\u0027];",
        "            $val \u003d $params[\u0027sortVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" order by $key $val \";",
        "            }",
        "        }",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    public function getRecordsfromMonitorDetail($params)",
        "    {",
        "",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $countSql \u003d \"select count(1) as total \";",
        "",
        "        $selectSql \u003d \"select *  \";",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                $sql \u003d \"   from stat_6monitoralarm_detail where   \";",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_detail where companyDeptId \u003d \u0027$id\u0027 and  \";",
        "                break;",
        "            case 2:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_detail where subCompanyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_detail where groupDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   from stat_6monitoralarm_detail where lineDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "",
        "",
        "        }",
        "",
        "        $sql .\u003d \"1\u003d1\";",
        "",
        "        if (isset($params[\u0027findKey\u0027]) \u0026\u0026 isset($params[\u0027findVal\u0027])) {",
        "            $key \u003d $params[\u0027findKey\u0027];",
        "            $val \u003d $params[\u0027findVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key \u003e \u0027$val\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey2\u0027]) \u0026\u0026 isset($params[\u0027findVal2\u0027])) {",
        "            $key \u003d $params[\u0027findKey2\u0027];",
        "            $val \u003d $params[\u0027findVal2\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key \u003c \u0027$val\u0027 \";",
        "            }",
        "",
        "        }",
        "        if (isset($params[\u0027findKey3\u0027]) \u0026\u0026 isset($params[\u0027findVal3\u0027])) {",
        "            $key \u003d $params[\u0027findKey3\u0027];",
        "            $val \u003d $params[\u0027findVal3\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key in (\u0027$val\u0027) \";",
        "            }",
        "",
        "",
        "        }",
        "",
        "",
        "        if (isset($params[\u0027findKey4\u0027]) \u0026\u0026 isset($params[\u0027findVal4\u0027])) {",
        "            $key \u003d $params[\u0027findKey4\u0027];",
        "            $val \u003d $params[\u0027findVal4\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like (\u0027%$val%\u0027) \";",
        "            }",
        "        }",
        "        if (isset($params[\u0027findKey5\u0027]) \u0026\u0026 isset($params[\u0027findVal5\u0027])) {",
        "            $key \u003d $params[\u0027findKey5\u0027];",
        "            $val \u003d $params[\u0027findVal5\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like (\u0027$val\u0027) \";",
        "            }",
        "        }",
        "",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "        if (isset($params[\u0027sortKey\u0027]) \u0026\u0026 isset($params[\u0027sortVal\u0027])) {",
        "            $key \u003d $params[\u0027sortKey\u0027];",
        "            $val \u003d $params[\u0027sortVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" order by $key $val \";",
        "            }",
        "        }",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "",
        "    public function getRecordsfromAlarmMonitorAlarmRank($params)",
        "    {",
        "",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "//   selectsql 完整如下：",
        "",
        "",
        "//        SELECT * FROM (",
        "//",
        "//            SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM",
        "//    (SELECT alarmType,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "//  FROM v_6monitoralarmrank  WHERE 条件  GROUP BY alarmType,statTime ORDER BY times DESC  )c INNER JOIN    (SELECT @pretimes:\u003d-1,@rank:\u003d0,@asistrank:\u003d1)  b   )d  LIMIT num1,num2;",
        "",
        "        $selectSql \u003d \" SELECT *\";",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                $sql \u003d \"   FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT alarmType,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitoralarmrank  where  \";",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT alarmType,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitoralarmrank  where  companyDeptId \u003d \u0027$id\u0027 and  \";",
        "                break;",
        "            case 2:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"  FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT alarmType,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitoralarmrank   where  subCompanyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \" FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT alarmType,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitoralarmrank   where  groupDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \" FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT alarmType,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitoralarmrank  where  lineDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "",
        "",
        "        }",
        "",
        "        $sql .\u003d \"1\u003d1\";",
        "",
        "        if (isset($params[\u0027findKey\u0027]) \u0026\u0026 isset($params[\u0027findVal\u0027])) {",
        "            $key \u003d $params[\u0027findKey\u0027];",
        "            $val \u003d $params[\u0027findVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey2\u0027]) \u0026\u0026 isset($params[\u0027findVal2\u0027])) {",
        "            $key \u003d $params[\u0027findKey2\u0027];",
        "            $val \u003d $params[\u0027findVal2\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "",
        "        }",
        "        if (isset($params[\u0027findKey3\u0027]) \u0026\u0026 isset($params[\u0027findVal3\u0027])) {",
        "            $key \u003d $params[\u0027findKey3\u0027];",
        "            $val \u003d $params[\u0027findVal3\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and ( $key in (\u0027$val\u0027) \";",
        "            }",
        "//            $sql .\u003d \" and ( $key in (\u0027$val\u0027) \" ;",
        "        }",
        "",
        "        if (isset($params[\u0027findKey6\u0027]) \u0026\u0026 isset($params[\u0027findVal6\u0027])) {",
        "            $key \u003d $params[\u0027findKey6\u0027];",
        "            $val \u003d $params[\u0027findVal6\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" or  $key in (\u0027$val\u0027) )\";",
        "            }",
        "            //  $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "        }",
        "",
        "        $sql .\u003d \"  GROUP BY alarmType,statTime ORDER BY times DESC  )c INNER JOIN    (SELECT @pretimes:\u003d-1,@rank:\u003d0,@asistrank:\u003d1)  b   )d \";",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "",
        "//        if (isset($params[\u0027sortKey\u0027])\u0026\u0026isset($params[\u0027sortVal\u0027])) {",
        "//            $key \u003d $params[\u0027sortKey\u0027];",
        "//            $val \u003d $params[\u0027sortVal\u0027];",
        "//            if($val !\u003d \"\" ){",
        "//                $sql .\u003d \" order by $key $val \" ;",
        "//            }",
        "//        }",
        "",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "",
        "    public function getViolationCount_old(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对车辆",
        "        // 需要改回，",
        "//        $dept[\u0027level\u0027]\u003d0;",
        "// 判断用户等级",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "// 建立目标返回数组",
        "        $rets \u003d [",
        "            \u0027all\u0027 \u003d\u003e 0,    // 全部违规",
        "            \u0027danger\u0027 \u003d\u003e 0,        // 危险违规",
        "            //      \u0027highConsume\u0027 \u003d\u003e 0,         // 高耗能违规",
        "            \u0027damgageType\u0027 \u003d\u003e 0,        // 损害违规",
        "            \u0027badService\u0027 \u003d\u003e 0,             // 不良服务违规",
        "        ];",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // sql 头部",
        "//        $sql\u003d\"SELECT SUM(times)  AS `cnt` FROM (SELECT vehicledeviceid,actionType,stat_date,lineDeptid, COUNT(1) AS times",
        "//FROM stat_driving_violation_detail WHERE \";",
        "        $sql \u003d \"SELECT ifnull(SUM(times),0)  AS `cnt` FROM (SELECT vehicleNo,actiontypeDesc,deptId, SUM(total) AS times  FROM api_violation WHERE vehicleNo in ",
        " (select vehicleNo from v_vehicleinfo where  \";",
        "",
        "",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        // 固定的sql语句, 关联机构",
        "        $fixedCondtion \u003d \" \";",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        $violationtype \u003d \" and actiontypeDesc  IN (SELECT violationName FROM driving_violation_type WHERE deptid\u003d$userdeptid and \";",
        "",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        $vehicleNoorID \u003d \u0027vehicleNo\u0027;",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT ifnull(SUM(times),0)  AS `cnt` FROM (SELECT *, SUM(totalNum) AS times  FROM  stat_driving_violation_summary WHERE  deviceid in ",
        " (select deviceid from v_vehicleinfo where\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                $vehicleNoorID \u003d \u0027deviceid\u0027;",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT ifnull(SUM(times),0)    AS `cnt` FROM (SELECT *, SUM(totalNum) AS times  FROM  stat_driving_violation_summary WHERE  deviceid in ",
        " (select deviceid from v_vehicleinfo where\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                $vehicleNoorID \u003d \u0027deviceid\u0027;",
        "",
        "                break;",
        "        }",
        "",
        "// 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion .\u003d \"  $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 )\";",
        "            } else {",
        "                $fixedCondtion .\u003d \"  $deptlevel\u003d$id )\";",
        "            }",
        "            $sql .\u003d $fixedCondtion . \u0027and\u0027 . $dataconditon;",
        "            $sqltype \u003d $sql . $violationtype;",
        "            // 获取各类型数据数据",
        "            $sqlall \u003d $sql . \"GROUP BY $vehicleNoorID,actiontypeDesc )a \";",
        "            $sqldanger \u003d $sqltype . \"   dangerType\u003d1) GROUP BY $vehicleNoorID,actiontypeDesc)a  \";",
        "            //   $sqlhighConsume\u003d$sqltype.\"   hignConsumeType\u003d1)\";",
        "            $sqldamgage \u003d $sqltype . \"  damageType\u003d1) GROUP BY $vehicleNoorID,actiontypeDesc )a \";",
        "            $sqlbadService \u003d $sqltype . \"   badServiceType\u003d1) GROUP BY $vehicleNoorID,actiontypeDesc )a \";",
        "",
        "            $rets[\u0027all\u0027] \u003d DB::select($sqlall)[0]-\u003ecnt;",
        "            $rets[\u0027danger\u0027] \u003d DB::select($sqldanger)[0]-\u003ecnt;",
        "            //  $rets[\u0027highConsume\u0027] \u003dDB::select($sqlhighConsume)[0]-\u003ecnt;",
        "            $rets[\u0027damgageType\u0027] \u003d DB::select($sqldamgage)[0]-\u003ecnt;",
        "            $rets[\u0027badService\u0027] \u003d DB::select($sqlbadService)[0]-\u003ecnt;",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion .\u003d \"   $depttype \u003d \u0027$deptid\u0027) \";",
        "        } else {",
        "            $fixedCondtion .\u003d \"  1\u003d1 ) \";",
        "        }",
        "        $sql .\u003d $fixedCondtion . \u0027and\u0027 . $dataconditon;",
        "        $sqltype \u003d $sql . $violationtype;",
        "        // 获取各类型数据数据",
        "        $sqlall \u003d $sql . \"GROUP BY $vehicleNoorID,actiontypeDesc )a \";",
        "        $sqldanger \u003d $sqltype . \"   dangerType\u003d1) GROUP BY $vehicleNoorID,actiontypeDesc)a  \";",
        "        //   $sqlhighConsume\u003d$sqltype.\"   hignConsumeType\u003d1)\";",
        "        $sqldamgage \u003d $sqltype . \"  damageType\u003d1) GROUP BY $vehicleNoorID,actiontypeDesc )a \";",
        "        $sqlbadService \u003d $sqltype . \"   badServiceType\u003d1) GROUP BY $vehicleNoorID,actiontypeDesc )a \";",
        "",
        "        $rets[\u0027all\u0027] \u003d DB::select($sqlall)[0]-\u003ecnt;",
        "        $rets[\u0027danger\u0027] \u003d DB::select($sqldanger)[0]-\u003ecnt;",
        "        //  $rets[\u0027highConsume\u0027] \u003dDB::select($sqlhighConsume)[0]-\u003ecnt;",
        "        $rets[\u0027damgageType\u0027] \u003d DB::select($sqldamgage)[0]-\u003ecnt;",
        "        $rets[\u0027badService\u0027] \u003d DB::select($sqlbadService)[0]-\u003ecnt;",
        "        return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getViolationCount",
        "     * @name: 违规概括信息",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getViolationCount(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 判断用户等级",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "// 建立目标返回数组",
        "        $rets \u003d [",
        "            \u0027all\u0027 \u003d\u003e 0,    // 全部违规",
        "            \u0027danger\u0027 \u003d\u003e 0,        // 危险违规",
        "            //      \u0027highConsume\u0027 \u003d\u003e 0,         // 高耗能违规",
        "            \u0027damgageType\u0027 \u003d\u003e 0,        // 损害违规",
        "            \u0027badService\u0027 \u003d\u003e 0,             // 不良服务违规",
        "        ];",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        $id \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        $driverId \u003d $request-\u003eget(\u0027driverId\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        $rets \u003d $this-\u003equeryViolationData($deptlevel, $id, $deptid, $depttype, $datatype, $driverId);",
        "        if ($datatype !\u003d null) $datatype \u003d $datatype + 6;",
        "        $beforerets \u003d $this-\u003equeryViolationData($deptlevel, $id, $deptid, $depttype, $datatype, $driverId);",
        "",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $rets, $beforerets);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDriverViolationTimes",
        "     * @name: 驾驶员违规分析",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: driverName,description:驾驶员姓名",
        "     *parameter5: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDriverViolationTimes(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromgetDriverViolationTimes($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_driver_violation_times\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromgetDriverViolationTimes($params)",
        "    {",
        "        Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $datatype \u003d 0;",
        "        $jj \u003d $params[\u0027timeType\u0027];",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $jj;",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "",
        "                break;",
        "        }",
        "        $driverName \u003d $params[\u0027driverName\u0027];",
        "        $deptId \u003d $params[\u0027deptId\u0027];",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        $sql \u003d \" FROM (",
        "SELECT actiontypeDesc,SUM(total) AS total  FROM api_violation WHERE driverName\u003d\u0027$driverName\u0027 and deptId\u003d\u0027$deptId\u0027 AND $dataconditon GROUP BY actiontypeDesc)a INNER JOIN ",
        " (  SELECT \u0027危险驾驶\u0027 AS t, violationName FROM `driving_violation_type` WHERE deptid\u003d$userdeptid and dangerType\u003d1 ",
        " UNION ALL SELECT \u0027损车驾驶\u0027 AS t, violationName FROM `driving_violation_type` WHERE deptid\u003d$userdeptid and damageType\u003d1 ",
        " UNION ALL SELECT \u0027不良服务\u0027 AS t, violationName FROM `driving_violation_type` WHERE deptid\u003d$userdeptid and badServiceType\u003d1 ) b ON  a.actiontypeDesc\u003db.violationName GROUP BY actiontypeDesc \";",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "        $selectSql \u003d \" SELECT  actiontypeDesc,total as violationTimes , GROUP_CONCAT(t ORDER BY total) as violationType\";",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . \"from (select * \" . $sql . \")a\")[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "        $sqlNoLimit \u003d $sql . \"order by violationTimes desc \";",
        "        $sql \u003d $sqlNoLimit . \" limit $offset , $count\";",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "        $records2 \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sqlNoLimit, 20);",
        "        $cnt \u003d count($records);",
        "        $cnt2 \u003d count($records2);",
        "        $alltotal \u003d 0;",
        "        for ($i \u003d 0; $i \u003c $cnt2; $i++) {",
        "            $alltotal \u003d $alltotal + $records2[$i]-\u003eviolationTimes;",
        "        }",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $records[$i]-\u003epercent \u003d strval(round($records[$i]-\u003eviolationTimes / $alltotal, 3) * 100) . \"%\";",
        "        }",
        "",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "        return $data;",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getViolationDriverCount",
        "     * @name: 驾驶员违规次数",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:线路ID",
        "     *parameter2: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getViolationDriverCount(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "//",
        "//// 建立目标返回数组",
        "        $rets \u003d [",
        "            \u0027all\u0027 \u003d\u003e 0,    // 全部违规数",
        "            \u0027carCnt\u0027 \u003d\u003e 0,        // 车辆计数",
        "            \u0027driverCnt\u0027 \u003d\u003e 0,         // 司机计数",
        "",
        "        ];",
        "        $beforerets \u003d $rets;",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // sql 头部",
        "        $sql \u003d \"SELECT ifnull(sum(a.total),0) as allcnt,count(deviceid)as carcnt,mark FROM ",
        "(SELECT api.deviceid,  SUM(totalNum) AS total,1 AS mark FROM stat_driving_violation_day  api",
        "join (select driverid from v_driverinfo \";",
        "        $sqltwo \u003d \" UNION ALL",
        "                  SELECT api.deviceid,SUM(totalNum) AS total,2 AS mark FROM stat_driving_violation_day  api JOIN (SELECT driverid FROM v_driverinfo \";",
        "",
        "        $sql2 \u003d \"SELECT count(driverName) as cnt,mark FROM ",
        "(SELECT driverName ,1 AS mark FROM stat_driving_violation_day  api",
        "join (select driverid from v_driverinfo   \";",
        "",
        "        $sql2two \u003d \" union all SELECT api.driverName ,2 AS mark FROM stat_driving_violation_day  api JOIN (SELECT driverid FROM v_driverinfo \";",
        "",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        $companyId \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003eselect(\u0027companyDeptId\u0027)-\u003ewhere($depttype, \u0027\u003d\u0027, $deptid)-\u003efirst()-\u003ecompanyDeptId;",
        "",
        "        // 固定的sql语句 ,关联机构",
        "        $fixedCondtion \u003d \"    \";",
        "",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                $timeconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 2 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 14 day and stat_date\u003c CURRENT_DATE()-interval 7 day\";",
        "",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 2 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day- interval 1 month\";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 2 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year\";",
        "                break;",
        "",
        "        }",
        "",
        "// 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) temp on api.driverId\u003dtemp.driverid join driving_violation_type vioype ON api.actionType\u003dvioype.violationeName and vioype.deptid\u003d$companyId and lineid\u003d$deptid\";",
        "            } else {",
        "                $fixedCondtion .\u003d \" where $deptlevel\u003d$id ) temp on api.driverId\u003dtemp.driverid join driving_violation_type vioype ON api.actionType\u003dvioype.violationeName and vioype.deptid\u003d$companyId and lineid\u003d$deptid\";",
        "            };",
        "            // 总数 车辆 驾驶员",
        "            $sqldriver \u003d $sql2 . $fixedCondtion . \u0027 and \u0027 . $dataconditon . \" GROUP BY api.driverName $sql2two $fixedCondtion and  $timeconditon   GROUP BY driverName)a GROUP BY mark ORDER BY mark ASC\";",
        "            $sqlAll \u003d $sql . $fixedCondtion . \u0027 and \u0027 . $dataconditon . \" GROUP BY api.deviceId $sqltwo $fixedCondtion  and  $timeconditon   GROUP BY deviceid )a GROUP BY mark ORDER BY mark ASC\";",
        "            $alldata \u003d DB::select($sqlAll);",
        "            $driverdata \u003d DB::select($sqldriver);",
        "",
        "",
        "//本期",
        "",
        "            if (count($alldata) \u003e 0 \u0026\u0026 count($driverdata) \u003e 0 \u0026\u0026 $alldata[0]-\u003emark \u003d\u003d 1) {",
        "                $rets[\u0027all\u0027] \u003d $alldata[0]-\u003eallcnt;",
        "                $rets[\u0027carCnt\u0027] \u003d $alldata[0]-\u003ecarcnt;",
        "                $rets[\u0027driverCnt\u0027] \u003d $driverdata[0]-\u003ecnt;",
        "            } else if (count($alldata) \u003e 0 \u0026\u0026 count($driverdata) \u003e 0 \u0026\u0026 $alldata[0]-\u003emark \u003d\u003d 2) {",
        "                $beforerets[\u0027all\u0027] \u003d $alldata[0]-\u003eallcnt;",
        "                $beforerets[\u0027carCnt\u0027] \u003d $alldata[0]-\u003ecarcnt;",
        "                $beforerets[\u0027driverCnt\u0027] \u003d $driverdata[0]-\u003ecnt;",
        "            }",
        "//上期",
        "            if (count($alldata) \u003d\u003d 2 \u0026\u0026 count($driverdata) \u003d\u003d 2) {",
        "                $beforerets[\u0027all\u0027] \u003d $alldata[1]-\u003eallcnt;",
        "                $beforerets[\u0027carCnt\u0027] \u003d $alldata[1]-\u003ecarcnt;",
        "                $beforerets[\u0027driverCnt\u0027] \u003d $driverdata[1]-\u003ecnt;",
        "            }",
        "",
        "            return $this-\u003esetJsonResponseNew(SUCCESS, $rets, $beforerets);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion .\u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) temp on api.driverId\u003dtemp.driverid join driving_violation_type vioype ON api.actionType\u003dvioype.violationeName and vioype.deptid\u003d$companyId and lineid\u003d$deptid\";",
        "        } else {",
        "            $fixedCondtion .\u003d \" where 1\u003d1 ) temp on api.driverId\u003dtemp.driverid join driving_violation_type vioype ON api.actionType\u003dvioype.violationeName and vioype.deptid\u003d$companyId and lineid\u003d$deptid\";",
        "        };",
        "",
        "        // 总数 车辆 驾驶员",
        "        //$sqldriver \u003d $sql2 . $fixedCondtion . \u0027 and \u0027 . $dataconditon . \" GROUP BY api.driverName )a\";",
        "        // $sqlAll \u003d $sql . $fixedCondtion . \u0027 and \u0027 . $dataconditon . \" GROUP BY api.deviceId )a \";",
        "        $sqldriver \u003d $sql2 . $fixedCondtion . \u0027 and \u0027 . $dataconditon . \" GROUP BY api.driverName $sql2two $fixedCondtion and  $timeconditon GROUP BY driverName)a GROUP BY mark ORDER BY mark ASC\";",
        "        $sqlAll \u003d $sql . $fixedCondtion . \u0027 and \u0027 . $dataconditon . \" GROUP BY api.deviceId $sqltwo $fixedCondtion  and  $timeconditon   GROUP BY deviceid )a GROUP BY mark ORDER BY mark ASC\";",
        "",
        "",
        "        $alldata \u003d DB::select($sqlAll);",
        "        $driverdata \u003d DB::select($sqldriver);",
        "",
        "//本期",
        "",
        "        if (count($alldata) \u003e 0 \u0026\u0026 count($driverdata) \u003e 0 \u0026\u0026 $alldata[0]-\u003emark \u003d\u003d 1) {",
        "            $rets[\u0027all\u0027] \u003d $alldata[0]-\u003eallcnt;",
        "            $rets[\u0027carCnt\u0027] \u003d $alldata[0]-\u003ecarcnt;",
        "            $rets[\u0027driverCnt\u0027] \u003d $driverdata[0]-\u003ecnt;",
        "        } else if (count($alldata) \u003e 0 \u0026\u0026 count($driverdata) \u003e 0 \u0026\u0026 $alldata[0]-\u003emark \u003d\u003d 2) {",
        "            $beforerets[\u0027all\u0027] \u003d $alldata[0]-\u003eallcnt;",
        "            $beforerets[\u0027carCnt\u0027] \u003d $alldata[0]-\u003ecarcnt;",
        "            $beforerets[\u0027driverCnt\u0027] \u003d $driverdata[0]-\u003ecnt;",
        "        }",
        "//上期",
        "        if (count($alldata) \u003d\u003d 2 \u0026\u0026 count($driverdata) \u003d\u003d 2) {",
        "            $beforerets[\u0027all\u0027] \u003d $alldata[1]-\u003eallcnt;",
        "            $beforerets[\u0027carCnt\u0027] \u003d $alldata[1]-\u003ecarcnt;",
        "            $beforerets[\u0027driverCnt\u0027] \u003d $driverdata[1]-\u003ecnt;",
        "        }",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $rets, $beforerets);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDangerViolationRank",
        "     * @name: 危险驾驶排名表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDangerViolationRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromDangerViolationRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_dangerviolation\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromDangerViolationRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "",
        "        //时间类型默认为0 昨天",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //获取时间",
        "        $timeArr \u003d $this-\u003etimeTypeConversion($datatype);",
        "        $startDay \u003d $timeArr[\u0027startDay\u0027];",
        "        $endDay \u003d $timeArr[\u0027endDay\u0027];",
        "        //获取用户id",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "",
        "        //获取违规类型",
        "        $dangerData \u003d DB::table(\u0027driving_violation_type\u0027)",
        "            -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "            -\u003ewhere(\u0027dangerType\u0027, \u0027\u003d\u0027, \u00271\u0027)",
        "            -\u003eselect(\u0027violationeName\u0027)",
        "            -\u003eget();",
        "        $dangerDataArr \u003d [];",
        "        for ($i \u003d 0; $i \u003c count($dangerData); $i++) {",
        "            $dangerDataArr[] \u003d $dangerData[$i]-\u003eviolationeName;",
        "        }",
        "",
        "        $temp \u003d DB::table(\"v_driverinfo_all\")-\u003eselectRaw(\"driverId,lineName\")-\u003ewhere($depttype, $deptid)-\u003eget();",
        "        $cnt \u003d count($temp);",
        "        for ($i \u003d 0; $i \u003c $cnt; ++$i) {",
        "            $driverId[] \u003d $temp[$i]-\u003edriverid;",
        "        }",
        "        $lineName \u003d $temp[0]-\u003elineName;",
        "        //当页面选中为timeType\u003d0，昨天时，数据从stat_driving_violation_detail统计",
        "        if ($datatype \u003d\u003d 0) {",
        "            $data \u003d DB::table(\u0027stat_driving_violation_detail as sdvd\u0027)",
        "                -\u003ewhere(\u0027sdvd.stat_date\u0027, \u0027\u003d\u0027, $startDay)",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027count(sdvd.actiontype) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        } else if ($datatype \u003d\u003d 1 || $datatype \u003d\u003d 2 || $datatype \u003d\u003d 3) {",
        "            //当页面选中为timeType\u003d1,2,3，数据从stat_driving_violation_day统计",
        "            $data \u003d DB::table(\u0027stat_driving_violation_day as sdvd\u0027)",
        "                -\u003ewhereRaw(\u0027sdvd.stat_date\u003e\u003d? and sdvd.stat_date\u003c\u003d?\u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027sdvd.actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027sum(sdvd.totalNum) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        } else if ($datatype \u003d\u003d 4 || $datatype \u003d\u003d 5) {",
        "            $data \u003d DB::table(\u0027stat_driving_violation_summary as sdvd\u0027)",
        "                -\u003ewhereRaw(\u0027sdvd.stat_date\u003e\u003d? and sdvd.stat_date\u003c\u003d?\u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027sdvd.actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027sum(sdvd.totalNum) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        }",
        "        $page \u003d $data-\u003ecurrentPage();",
        "        $per_page \u003d $data-\u003eperPage();",
        "        for ($i \u003d 0; $i \u003c count($data); $i++) {",
        "            $data[$i]-\u003erank \u003d ($page - 1) * $per_page + $i + 1;",
        "        }",
        "        return $data;",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDamageViolationRank",
        "     * @name: 损车驾驶排名表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDamageViolationRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromDamageViolationRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_damageviolation\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromDamageViolationRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "        //时间类型默认为0 昨天",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //获取时间",
        "        $timeArr \u003d $this-\u003etimeTypeConversion($datatype);",
        "        $startDay \u003d $timeArr[\u0027startDay\u0027];",
        "        $endDay \u003d $timeArr[\u0027endDay\u0027];",
        "        //获取用户id",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "",
        "        //获取违规类型",
        "        $dangerData \u003d DB::table(\u0027driving_violation_type\u0027)",
        "            -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "            -\u003ewhere(\u0027damageType\u0027, \u0027\u003d\u0027, \u00271\u0027)",
        "            -\u003eselect(\u0027violationeName\u0027)",
        "            -\u003eget();",
        "        $dangerDataArr \u003d [];",
        "        for ($i \u003d 0; $i \u003c count($dangerData); $i++) {",
        "            $dangerDataArr[] \u003d $dangerData[$i]-\u003eviolationeName;",
        "        }",
        "        $temp \u003d DB::table(\"v_driverinfo_all\")-\u003eselectRaw(\"driverId,lineName\")-\u003ewhere($depttype, $deptid)-\u003eget();",
        "        $cnt \u003d count($temp);",
        "        for ($i \u003d 0; $i \u003c $cnt; ++$i) {",
        "            $driverId[] \u003d $temp[$i]-\u003edriverid;",
        "        }",
        "        $lineName \u003d $temp[0]-\u003elineName;",
        "        //当页面选中为timeType\u003d0，昨天时，数据从stat_driving_violation_detail统计",
        "        if ($datatype \u003d\u003d 0) {",
        "            $data \u003d DB::table(\u0027stat_driving_violation_detail as sdvd\u0027)",
        "                -\u003ewhere(\u0027sdvd.stat_date\u0027, \u0027\u003d\u0027, $startDay)",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027count(sdvd.actiontype) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        } else if ($datatype \u003d\u003d 1 || $datatype \u003d\u003d 2 || $datatype \u003d\u003d 3) {",
        "            //当页面选中为timeType\u003d1,2,3，数据从stat_driving_violation_day统计",
        "            $data \u003d DB::table(\u0027stat_driving_violation_day as sdvd\u0027)",
        "                -\u003ewhereRaw(\u0027sdvd.stat_date\u003e\u003d? and sdvd.stat_date\u003c\u003d?\u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027sdvd.actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027sum(sdvd.totalNum) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        } else if ($datatype \u003d\u003d 4 || $datatype \u003d\u003d 5) {",
        "            $data \u003d DB::table(\u0027stat_driving_violation_summary as sdvd\u0027)",
        "                -\u003ewhereRaw(\u0027sdvd.stat_date\u003e\u003d? and sdvd.stat_date\u003c\u003d?\u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027sdvd.actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027sum(sdvd.totalNum) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        }",
        "        $page \u003d $data-\u003ecurrentPage();",
        "        $per_page \u003d $data-\u003eperPage();",
        "        for ($i \u003d 0; $i \u003c count($data); $i++) {",
        "            $data[$i]-\u003erank \u003d ($page - 1) * $per_page + $i + 1;",
        "        }",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBadServiceViolationRank",
        "     * @name: 不良驾驶排名表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBadServiceViolationRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromBadServiceViolationRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_badserviceviolation\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromBadServiceViolationRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        //时间类型默认为0 昨天",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //获取时间",
        "        $timeArr \u003d $this-\u003etimeTypeConversion($datatype);",
        "        $startDay \u003d $timeArr[\u0027startDay\u0027];",
        "        $endDay \u003d $timeArr[\u0027endDay\u0027];",
        "        //获取用户id",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "",
        "        //获取违规类型",
        "        $dangerData \u003d DB::table(\u0027driving_violation_type\u0027)",
        "            -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "            -\u003ewhere(\u0027badServiceType\u0027, \u0027\u003d\u0027, \u00271\u0027)",
        "            -\u003eselect(\u0027violationeName\u0027)",
        "            -\u003eget();",
        "        $dangerDataArr \u003d [];",
        "        for ($i \u003d 0; $i \u003c count($dangerData); $i++) {",
        "            $dangerDataArr[] \u003d $dangerData[$i]-\u003eviolationeName;",
        "        }",
        "        $temp \u003d DB::table(\"v_driverinfo_all\")-\u003eselectRaw(\"driverId,lineName\")-\u003ewhere($depttype, $deptid)-\u003eget();",
        "        $cnt \u003d count($temp);",
        "        for ($i \u003d 0; $i \u003c $cnt; ++$i) {",
        "            $driverId[] \u003d $temp[$i]-\u003edriverid;",
        "        }",
        "        $lineName \u003d $temp[0]-\u003elineName;",
        "        //当页面选中为timeType\u003d0，昨天时，数据从stat_driving_violation_detail统计",
        "        if ($datatype \u003d\u003d 0) {",
        "            $data \u003d DB::table(\u0027stat_driving_violation_detail as sdvd\u0027)",
        "                -\u003ewhere(\u0027sdvd.stat_date\u0027, \u0027\u003d\u0027, $startDay)",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027count(sdvd.actiontype) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        } else if ($datatype \u003d\u003d 1 || $datatype \u003d\u003d 2 || $datatype \u003d\u003d 3) {",
        "            //当页面选中为timeType\u003d1,2,3，数据从stat_driving_violation_day统计",
        "            $data \u003d DB::table(\u0027stat_driving_violation_day as sdvd\u0027)",
        "                -\u003ewhereRaw(\u0027sdvd.stat_date\u003e\u003d? and sdvd.stat_date\u003c\u003d?\u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027sdvd.actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027sum(sdvd.totalNum) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        } else if ($datatype \u003d\u003d 4 || $datatype \u003d\u003d 5) {",
        "            $data \u003d DB::table(\u0027stat_driving_violation_summary as sdvd\u0027)",
        "                -\u003ewhereRaw(\u0027sdvd.stat_date\u003e\u003d? and sdvd.stat_date\u003c\u003d?\u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027sdvd.actiontype\u0027, $dangerDataArr)",
        "                -\u003ewhereIn(\u0027sdvd.driverId\u0027, $driverId)",
        "                -\u003egroupBy(\u0027sdvd.driverId\u0027)",
        "                -\u003eorderBy(\u0027violationtimes\u0027, \u0027desc\u0027)",
        "                -\u003eselectRaw(\u0027sum(sdvd.totalNum) as violationtimes,sdvd.driverName,\u0027 . \"\u0027$lineName\u0027 as lineName\")",
        "                -\u003epaginate($count);",
        "        }",
        "        $page \u003d $data-\u003ecurrentPage();",
        "        $per_page \u003d $data-\u003eperPage();",
        "        for ($i \u003d 0; $i \u003c count($data); $i++) {",
        "            $data[$i]-\u003erank \u003d ($page - 1) * $per_page + $i + 1;",
        "        }",
        "        return $data;",
        "    }",
        "",
        "",
        "    public function getViolationTrends(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5\u0027, // 时间类型",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d $this-\u003egetRecordsViolationTrends($this-\u003eparams);",
        "        if (empty($ret)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $ret);",
        "        };",
        "",
        "        $timeType \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        $time \u003d $this-\u003egetTimeFunction($timeType);",
        "",
        "        switch ($timeType) {",
        "            case 1:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 8, 2);",
        "                }",
        "                break;",
        "            case 2:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 8, 2);",
        "                }",
        "                break;",
        "            case 3:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 8, 2);",
        "                }",
        "                break;",
        "            case 4:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 5, 2);",
        "                }",
        "                break;",
        "            case 5:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 5, 2);",
        "                }",
        "                break;",
        "        }",
        "",
        "        foreach ($ret as $key \u003d\u003e $val) {",
        "            $ret[\"$key\"][\u0027time\u0027] \u003d $time;",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    public function getRecordsViolationTrends($data)",
        "    {",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($data[\u0027depttype\u0027])) {",
        "            $depttype \u003d $data[\u0027depttype\u0027];",
        "        };",
        "        $deptid \u003d $data[\u0027deptid\u0027];",
        "        $timeType \u003d $data[\u0027timeType\u0027];",
        "        DB::statement(DB::raw(\"SET @@GROUP_CONCAT_MAX_LEN \u003d 1024000;\"));",
        "        DB::statement(DB::raw(\"CALL  p_api_violationstrend($timeType,\u0027$deptid\u0027,\u0027$depttype\u0027,@r);\"));",
        "",
        "        $ret \u003d DB::select(\"select @r as data\");",
        "",
        "",
        "        return json_decode(($ret[0]-\u003edata), TRUE);",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getViolationTrendsForType",
        "     * @name: 获取某种违规类型下所有小 违规类型趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: type,description:图形类型",
        "     *parameter4: violationtype,description:违规类型",
        "     *parameter5: top,description:类型",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getViolationTrendsForType(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5\u0027, // 时间类型",
        "            \u0027violationtype\u0027 \u003d\u003e \u0027required\u0027, // 故障类型",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d $this-\u003egetRecordsViolationTrendsForType($this-\u003eparams);",
        "",
        "//        if(!isset($this-\u003eparams[\u0027top\u0027])){",
        "//            for ($arrcnt \u003d count($ret); $arrcnt \u003c 5; $arrcnt++) {",
        "//                $ret[$arrcnt] \u003d [",
        "//                    \u0027name\u0027 \u003d\u003e \"\",",
        "//                    \u0027data\u0027 \u003d\u003e \"\"];",
        "//            }",
        "//        }else{",
        "//            //首页用，有多少返回多少",
        "//            $ret\u003d$ret;",
        "//        }",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    public function getRecordsViolationTrendsForType($data)",
        "    {",
        "",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($data[\u0027depttype\u0027])) {",
        "            $depttype \u003d $data[\u0027depttype\u0027];",
        "        };",
        "        $deptid \u003d $data[\u0027deptid\u0027];",
        "        if (isset($data[\u0027driverId\u0027])) {",
        "            $data[\u0027driverId\u0027] \u003d explode(\",\", $data[\u0027driverId\u0027]);",
        "        } else {",
        "            $temp \u003d DB::table(\"v_driverinfo\")-\u003eselect(\"driverId\")-\u003ewhere($depttype, $deptid)-\u003eget();",
        "            $cnt \u003d count($temp);",
        "            for ($i \u003d 0; $i \u003c $cnt; ++$i) {",
        "                $data[\u0027driverId\u0027][] \u003d $temp[$i]-\u003edriverid;",
        "            }",
        "            if (!isset($data[\u0027driverId\u0027])) $data[\u0027driverId\u0027] \u003d [];",
        "        }",
        "",
        "        $timeType \u003d $data[\u0027timeType\u0027];",
        "        $violationtype \u003d $data[\u0027violationtype\u0027];",
        "",
        "        switch ($violationtype) {",
        "            case 0://危险驾驶",
        "                $violationtype \u003d \"dangerType\";",
        "                break;",
        "            case 1://损车驾驶",
        "                $violationtype \u003d \"damageType\";",
        "                break;",
        "            case 2://不良服务",
        "                $violationtype \u003d \"badServiceType\";",
        "                break;",
        "            case 3:",
        "                $violationtype \u003d -1;",
        "                break;",
        "        }",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "",
        "        //获取时间数组",
        "        $timeDay \u003d $this-\u003etimeTypeConversion($timeType);",
        "        //取得开始结束时间",
        "        $startDay \u003d $timeDay[\u0027startDay\u0027];",
        "        $endDay \u003d $timeDay[\u0027endDay\u0027];",
        "        //获取选中下的车辆标识",
        "        $deviceId \u003d DB::table(\u0027t_vehicleinfo as a\u0027)",
        "            -\u003ejoin(\u0027v_lineinfo as b\u0027, \u0027a.deptId\u0027, \u0027\u003d\u0027, \u0027b.lineDeptId\u0027)",
        "            -\u003ewhere($depttype, \u0027\u003d\u0027, $deptid)",
        "            -\u003eselect(\u0027deviceid\u0027)",
        "            -\u003eget();",
        "        $cnt \u003d count($deviceId);",
        "        $deviceIdVal \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; ++$i) {",
        "            $deviceIdVal[] \u003d $deviceId[$i]-\u003edeviceid;",
        "        }",
        "",
        "        //获取选中类型下定义的违规名称",
        "        if ($violationtype !\u003d -1) {",
        "            $vioType \u003d DB::table(\u0027driving_violation_type\u0027)",
        "                -\u003eselect(\u0027violationeName\u0027)",
        "                -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "                -\u003ewhere($violationtype, \u0027\u003d\u0027, \u00271\u0027)",
        "                -\u003eget();",
        "        } else {",
        "            $vioType \u003d DB::table(\u0027driving_violation_type\u0027)",
        "                -\u003eselect(\u0027violationeName\u0027)",
        "                -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "                -\u003eget();",
        "        }",
        "",
        "        //获取三种类型下定义的违规名称",
        "        $vioTypeVal \u003d [];",
        "        $num \u003d count($vioType);",
        "        for ($i \u003d 0; $i \u003c $num; $i++) {",
        "            $vioTypeVal[] \u003d $vioType[$i]-\u003eviolationeName;",
        "        }",
        "        $ret \u003d [];",
        "        $ret2 \u003d [];",
        "        //数据和",
        "        $sum \u003d 0;",
        "        //当页面选中为timeType\u003d0，昨天时，数据从stat_driving_violation_detail统计",
        "        if ($timeType \u003d\u003d 0) {",
        "            //获取指定时间段内违规前五名",
        "            $take \u003d 5;",
        "            if (isset($data[\u0027top\u0027])) {",
        "                $take \u003d $data[\u0027top\u0027];",
        "            }",
        "            $vioTypeTop \u003d DB::table(\u0027stat_driving_violation_detail\u0027);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003ewhereNotNull(\u0027driverId\u0027);",
        "            }",
        "            $vioTypeTop \u003d $vioTypeTop-\u003ewhere(\u0027stat_date\u0027, \u0027\u003d\u0027, $startDay)",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $vioTypeVal)",
        "                -\u003egroupBy(\u0027actiontype\u0027)",
        "                -\u003eselectRaw(\u0027count(actiontype) as cnt,actiontypeDesc,actiontype\u0027)",
        "                -\u003eorderBy(\u0027cnt\u0027, \u0027desc\u0027);",
        "            if ($take \u003d\u003d -1) {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003eget();",
        "            } else {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003etake($take)-\u003eget();",
        "            }",
        "",
        "            $vioTypeTopVal \u003d [];",
        "            for ($i \u003d 0; $i \u003c count($vioTypeTop); $i++) {",
        "                $vioTypeTopVal[] \u003d $vioTypeTop[$i]-\u003eactiontype;",
        "            }",
        "",
        "            $vioData \u003d DB::table(\u0027stat_driving_violation_detail\u0027);",
        "            $vioData \u003d $vioData-\u003ewhereIn(\u0027actiontype\u0027, $vioTypeTopVal);",
        "            $vioData \u003d $vioData-\u003ewhere(\u0027stat_date\u0027, \u0027\u003d\u0027, $startDay);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $vioData \u003d $vioData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $vioData \u003d $vioData-\u003ewhereNotNull(\u0027driverId\u0027);",
        "            }",
        "",
        "            $vioData \u003d $vioData-\u003egroupBy(\u0027actiontype\u0027)",
        "                -\u003egroupBy(\u0027time\u0027)",
        "                -\u003eselectRaw(\u0027DATE_FORMAT(begin_time,\\\u0027%H\\\u0027) as time,count(actiontype) as actiontypeSum,actiontypeDesc,actiontype\u0027)",
        "                -\u003eorderBy(\u0027actiontype\u0027)",
        "                -\u003eorderBy(\u0027time\u0027)",
        "                -\u003eget();",
        "            $vioDataVal \u003d [];",
        "",
        "            for ($i \u003d 0; $i \u003c count($vioTypeTopVal); $i++) {",
        "                //循环违规项时间段数据",
        "                for ($n \u003d 0; $n \u003c 24; $n++) {",
        "                    $vioDataVal[$n] \u003d 0;",
        "                    //数组第i个位置 初始化为0 寻找结果值里与之对应的数据",
        "                    for ($j \u003d 0; $j \u003c count($vioData); $j++) {",
        "                        //获取一种违规类型的数据",
        "                        if ($vioTypeTopVal[$i] \u003d\u003d $vioData[$j]-\u003eactiontype \u0026\u0026 $vioData[$j]-\u003etime \u003d\u003d $n) {",
        "                            $vioDataVal[$n] \u003d $vioData[$j]-\u003eactiontypeSum;",
        "                            $sum \u003d $sum + $vioData[$j]-\u003eactiontypeSum;",
        "                        }",
        "                    }",
        "                }",
        "                //一次循环完毕，存值，数组至空",
        "                array_push($ret, [\u0027data\u0027 \u003d\u003e $vioDataVal, \u0027name\u0027 \u003d\u003e $vioTypeTop[$i]-\u003eactiontypeDesc]);",
        "                $ret2 \u003d array_merge($ret2, [$vioTypeTop[$i]-\u003eactiontypeDesc \u003d\u003e $sum]);",
        "                $vioDataVal \u003d [];",
        "                $sum \u003d 0;",
        "            }",
        "        } else if ($timeType \u003d\u003d 1 || $timeType \u003d\u003d 2 || $timeType \u003d\u003d 3) {",
        "            //timeType\u003d1或2，统计过去7天和本月数据从日统计表中出数据stat_driving_violation_day",
        "            $timeArr \u003d [];",
        "            $dt_start \u003d strtotime($startDay);",
        "            $dt_end \u003d strtotime($endDay);",
        "            while ($dt_start \u003c\u003d $dt_end) {",
        "                $timeArr[] \u003d date(\u0027Y-m-d\u0027, $dt_start);",
        "                $dt_start \u003d strtotime(\u0027+1 day\u0027, $dt_start);",
        "            }",
        "            $take \u003d 5;",
        "            if (isset($data[\u0027top\u0027])) {",
        "                $take \u003d $data[\u0027top\u0027];",
        "            }",
        "            $vioTypeTop \u003d DB::table(\u0027stat_driving_violation_day\u0027);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003ewhereNotNull(\u0027driverId\u0027);",
        "            };",
        "            $vioTypeTop \u003d $vioTypeTop-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $vioTypeVal)",
        "                -\u003egroupBy(\u0027actiontype\u0027)",
        "                -\u003eselectRaw(\u0027count(actiontype) as cnt,actiontypeDesc,actiontype\u0027);",
        "            if ($take !\u003d -1) {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003etake($take);",
        "            }",
        "            $vioTypeTop \u003d $vioTypeTop-\u003eorderBy(\u0027cnt\u0027, \u0027desc\u0027)-\u003eget();",
        "",
        "            //获取指定时间段内违规前五名",
        "",
        "            $vioTypeTopVal \u003d [];",
        "",
        "            for ($i \u003d 0; $i \u003c count($vioTypeTop); $i++) {",
        "                $vioTypeTopVal[] \u003d $vioTypeTop[$i]-\u003eactiontype;",
        "            }",
        "            if ($depttype \u003d\u003d \u0027lineDeptid\u0027 || $depttype \u003d\u003d \u0027lineDeptId\u0027) {",
        "                $depttype \u003d \u0027lineId\u0027;",
        "            }",
        "            if ($depttype \u003d\u003d \u0027groupDeptid\u0027 || $depttype \u003d\u003d \u0027groupDeptId\u0027) {",
        "                $depttype \u003d \u0027groupId\u0027;",
        "            }",
        "            $vioData \u003d DB::table(\u0027stat_driving_violation_day\u0027);",
        "            $vioData \u003d $vioData-\u003ewhereIn(\u0027actionType\u0027, $vioTypeTopVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $vioData \u003d $vioData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $vioData \u003d $vioData-\u003ewhereNotNull(\u0027driverId\u0027);",
        "            };",
        "            $vioData \u003d $vioData-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003egroupBy(\u0027actionType\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date,actionType,actionTypeDesc\u0027)",
        "                -\u003eorderBy(\u0027actiontype\u0027)",
        "                -\u003eget();",
        "            $vioDataVal \u003d [];",
        "            //5种类型5次循环",
        "            for ($i \u003d 0; $i \u003c count($vioTypeTopVal); $i++) {",
        "                //循环违规项时间段数据",
        "                for ($n \u003d 0; $n \u003c count($timeArr); $n++) {",
        "                    $vioDataVal[$n] \u003d 0;",
        "                    //数组第i个位置 初始化为0 寻找结果值里与之对应的数据",
        "                    for ($j \u003d 0; $j \u003c count($vioData); $j++) {",
        "                        //获取一种违规类型的数据",
        "                        if ($vioTypeTopVal[$i] \u003d\u003d $vioData[$j]-\u003eactionType \u0026\u0026 $vioData[$j]-\u003estat_date \u003d\u003d $timeArr[$n]) {",
        "                            $vioDataVal[$n] \u003d $vioData[$j]-\u003etotalSum;",
        "                            $sum \u003d $sum + $vioData[$j]-\u003etotalSum;",
        "                        }",
        "                    }",
        "                }",
        "                //一次循环完毕，存值，数组至空",
        "                array_push($ret, [\u0027data\u0027 \u003d\u003e $vioDataVal, \u0027name\u0027 \u003d\u003e $vioTypeTop[$i]-\u003eactiontypeDesc]);",
        "                $ret2 \u003d array_merge($ret2, [$vioTypeTop[$i]-\u003eactiontypeDesc \u003d\u003e $sum]);",
        "                $vioDataVal \u003d [];",
        "                $sum \u003d 0;",
        "            }",
        "",
        "        } else {",
        "            //timeType\u003d4或5，统计今年/去年的数据，从月统计表中统计",
        "            $timeArr \u003d [];",
        "            $dt_start \u003d strtotime($startDay);",
        "            $dt_end \u003d strtotime($endDay);",
        "            $temp \u003d date(\"Y-m\", $dt_start) . \u0027-01\u0027;",
        "            while ($temp \u003c\u003d $endDay) {",
        "                $timeArr[] \u003d $temp;",
        "                $temp \u003d date(\"Y-m-d\", strtotime(\"+1 months\", strtotime($temp)));",
        "            }",
        "            $take \u003d 5;",
        "            if (isset($data[\u0027top\u0027])) {",
        "                $take \u003d $data[\u0027top\u0027];",
        "            }",
        "            if ($depttype \u003d\u003d \u0027lineDeptid\u0027 || $depttype \u003d\u003d \u0027lineDeptId\u0027) {",
        "                $depttype \u003d \u0027lineId\u0027;",
        "            }",
        "            if ($depttype \u003d\u003d \u0027groupDeptid\u0027 || $depttype \u003d\u003d \u0027groupDeptId\u0027) {",
        "                $depttype \u003d \u0027groupId\u0027;",
        "            }",
        "            $vioTypeTop \u003d DB::table(\u0027stat_driving_violation_summary\u0027);",
        "            $vioTypeTop \u003d $vioTypeTop-\u003ewhereIn(\u0027actiontype\u0027, $vioTypeVal);",
        "",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $vioTypeTop \u003d $vioTypeTop-\u003ewhereNotNull(\u0027driverId\u0027);",
        "            }",
        "",
        "            $vioTypeTop \u003d $vioTypeTop-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $vioTypeVal)",
        "                -\u003egroupBy(\u0027actiontype\u0027)",
        "                -\u003eselectRaw(\u0027count(actiontype) as cnt,actiontypeDesc,actiontype\u0027)",
        "                -\u003eorderBy(\u0027cnt\u0027, \u0027desc\u0027)",
        "                -\u003eget();",
        "            $vioTypeTopVal \u003d [];",
        "            for ($i \u003d 0; $i \u003c count($vioTypeTop); $i++) {",
        "                $vioTypeTopVal[] \u003d $vioTypeTop[$i]-\u003eactiontype;",
        "            }",
        "            $vioData \u003d DB::table(\u0027stat_driving_violation_summary\u0027);",
        "            if ($take !\u003d -1) {",
        "                $vioData \u003d $vioData-\u003ewhereIn(\u0027actionType\u0027, $vioTypeTopVal);",
        "            }",
        "            $vioData \u003d $vioData",
        "                -\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003egroupBy(\u0027actionType\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date,actionType,actionTypeDesc\u0027)",
        "                -\u003eorderBy(\u0027actiontype\u0027)",
        "                -\u003eget();",
        "",
        "            //5种类型5次循环",
        "            for ($i \u003d 0; $i \u003c count($vioTypeTopVal); $i++) {",
        "                //循环违规项时间段数据",
        "                for ($n \u003d 0; $n \u003c count($timeArr); $n++) {",
        "                    $vioDataVal[$n] \u003d 0;",
        "                    //数组第i个位置 初始化为0 寻找结果值里与之对应的数据",
        "                    for ($j \u003d 0; $j \u003c count($vioData); $j++) {",
        "                        //获取一种违规类型的数据",
        "                        if ($vioTypeTopVal[$i] \u003d\u003d $vioData[$j]-\u003eactionType \u0026\u0026 $vioData[$j]-\u003estat_date \u003d\u003d $timeArr[$n]) {",
        "                            $vioDataVal[$n] \u003d $vioData[$j]-\u003etotalSum;",
        "                            $sum \u003d $sum + $vioData[$j]-\u003etotalSum;",
        "                        }",
        "",
        "                    }",
        "                }",
        "                //一次循环完毕，存值，数组至空",
        "                array_push($ret, [\u0027data\u0027 \u003d\u003e $vioDataVal, \u0027name\u0027 \u003d\u003e $vioTypeTop[$i]-\u003eactiontypeDesc]);",
        "                $ret2 \u003d array_merge($ret2, [$vioTypeTop[$i]-\u003eactiontypeDesc \u003d\u003e $sum]);",
        "                $vioDataVal \u003d [];",
        "                $sum \u003d 0;",
        "            }",
        "        }",
        "        if (!isset($data[\u0027type\u0027])) {",
        "            //趋势图调用，返回散列数据",
        "            return $ret;",
        "        } else {",
        "            //比例图调用，返回和数据",
        "            return $ret2;",
        "        }",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getViolationTrendsGrouped",
        "     * @name: 违规趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: type,description:图形类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getViolationTrendsGrouped(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5\u0027, // 时间类型",
        "            //  \u0027violationtype\u0027\u003d\u003e \u0027required\u0027, // 故障类型",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d $this-\u003egetRecordsViolationTrendsGrouped($this-\u003eparams);",
        "",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    public function getRecordsViolationTrendsGrouped($data)",
        "    {",
        "        //机构类型默认为线路",
        "        $depttype \u003d \u0027lineDeptId\u0027;",
        "",
        "        //界面传递按界面传递的值",
        "        if (isset($data[\u0027depttype\u0027])) {",
        "            $depttype \u003d $data[\u0027depttype\u0027];",
        "        };",
        "        $deptid \u003d $data[\u0027deptid\u0027];",
        "",
        "        if (isset($data[\u0027driverId\u0027])) {",
        "            $data[\u0027driverId\u0027] \u003d explode(\",\", $data[\u0027driverId\u0027]);",
        "        } else {",
        "            $temp \u003d DB::table(\"v_driverinfo\")-\u003eselect(\"driverId\")-\u003ewhere($depttype, $deptid)-\u003eget();",
        "            $cnt \u003d count($temp);",
        "            for ($i \u003d 0; $i \u003c $cnt; ++$i) {",
        "                $data[\u0027driverId\u0027][] \u003d $temp[$i]-\u003edriverid;",
        "            }",
        "        }",
        "        $timeType \u003d $data[\u0027timeType\u0027];",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        $timeDay \u003d $this-\u003etimeTypeConversion($timeType);",
        "        $startDay \u003d $timeDay[\u0027startDay\u0027];",
        "        $endDay \u003d $timeDay[\u0027endDay\u0027];",
        "",
        "        //获取选中下的车辆标识",
        "        $deviceId \u003d DB::table(\u0027t_vehicleinfo as a\u0027)",
        "            -\u003ejoin(\u0027v_lineinfo as b\u0027, \u0027a.deptId\u0027, \u0027\u003d\u0027, \u0027b.lineDeptId\u0027)",
        "            -\u003ewhere($depttype, \u0027\u003d\u0027, $deptid)",
        "            -\u003eselect(\u0027deviceid\u0027)",
        "            -\u003eget();",
        "        $cnt \u003d count($deviceId);",
        "        $deviceIdVal \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; ++$i) {",
        "            $deviceIdVal[] \u003d $deviceId[$i]-\u003edeviceid;",
        "        }",
        "        //获取三种类型下定义的违规名称",
        "        $violationType \u003d $this-\u003egetViolationType($userdeptid);",
        "        $dangerType \u003d $violationType[\u0027dangerType\u0027];",
        "        $damageType \u003d $violationType[\u0027damageType\u0027];",
        "        $badServiceType \u003d $violationType[\u0027badServiceType\u0027];",
        "        $dangerTypeVal \u003d [];",
        "        $badServiceTypeVal \u003d [];",
        "        $damageTypeVal \u003d [];",
        "        $num \u003d count($dangerType);",
        "        $num2 \u003d count($damageType);",
        "        $num3 \u003d count($badServiceType);",
        "        for ($i \u003d 0; $i \u003c $num; $i++) {",
        "            $dangerTypeVal[] \u003d $dangerType[$i]-\u003eviolationeName;",
        "        }",
        "        for ($i \u003d 0; $i \u003c $num2; $i++) {",
        "            $damageTypeVal[] \u003d $damageType[$i]-\u003eviolationeName;",
        "        }",
        "        for ($i \u003d 0; $i \u003c $num3; $i++) {",
        "            $badServiceTypeVal[] \u003d $badServiceType[$i]-\u003eviolationeName;",
        "        }",
        "",
        "        //当页面选中为timeType\u003d0，昨天时，数据从stat_driving_violation_detail统计",
        "        if ($timeType \u003d\u003d 0) {",
        "            $dangerData \u003d DB::table(\u0027stat_driving_violation_detail\u0027)",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $dangerTypeVal);",
        "",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $dangerData \u003d $dangerData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $dangerData \u003d $dangerData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            }",
        "            $dangerData \u003d $dangerData-\u003ewhere(\u0027stat_date\u0027, \u0027\u003d\u0027, $startDay)",
        "                -\u003egroupBy(\u0027time\u0027)",
        "                -\u003eselectRaw(\u0027DATE_FORMAT(begin_time,\\\u0027%H\\\u0027) as time,count(actiontype) as actiontypeSum\u0027)",
        "                -\u003eget();",
        "            $damageData \u003d DB::table(\u0027stat_driving_violation_detail\u0027)",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $damageTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $damageData \u003d $damageData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $damageData \u003d $damageData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            }",
        "            $damageData \u003d $damageData-\u003ewhere(\u0027stat_date\u0027, \u0027\u003d\u0027, $startDay)",
        "                -\u003egroupBy(\u0027time\u0027)",
        "                -\u003eselectRaw(\u0027DATE_FORMAT(begin_time,\\\u0027%H\\\u0027) as time,count(actiontype) as actiontypeSum\u0027)",
        "                -\u003eget();",
        "            $badServiceData \u003d DB::table(\u0027stat_driving_violation_detail\u0027)",
        "                -\u003ewhereIn(\u0027actiontype\u0027, $badServiceTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $badServiceData \u003d $badServiceData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $badServiceData \u003d $badServiceData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            }",
        "            $badServiceData \u003d $badServiceData-\u003ewhere(\u0027stat_date\u0027, \u0027\u003d\u0027, $startDay)",
        "                -\u003egroupBy(\u0027time\u0027)",
        "                -\u003eselectRaw(\u0027DATE_FORMAT(begin_time,\\\u0027%H\\\u0027) as time,count(actiontype) as actiontypeSum\u0027)",
        "                -\u003eget();",
        "            $dangerDataVal \u003d [];",
        "            $damageDataVal \u003d [];",
        "            $badServiceDataVal \u003d [];",
        "            for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                //数组位置初始化",
        "                $dangerDataVal[$i] \u003d 0;",
        "                $damageDataVal[$i] \u003d 0;",
        "                $badServiceDataVal[$i] \u003d 0;",
        "                //有值赋值，没有则使用初始的0",
        "                for ($j \u003d 0; $j \u003c count($dangerData); $j++) {",
        "                    if ($dangerData[$j]-\u003etime \u003d\u003d $i) {",
        "                        $dangerDataVal[$i] \u003d $dangerData[$j]-\u003eactiontypeSum;",
        "                        break;",
        "                    }",
        "                }",
        "                for ($j \u003d 0; $j \u003c count($damageData); $j++) {",
        "                    if ($damageData[$j]-\u003etime \u003d\u003d $i) {",
        "                        $damageDataVal[$i] \u003d $damageData[$j]-\u003eactiontypeSum;",
        "                        break;",
        "                    }",
        "                }",
        "                for ($j \u003d 0; $j \u003c count($badServiceData); $j++) {",
        "                    if ($badServiceData[$j]-\u003etime \u003d\u003d $i) {",
        "                        $badServiceDataVal[$i] \u003d $badServiceData[$j]-\u003eactiontypeSum;",
        "                        break;",
        "                    }",
        "                }",
        "            }",
        "        } else if ($timeType \u003d\u003d 1 || $timeType \u003d\u003d 2 || $timeType \u003d\u003d 3) {",
        "            //timeType\u003d1或2，统计过去7天和本月数据从日统计表中出数据stat_driving_violation_day",
        "            $timeArr \u003d [];",
        "            $dt_start \u003d strtotime($startDay);",
        "            $dt_end \u003d strtotime($endDay);",
        "            while ($dt_start \u003c\u003d $dt_end) {",
        "                $timeArr[] \u003d date(\u0027Y-m-d\u0027, $dt_start);",
        "                $dt_start \u003d strtotime(\u0027+1 day\u0027, $dt_start);",
        "            }",
        "            $dangerData \u003d DB::table(\u0027stat_driving_violation_day\u0027)",
        "                -\u003ewhereIn(\u0027actionType\u0027, $dangerTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $dangerData \u003d $dangerData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $dangerData \u003d $dangerData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            };",
        "            $dangerData \u003d $dangerData-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date\u0027)",
        "                -\u003eget();",
        "            $damageData \u003d DB::table(\u0027stat_driving_violation_day\u0027)",
        "                -\u003ewhereIn(\u0027actionType\u0027, $damageTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $damageData \u003d $damageData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $damageData \u003d $damageData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            };",
        "            $damageData \u003d $damageData-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date\u0027)",
        "                -\u003eget();",
        "            $badServiceData \u003d DB::table(\u0027stat_driving_violation_day\u0027)",
        "                -\u003ewhereIn(\u0027actionType\u0027, $badServiceTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $badServiceData \u003d $badServiceData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $badServiceData \u003d $badServiceData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            };",
        "            $badServiceData \u003d $badServiceData-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date\u0027)",
        "                -\u003eget();",
        "",
        "            $dangerDataVal \u003d [];",
        "            $damageDataVal \u003d [];",
        "            $badServiceDataVal \u003d [];",
        "            for ($i \u003d 0; $i \u003c count($timeArr); $i++) {",
        "                //当前位置初始化为0",
        "                $dangerDataVal[$i] \u003d 0;",
        "                $damageDataVal[$i] \u003d 0;",
        "                $badServiceDataVal[$i] \u003d 0;",
        "                //循环结果集",
        "                for ($j \u003d 0; $j \u003c count($dangerData); $j++) {",
        "                    if ($dangerData[$j]-\u003estat_date \u003d\u003d $timeArr[$i]) {",
        "                        $dangerDataVal[$i] \u003d $dangerData[$j]-\u003etotalSum;",
        "                        break;",
        "                    }",
        "                }",
        "                for ($j \u003d 0; $j \u003c count($damageData); $j++) {",
        "                    if ($damageData[$j]-\u003estat_date \u003d\u003d $timeArr[$i]) {",
        "                        $damageDataVal[$i] \u003d $damageData[$j]-\u003etotalSum;",
        "                        break;",
        "                    }",
        "                }",
        "                for ($j \u003d 0; $j \u003c count($badServiceData); $j++) {",
        "                    if ($badServiceData[$j]-\u003estat_date \u003d\u003d $timeArr[$i]) {",
        "                        $badServiceDataVal[$i] \u003d $badServiceData[$j]-\u003etotalSum;",
        "                        break;",
        "                    }",
        "                }",
        "            }",
        "        } else {",
        "            //timeType\u003d4或5，统计上月/今年/去年的数据，从月统计表中统计",
        "            $timeArr \u003d [];",
        "            $dt_start \u003d strtotime($startDay);",
        "            $dt_end \u003d strtotime($endDay);",
        "            $temp \u003d date(\"Y-m\", $dt_start) . \u0027-01\u0027;",
        "            while ($temp \u003c\u003d $endDay) {",
        "                $timeArr[] \u003d $temp;",
        "                $temp \u003d date(\"Y-m-d\", strtotime(\"+1 months\", strtotime($temp)));",
        "            }",
        "            $dangerData \u003d DB::table(\u0027stat_driving_violation_summary\u0027)",
        "                -\u003ewhereIn(\u0027actionType\u0027, $dangerTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $dangerData \u003d $dangerData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $dangerData \u003d $dangerData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            };",
        "            $dangerData \u003d $dangerData-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date\u0027)",
        "                -\u003eget();",
        "            $damageData \u003d DB::table(\u0027stat_driving_violation_summary\u0027)",
        "                -\u003ewhereIn(\u0027actionType\u0027, $damageTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $damageData \u003d $damageData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $damageData \u003d $damageData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            };",
        "            $damageData \u003d $damageData-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date\u0027)",
        "                -\u003eget();",
        "            $badServiceData \u003d DB::table(\u0027stat_driving_violation_summary\u0027)",
        "                -\u003ewhereIn(\u0027actionType\u0027, $badServiceTypeVal);",
        "            if (isset($data[\u0027driverId\u0027])) {",
        "                $badServiceData \u003d $badServiceData-\u003ewhereIn(\u0027driverId\u0027, $data[\u0027driverId\u0027]);",
        "            } else {",
        "                $badServiceData \u003d $badServiceData-\u003ewhere(\u0027driverId\u0027, \u0027\u003c\u0027, 0);",
        "            };",
        "            $badServiceData \u003d $badServiceData-\u003ewhereRaw(\u0027stat_date \u003e\u003d? and stat_date \u003c\u003d? \u0027, [$startDay, $endDay])",
        "                -\u003egroupBy(\u0027stat_date\u0027)",
        "                -\u003eselectRaw(\u0027sum(totalNum) as totalSum,stat_date\u0027)",
        "                -\u003eget();",
        "",
        "            $dangerDataVal \u003d [];",
        "            $damageDataVal \u003d [];",
        "            $badServiceDataVal \u003d [];",
        "            for ($i \u003d 0; $i \u003c count($timeArr); $i++) {",
        "                //当前位置初始化为0",
        "                $dangerDataVal[$i] \u003d 0;",
        "                $damageDataVal[$i] \u003d 0;",
        "                $badServiceDataVal[$i] \u003d 0;",
        "                //循环结果集",
        "                for ($j \u003d 0; $j \u003c count($dangerData); $j++) {",
        "                    if ($dangerData[$j]-\u003estat_date \u003d\u003d $timeArr[$i]) {",
        "                        $dangerDataVal[$i] \u003d $dangerData[$j]-\u003etotalSum;",
        "                        break;",
        "                    }",
        "                }",
        "                for ($j \u003d 0; $j \u003c count($damageData); $j++) {",
        "                    if ($damageData[$j]-\u003estat_date \u003d\u003d $timeArr[$i]) {",
        "                        $damageDataVal[$i] \u003d $damageData[$j]-\u003etotalSum;",
        "                        break;",
        "                    }",
        "                }",
        "                for ($j \u003d 0; $j \u003c count($badServiceData); $j++) {",
        "                    if ($badServiceData[$j]-\u003estat_date \u003d\u003d $timeArr[$i]) {",
        "                        $badServiceDataVal[$i] \u003d $badServiceData[$j]-\u003etotalSum;",
        "                        break;",
        "                    }",
        "                }",
        "            }",
        "        }",
        "        if (!isset($data[\u0027type\u0027])) {",
        "            //趋势图调用，返回散列数据",
        "            $dangerDataVal2 \u003d [\u0027data\u0027 \u003d\u003e $dangerDataVal, \u0027name\u0027 \u003d\u003e \u0027dangerType\u0027];",
        "            $damageDataVal2 \u003d [\u0027data\u0027 \u003d\u003e $damageDataVal, \u0027name\u0027 \u003d\u003e \u0027damageType\u0027];",
        "            $badServiceDataVal2 \u003d [\u0027data\u0027 \u003d\u003e $badServiceDataVal, \u0027name\u0027 \u003d\u003e \u0027badserviceType\u0027];",
        "            return [$badServiceDataVal2, $damageDataVal2, $dangerDataVal2];",
        "        } else if ($data[\u0027type\u0027] \u003d\u003d \u0027scaleMap\u0027) {",
        "            //比例图调用，返回和数据",
        "            $sumDangerDataVal \u003d 0;",
        "            $sumDamageDataVal \u003d 0;",
        "            $sumBadServiceDataVal \u003d 0;",
        "            for ($i \u003d 0; $i \u003c count($dangerDataVal); $i++) {",
        "                $sumDangerDataVal \u003d $dangerDataVal[$i] + $sumDangerDataVal;",
        "            }",
        "            for ($i \u003d 0; $i \u003c count($damageDataVal); $i++) {",
        "                $sumDamageDataVal \u003d $damageDataVal[$i] + $sumDamageDataVal;",
        "            }",
        "            for ($i \u003d 0; $i \u003c count($badServiceDataVal); $i++) {",
        "                $sumBadServiceDataVal \u003d $badServiceDataVal[$i] + $sumBadServiceDataVal;",
        "            }",
        "            return [\u0027badServiceType\u0027 \u003d\u003e $sumBadServiceDataVal, \u0027damageType\u0027 \u003d\u003e $sumDamageDataVal, \u0027dangerType\u0027 \u003d\u003e $sumDangerDataVal];",
        "        }",
        "",
        "//20190510违规统计--驾驶员违规统计",
        "//        DB::statement(DB::raw(\"SET @@GROUP_CONCAT_MAX_LEN \u003d 1024000;\"));",
        "//        DB::statement(DB::raw(\"CALL  p_api_violationstrendgrouped($timeType,\u0027$deptid\u0027,\u0027$depttype\u0027,$userdeptid,@r);\"));",
        "//        $ret \u003d DB::select(\"select @r as data\");",
        "//        return json_decode(($ret[0]-\u003edata), TRUE);",
        "",
        "    }",
        "",
        "    //用于转换时间类型",
        "    public function timeTypeConversion($timeType)",
        "    {",
        "        switch ($timeType) {",
        "            case 0:",
        "                //0代表昨天",
        "                $startDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                $endDay \u003d $startDay;",
        "                break;",
        "            case 1:",
        "                //1代表近7天 起始为前八天，结束为昨天",
        "                $startDay \u003d date(\"Y-m-d\", strtotime(\"-7 day\"));",
        "                $endDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:",
        "                //2代表本月 起始为本月第一天，结束为昨天",
        "                $startDay \u003d date(\u0027Y-m-01\u0027, strtotime(date(\"Y-m-d\")));",
        "                $endDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 3:",
        "                //3代表上月 起始为上月第一天 结束为上月最后一天",
        "                $startDay \u003d date(\u0027Y-m-01\u0027, strtotime(\u0027-1 month\u0027));",
        "                $endDay \u003d date(\u0027Y-m-t\u0027, strtotime(\u0027-1 month\u0027));",
        "                break;",
        "            case 4:",
        "                //4代表当年 起始为本年第一天 结束为昨天",
        "                $year \u003d date(\"Y\", time());",
        "                $startDay \u003d $year . \"-01-01\";",
        "                $endDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 5:",
        "                //4代表当年 起始为本年第一天 结束为昨天",
        "",
        "                $startDay \u003d date(\u0027Y-01-01\u0027, strtotime(\u0027-1 year\u0027));",
        "                $endDay \u003d date(\u0027Y-12-31\u0027, strtotime(\u0027-1 year\u0027));",
        "                break;",
        "            default:",
        "                $startDay \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                $endDay \u003d $startDay;",
        "        }",
        "        return [\u0027startDay\u0027 \u003d\u003e $startDay, \u0027endDay\u0027 \u003d\u003e $endDay];",
        "    }",
        "",
        "    public function getViolationType($userdeptid)",
        "    {",
        "        //获取用户绑定的违规类型",
        "        $dangerType \u003d DB::table(\u0027driving_violation_type\u0027)",
        "            -\u003eselect(\u0027violationeName\u0027)",
        "            -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "            -\u003ewhere(\u0027dangerType\u0027, \u0027\u003d\u0027, \u00271\u0027)",
        "            -\u003eget();",
        "        $damageType \u003d DB::table(\u0027driving_violation_type\u0027)",
        "            -\u003eselect(\u0027violationeName\u0027)",
        "            -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "            -\u003ewhere(\u0027damageType\u0027, \u0027\u003d\u0027, \u00271\u0027)",
        "            -\u003eget();",
        "        $badServiceType \u003d DB::table(\u0027driving_violation_type\u0027)",
        "            -\u003eselect(\u0027violationeName\u0027)",
        "            -\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userdeptid)",
        "            -\u003ewhere(\u0027badServiceType\u0027, \u0027\u003d\u0027, \u00271\u0027)",
        "            -\u003eget();",
        "        return [\u0027dangerType\u0027 \u003d\u003e $dangerType, \u0027damageType\u0027 \u003d\u003e $damageType, \u0027badServiceType\u0027 \u003d\u003e $badServiceType];",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBlankZoneChart",
        "     * @name: 黑点比例图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: blankzonetype,description:黑点类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBlankZoneChart(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027blankzonetype\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        // 需要改回",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \"  SELECT actiontypedesc as actiontypeDesc,sum(cnt) as cnt FROM (",
        "     SELECT actiontypedesc  ,COUNT(1) AS `cnt`,bz_id    FROM stat_driving_violation_detail   \";",
        "        $sql1 \u003d \" SELECT distinct (lineDeptId) as lineDeptId FROM t_vehicleinfo b ",
        "    INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        $bztype \u003d $request-\u003eget(\u0027blankzonetype\u0027);",
        "",
        "        switch ($bztype) {",
        "",
        "            case 1:",
        "                $bztype \u003d \"waterarea\";",
        "                break;",
        "            case 2:",
        "                $bztype \u003d \"cameraarea\";",
        "",
        "                break;",
        "            case 3:",
        "                $bztype \u003d \"rotaryisland\";",
        "",
        "                break;",
        "            case 4:",
        "                $bztype \u003d \"signallight\";",
        "",
        "                break;",
        "            case 5:",
        "                $bztype \u003d \"importantarea\";",
        "",
        "                break;",
        "",
        "        }",
        "",
        "        if (empty($bztype)) {",
        "            $bzCondition \u003d \"\";",
        "        } else {",
        "            $bzCondition \u003d \"  AND bz_id\u003e0 GROUP BY actiontype,bz_id ORDER BY cnt )a ",
        "            join t_areainfo on t_areainfo.areaId\u003da.bz_id and $bztype\u003d1",
        "             GROUP BY actiontypedesc ORDER BY cnt DESC\";",
        "        }",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            $sql1 \u003d $sql1 . $fixedCondtion;",
        "            $lineDept \u003d DB::select($sql1);",
        "            $lineDeptVal \u003d null;",
        "            for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "                $lineDeptVal .\u003d $lineDept[$i]-\u003elineDeptId;",
        "                if ($i \u003c count($lineDept) - 1) {",
        "                    $lineDeptVal .\u003d \",\";",
        "                }",
        "            }",
        "            //",
        "            if ($lineDeptVal !\u003d null) {",
        "                $sql .\u003d \" where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition;",
        "                $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "            } else {",
        "                $records \u003d null;",
        "            }",
        "",
        "",
        "            //  $records\u003d DB::select($sql);",
        "",
        "",
        "            $cnt \u003d count($records);",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $actiontypeDesc \u003d $records[$i]-\u003eactiontypeDesc;",
        "                $rets[\"$actiontypeDesc\"] \u003d $records[$i]-\u003ecnt;",
        "            }",
        "",
        "            if (empty($rets)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 \";",
        "        };",
        "        //",
        "        $sql1 \u003d $sql1 . $fixedCondtion;",
        "        $lineDept \u003d DB::select($sql1);",
        "        $lineDeptVal \u003d null;",
        "        for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "            $lineDeptVal .\u003d $lineDept[$i]-\u003elineDeptId;",
        "            if ($i \u003c count($lineDept) - 1) {",
        "                $lineDeptVal .\u003d \",\";",
        "            }",
        "        }",
        "        //",
        "",
        "        if ($lineDeptVal !\u003d null) {",
        "            $sql .\u003d \" where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition;",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "        } else {",
        "            $records \u003d null;",
        "        }",
        "",
        "",
        "        //  $records\u003d DB::select($sql);",
        "        $cnt \u003d count($records);",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $actiontypeDesc \u003d $records[$i]-\u003eactiontypeDesc;",
        "            $rets[\"$actiontypeDesc\"] \u003d $records[$i]-\u003ecnt;",
        "        }",
        "        if (empty($rets)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBlankZoneMap",
        "     * @name: 黑点地图 次数",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: blankzonetype,description:黑点类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBlankZoneMap(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027blankzonetype\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        // 需要改回",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \"  SELECT b.areaName,b.gps_x,b.gps_y,cnt FROM (",
        "     SELECT COUNT(1) AS `cnt`,bz_id    FROM stat_driving_violation_detail  \";",
        "        $sql1 \u003d \"SELECT distinct (lineDeptId) as lineDeptId FROM t_vehicleinfo b ",
        "    INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId  \";",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        $bztype \u003d $request-\u003eget(\u0027blankzonetype\u0027);",
        "",
        "        switch ($bztype) {",
        "",
        "            case 1:",
        "                $bztype \u003d \"waterarea\";",
        "                break;",
        "            case 2:",
        "                $bztype \u003d \"cameraarea\";",
        "",
        "                break;",
        "            case 3:",
        "                $bztype \u003d \"rotaryisland\";",
        "",
        "                break;",
        "            case 4:",
        "                $bztype \u003d \"signallight\";",
        "",
        "                break;",
        "            case 5:",
        "                $bztype \u003d \"importantarea\";",
        "",
        "                break;",
        "",
        "        }",
        "",
        "        if (empty($bztype)) {",
        "            $bzCondition \u003d \"\";",
        "        } else {",
        "            $bzCondition \u003d \"  AND bz_id\u003e0 GROUP BY bz_id ORDER BY cnt )a  INNER JOIN t_areainfo b ON a.bz_id\u003db.areaId and $bztype\u003d1\";",
        "        }",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            //",
        "            $sql1 .\u003d $fixedCondtion;",
        "            $lineDept \u003d DB::select($sql1);",
        "            $lineDeptVal \u003d null;",
        "            for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "                $lineDeptVal .\u003d $lineDept[$i]-\u003elineDeptId;",
        "                if ($i \u003c count($lineDept) - 1) {",
        "                    $lineDeptVal .\u003d \",\";",
        "                }",
        "            }",
        "",
        "            if ($lineDeptVal !\u003d null) {",
        "                $sql .\u003d \" where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition;",
        "",
        "",
        "                $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "",
        "            } else {",
        "                $records \u003d null;",
        "            }",
        "",
        "            //  $records\u003d DB::select($sql);",
        "",
        "",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 \";",
        "        };",
        "        //",
        "        $sql1 .\u003d $fixedCondtion;",
        "        $lineDept \u003d DB::select($sql1);",
        "        $lineDeptVal \u003d null;",
        "        for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "            $lineDeptVal .\u003d $lineDept[$i]-\u003elineDeptId;",
        "            if ($i \u003c count($lineDept) - 1) {",
        "                $lineDeptVal .\u003d \",\";",
        "            }",
        "        }",
        "        if ($lineDeptVal !\u003d null) {",
        "            $sql .\u003d \" where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition;",
        "",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "",
        "        } else {",
        "            $records \u003d null;",
        "        }",
        "",
        "",
        "        //  $records\u003d DB::select($sql);",
        "//        $cnt\u003dcount($records);",
        "//        for($i\u003d0;$i\u003c$cnt;$i++){",
        "//            $actiontypeDesc\u003d$records[$i]-\u003eactiontypeDesc;",
        "//            $rets[\"$actiontypeDesc\"]\u003d$records[$i]-\u003ecnt;",
        "//        }",
        "//",
        "//        if(empty($rets)){ return $this-\u003esetJsonResponse(REPEAT, $records);}",
        "//        return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "",
        "",
        "        //  $records\u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBlankZoenViolationRank",
        "     * @name: 黑点违规排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: blankzonetype,description:黑点区域类型",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBlankZoenViolationRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027blankzonetype\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $records \u003d $this-\u003egetRecordsfromBlankZoneViolationRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_bzviolation_rank\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromBlankZoneViolationRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        $deptid \u003d null;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        if (isset($params[\u0027blankzonetype\u0027])) {",
        "            $bztype \u003d $params[\u0027blankzonetype\u0027];",
        "        };",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "        $sql \u003d \" FROM (",
        "SELECT   @r:\u003d@r+1 AS rank,n.lineName,areaName,cnt AS violationtimes FROM (",
        "  SELECT SUM(cnt) AS cnt , bz_id,lineDeptId FROM (",
        " SELECT  COUNT(1) AS `cnt`,bz_id,lineDeptId",
        "FROM stat_driving_violation_detail force index(idx_bz_id) WHERE lineDeptId IN(SELECT c.lineDeptId FROM t_vehicleinfo b",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";",
        "",
        "",
        "        switch ($bztype) {",
        "",
        "            case 1:",
        "                $bztype \u003d \"waterarea\";",
        "                break;",
        "            case 2:",
        "                $bztype \u003d \"cameraarea\";",
        "",
        "                break;",
        "            case 3:",
        "                $bztype \u003d \"rotaryisland\";",
        "",
        "                break;",
        "            case 4:",
        "                $bztype \u003d \"signallight\";",
        "",
        "                break;",
        "            case 5:",
        "                $bztype \u003d \"importantarea\";",
        "",
        "                break;",
        "",
        "        }",
        "",
        "",
        "        if (empty($bztype)) {",
        "            $bzCondition \u003d \"AND  bz_id\u003e0 GROUP BY stat_date,bz_id  )a ",
        "  WHERE bz_id IN (SELECT areaId FROM t_areainfo WHERE 1\u003d1) GROUP BY bz_id ORDER BY cnt DESC )m  INNER JOIN v_lineinfo n  ON m.lineDeptId \u003dn.`lineDeptId` ",
        "  INNER JOIN (SELECT @r:\u003d0)b INNER JOIN t_areainfo j ON m.bz_id\u003dj.`areaId` ) z \";",
        "        } else {",
        "            $bzCondition \u003d \" AND  bz_id\u003e0 GROUP BY stat_date,bz_id  )a ",
        "  WHERE bz_id IN (SELECT areaId FROM t_areainfo WHERE $bztype\u003d1) GROUP BY bz_id ORDER BY cnt DESC )m  INNER JOIN v_lineinfo n  ON m.lineDeptId \u003dn.`lineDeptId` ",
        "  INNER JOIN (SELECT @r:\u003d0)b INNER JOIN t_areainfo j ON m.bz_id\u003dj.`areaId` ) z  \";",
        "        }",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "        }",
        "",
        "",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $bzCondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $bzCondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBlankZoneTrend",
        "     * @name: 黑点趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: blankzonetype,description:黑点类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBlankZoneTrend(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027blankzonetype\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        // 需要改回",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \"  SELECT IFNULL(SUM(cnt),0) AS cnt ,  stat_date FROM (",
        "SELECT DATE_FORMAT(stat_date,\u0027%d日\u0027) AS stat_date ,COUNT(1) AS `cnt`,bz_id ",
        "FROM stat_driving_violation_detail  \";",
        "        $sql1 \u003d \"SELECT distinct (lineDeptId) as lineDeptId FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        $bztype \u003d $request-\u003eget(\u0027blankzonetype\u0027);",
        "        switch ($bztype) {",
        "",
        "            case 1:",
        "                $bztype \u003d \"waterarea\";",
        "                break;",
        "            case 2:",
        "                $bztype \u003d \"cameraarea\";",
        "",
        "                break;",
        "            case 3:",
        "                $bztype \u003d \"rotaryisland\";",
        "",
        "                break;",
        "            case 4:",
        "                $bztype \u003d \"signallight\";",
        "",
        "                break;",
        "            case 5:",
        "                $bztype \u003d \"importantarea\";",
        "",
        "                break;",
        "",
        "        }",
        "        if (empty($bztype)) {",
        "            $bzCondition \u003d \"\";",
        "        } else {",
        "            $bzCondition \u003d \"  AND  bz_id\u003e0 GROUP BY stat_date,bz_id ORDER BY cnt )a ",
        "                    join t_areainfo on t_areainfo.areaId\u003da.bz_id and $bztype\u003d1",
        "           GROUP BY stat_date ORDER BY stat_date \";",
        "        }",
        "        $fixed \u003d \" \";",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "                $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                $sql \u003d \"  select  IFNULL(sum(cnt),0) as cnt ,DATE_FORMAT(month,\u0027%m月\u0027) as stat_date from ( ",
        " ",
        " SELECT sum(cnt) AS cnt ,  DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) as stat_date FROM (",
        " ",
        "SELECT  stat_date ,COUNT(1) AS `cnt`,bz_id",
        "FROM stat_driving_violation_detail \";",
        "                $sql1 \u003d \"SELECT distinct (lineDeptId) as lineDeptId FROM t_vehicleinfo b",
        "                INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "",
        "                $fixed .\u003d \" ) b RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month  group by month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                $sql \u003d \"  select  IFNULL(sum(cnt),0) as cnt ,DATE_FORMAT(month,\u0027%m月\u0027) as stat_date from ( ",
        " ",
        " SELECT sum(cnt) AS cnt ,  DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) as stat_date FROM (",
        " ",
        "SELECT  stat_date ,COUNT(1) AS `cnt`,bz_id",
        "FROM stat_driving_violation_detail  \";",
        "                $sql1 \u003d \"SELECT distinct (lineDeptId) as lineDeptId FROM t_vehicleinfo b",
        "                INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "",
        "                $fixed .\u003d \" ) b  RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c)d ON  b.stat_date\u003dd.month group by month \";",
        "                break;",
        "",
        "",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            //",
        "            $sql1 .\u003d $fixedCondtion;",
        "            $lineDept \u003d DB::select($sql1);",
        "            $lineDeptVal \u003d null;",
        "            for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "                $lineDeptVal .\u003d $lineDept[$i]-\u003elineDeptId;",
        "                if ($i \u003c count($lineDept) - 1) {",
        "                    $lineDeptVal .\u003d \",\";",
        "                }",
        "            }",
        "            if ($lineDeptVal !\u003d null) {",
        "                $sql .\u003d \" where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition . $fixed;",
        "",
        "",
        "                $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "",
        "            } else {",
        "                $records \u003d null;",
        "            }",
        "",
        "",
        "            //  $records\u003d DB::select($sql);",
        "",
        "",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "            }",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027  \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 \";",
        "        };",
        "        //",
        "        $sql1 .\u003d $fixedCondtion;",
        "        $lineDept \u003d DB::select($sql1);",
        "        $lineDeptVal \u003d null;",
        "        for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "            $lineDeptVal .\u003d $lineDept[$i]-\u003elineDeptId;",
        "            if ($i \u003c count($lineDept) - 1) {",
        "                $lineDeptVal .\u003d \",\";",
        "            }",
        "        }",
        "",
        "        if ($lineDeptVal !\u003d null) {",
        "            $sql .\u003d \"where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition . $fixed;",
        "",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "        } else {",
        "            $records \u003d null;",
        "        }",
        "",
        "",
        "        //  $records\u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "",
        "        $cnt \u003d count($records);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "        }",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBlankZoneTrendForHour",
        "     * @name: 黑点趋势图图 整点 按开始时间",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: blankzonetype,description:黑点类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBlankZoneTrendForHour(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        // 需要改回",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \"  SELECT sum(cnt) AS cnt ,  DATE_FORMAT(begin_time,\u0027%H\u0027) as stat_date FROM (",
        " SELECT  begin_time ,COUNT(1) AS `cnt`,bz_id",
        "FROM stat_driving_violation_detail  \";",
        "        $sql1 \u003d \"SELECT distinct (lineDeptId) as lineDeptId FROM t_vehicleinfo b",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        $bztype \u003d $request-\u003eget(\u0027blankzonetype\u0027);",
        "",
        "        switch ($bztype) {",
        "",
        "            case 1:",
        "                $bztype \u003d \"waterarea\";",
        "                break;",
        "            case 2:",
        "                $bztype \u003d \"cameraarea\";",
        "",
        "                break;",
        "            case 3:",
        "                $bztype \u003d \"rotaryisland\";",
        "",
        "                break;",
        "            case 4:",
        "                $bztype \u003d \"signallight\";",
        "",
        "                break;",
        "            case 5:",
        "                $bztype \u003d \"importantarea\";",
        "",
        "                break;",
        "",
        "        }",
        "",
        "        if (empty($bztype)) {",
        "            $bzCondition \u003d \"\";",
        "        } else {",
        "            $bzCondition \u003d \"  AND  bz_id\u003e0 GROUP BY stat_date,bz_id ORDER BY cnt )a ",
        "                    join t_areainfo on t_areainfo.areaId\u003da.bz_id and $bztype\u003d1",
        "          GROUP BY stat_date ORDER BY stat_date\";",
        "        }",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            //",
        "            $sql1 \u003d $sql1 . $fixedCondtion;",
        "            $lineDept \u003d DB::select($sql1);",
        "            $lineDeptVal \u003d null;",
        "            for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "                $lineDeptVal \u003d $lineDeptVal . $lineDept[$i]-\u003elineDeptId;",
        "                if ($i \u003c count($lineDept) - 1) {",
        "                    $lineDeptVal .\u003d \",\";",
        "                }",
        "            }",
        "",
        "            if ($lineDeptVal !\u003d null \u0026\u0026 count($lineDept) \u003e 0) {",
        "                $sql .\u003d \" where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition;",
        "",
        "                $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "            } else {",
        "                $records \u003d null;",
        "            }",
        "",
        "            $time \u003d [];",
        "",
        "",
        "            for ($i \u003d 0; $i \u003c 10; $i++) {",
        "                $time[$i][\u0027cnt\u0027] \u003d \u00270\u0027;",
        "                $time[$i][\u0027stat_date\u0027] \u003d \"0$i\";",
        "",
        "            }",
        "            for (; $i \u003c 24; $i++) {",
        "                $time[$i][\u0027cnt\u0027] \u003d \u00270\u0027;",
        "                $time[$i][\u0027stat_date\u0027] \u003d \"$i\";",
        "",
        "            }",
        "            $cnt \u003d count($records);",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "",
        "                $num \u003d (int)$records[$i]-\u003estat_date;",
        "",
        "                $time[$num][\u0027cnt\u0027] \u003d $records[$i]-\u003ecnt;",
        "            }",
        "            $records \u003d $time;",
        "            //  $records\u003d DB::select($sql);",
        "",
        "",
        "//            $cnt\u003dcount($records);",
        "//            for($i\u003d0;$i\u003c$cnt;$i++){",
        "//                $actiontypeDesc\u003d$records[$i]-\u003estat_date;",
        "//                $rets[\"$actiontypeDesc\"]\u003d$records[$i]-\u003ecnt;",
        "//            }",
        "//",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027  \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 \";",
        "        };",
        "",
        "        $sql1 \u003d $sql1 . $fixedCondtion;",
        "        $lineDept \u003d DB::select($sql1);",
        "        $lineDeptVal \u003d null;",
        "        for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "            $lineDeptVal \u003d $lineDeptVal . $lineDept[$i]-\u003elineDeptId;",
        "            if ($i \u003c count($lineDept) - 1) {",
        "                $lineDeptVal .\u003d \",\";",
        "            }",
        "        }",
        "",
        "        if ($lineDeptVal !\u003d null \u0026\u0026 count($lineDept) \u003e 0) {",
        "            $sql .\u003d \" where lineDeptId in (\" . $lineDeptVal . \")\" . \" and \" . $dataconditon . $bzCondition;",
        "",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "        } else {",
        "            $records \u003d null;",
        "        }",
        "",
        "",
        "        //  $records\u003d DB::select($sql);",
        "//        $cnt\u003dcount($records);",
        "//        for($i\u003d0;$i\u003c$cnt;$i++){",
        "//            $actiontypeDesc\u003d$records[$i]-\u003eactiontypeDesc;",
        "//            $rets[\"$actiontypeDesc\"]\u003d$records[$i]-\u003ecnt;",
        "//        }",
        "        $time \u003d [];",
        "",
        "",
        "        for ($i \u003d 0; $i \u003c 10; $i++) {",
        "            $time[$i][\u0027cnt\u0027] \u003d \u00270\u0027;",
        "            $time[$i][\u0027stat_date\u0027] \u003d \"0$i\";",
        "",
        "        }",
        "        for (; $i \u003c 24; $i++) {",
        "            $time[$i][\u0027cnt\u0027] \u003d \u00270\u0027;",
        "            $time[$i][\u0027stat_date\u0027] \u003d \"$i\";",
        "",
        "        }",
        "        $cnt \u003d count($records);",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "",
        "            $num \u003d (int)$records[$i]-\u003estat_date;",
        "",
        "            $time[$num][\u0027cnt\u0027] \u003d $records[$i]-\u003ecnt;",
        "        }",
        "        $records \u003d $time;",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getViolationDriver",
        "     * @name: 违规排行",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:线路ID",
        "     *parameter2: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getViolationDriver(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // sql 头部",
        "        $sql \u003d \"SELECT",
        "   @r:\u003d@r+1 AS rank,a.* FROM",
        " ( SELECT  ",
        "  `stat_driving_violation_day`.`driverName`     AS `drivername`,",
        "  SUM(totalNum) AS times,",
        "  SUM(scores) AS score,",
        "  SUM((CASE `stat_driving_violation_day`.`actiontypeDesc` WHEN \u0027急刹车\u0027 THEN `stat_driving_violation_day`.`totalNum` ELSE 0 END)) AS `suddenlyBraking`,",
        "  SUM((CASE `stat_driving_violation_day`.`actiontypeDesc` WHEN \u0027急加速\u0027 THEN `stat_driving_violation_day`.`totalNum` ELSE 0 END)) AS `suddenlySpeedUp`,",
        "",
        "  SUM((CASE `stat_driving_violation_day`.`actiontypeDesc` WHEN \u0027夜间不开大灯\u0027 THEN `stat_driving_violation_day`.`totalNum` ELSE 0 END)) AS `headLightOffAtNight`,",
        "  SUM((CASE `stat_driving_violation_day`.`actiontypeDesc` WHEN \u0027超速\u0027 THEN `stat_driving_violation_day`.`totalNum` ELSE 0 END)) AS `overspeed`,",
        "  SUM((CASE `stat_driving_violation_day`.`actiontypeDesc` WHEN \u0027起步不关车门\u0027 THEN `stat_driving_violation_day`.`totalNum` ELSE 0 END)) AS `startWithDoorOpen`,",
        "  SUM((CASE `stat_driving_violation_day`.`actiontypeDesc` WHEN \u0027车辆未停稳开车门\u0027 THEN `stat_driving_violation_day`.`totalNum` ELSE 0 END)) AS `openDoorNotStopYet`,",
        "",
        "  SUM((CASE `stat_driving_violation_day`.`actiontypeDesc` WHEN \u0027启动无刹车\u0027 THEN `stat_driving_violation_day`.`totalNum` ELSE 0 END)) AS `startWithoutBrake`",
        "",
        "FROM `stat_driving_violation_day`  WHERE   driverId IN(select driverid as driverId from v_driverinfo  \";",
        "",
        "",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "                // 关联表",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "",
        "                break;",
        "",
        "        }",
        "        $fixed \u003d \" GROUP BY `stat_driving_violation_day`.`driverName` ORDER BY times DESC LIMIT 10) a INNER JOIN (SELECT @r:\u003d0)b   ; \";",
        "// 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "            $records \u003d DB::select($sql);",
        "",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "        $records \u003d DB::select($sql);",
        "",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "",
        "    }",
        "",
        "    public function getViolationDriverForDanger(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "// 判断用户等级",
        "        // 需要改回，",
        "//        $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        // sql 头部",
        "        $sql \u003d \"SELECT   @r:\u003d@r+1 AS rank,d.lineName,a.drivername,a.times FROM",
        " ( SELECT     `api_violation`.`driverName`     AS `drivername`,deptId,  SUM(total) AS times FROM `api_violation`  ",
        "  WHERE   actiontypeDesc  IN (SELECT violationName FROM driving_violation_type WHERE deptid\u003d$userdeptid and dangerType \u003d1) and vehicleNO IN(SELECT vehicleNO FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                // 关联表",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "        }",
        "        $fixed \u003d \" GROUP BY `api_violation`.`driverName` ORDER BY times DESC ) a INNER JOIN (SELECT @r:\u003d0)b INNER JOIN v_lineinfo d ON d.`lineDeptId`\u003da.deptId  ; \";",
        "// 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "            $records \u003d DB::select($sql);",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "        $records \u003d DB::select($sql);",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "    public function getViolationDriverForDamage(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "// 判断用户等级",
        "        // 需要改回，",
        "//        $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        // sql 头部",
        "        $sql \u003d \"SELECT   @r:\u003d@r+1 AS rank,d.lineName,a.drivername,a.times FROM",
        " ( SELECT     `api_violation`.`driverName`     AS `drivername`,deptId,  SUM(total) AS times FROM `api_violation`  ",
        "  WHERE   actiontypeDesc  IN (SELECT violationName FROM driving_violation_type WHERE deptid\u003d$userdeptid and damageType \u003d1) and vehicleNO IN(SELECT vehicleNO FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                // 关联表",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "        }",
        "        $fixed \u003d \" GROUP BY `api_violation`.`driverName` ORDER BY times DESC ) a INNER JOIN (SELECT @r:\u003d0)b INNER JOIN v_lineinfo d ON d.`lineDeptId`\u003da.deptId  ; \";",
        "// 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "            $records \u003d DB::select($sql);",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "        $records \u003d DB::select($sql);",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "    public function getViolationDriverForBadService(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //    $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        // sql 头部",
        "        $sql \u003d \"SELECT   @r:\u003d@r+1 AS rank,d.lineName,a.drivername,a.times FROM",
        " ( SELECT     `api_violation`.`driverName`     AS `drivername`,deptId,  SUM(total) AS times FROM `api_violation`  ",
        "  WHERE   actiontypeDesc  IN (SELECT violationName FROM driving_violation_type WHERE deptid\u003d$userdeptid and badServiceType \u003d1) and vehicleNO IN(SELECT vehicleNO FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                // 关联表",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "        }",
        "        $fixed \u003d \" GROUP BY `api_violation`.`driverName` ORDER BY times DESC ) a INNER JOIN (SELECT @r:\u003d0)b INNER JOIN v_lineinfo d ON d.`lineDeptId`\u003da.deptId  ; \";",
        "// 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "            $records \u003d DB::select($sql);",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "        $records \u003d DB::select($sql);",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "    // 违规比例图",
        "    public function getViolationChart(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027violationtype\u0027 \u003d\u003e \u0027required\u0027, // 数据类型",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "",
        "        // 需要改回",
        "        // $dept[\u0027level\u0027]\u003d0;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \" SELECT actiontypeDesc as actiontypeDesc ,sum(total) AS `cnt` FROM api_violation where vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        $violationtype \u003d $request-\u003eget(\u0027violationtype\u0027);",
        "        switch ($violationtype) {",
        "            case 0: //last day",
        "                $violationtype \u003d \" dangerType \";",
        "                break;",
        "            case 1:  // 7day",
        "                $violationtype \u003d \"damageType \";",
        "                // 关联表",
        "                break;",
        "            case 2:  // this month",
        "                $violationtype \u003d \" badServiceType \";",
        "                break;",
        "        }",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        $violationconditon \u003d \"and  actiontypeDesc  IN (SELECT violationName FROM driving_violation_type WHERE deptid\u003d$userdeptid and $violationtype \u003d1) \";",
        "",
        "        if ($violationtype \u003d\u003d 3) {",
        "            $violationconditon \u003d \"\";",
        "        }",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationconditon . \"GROUP BY actiontypeDesc ORDER BY cnt DESC  \";",
        "",
        "            $records \u003d DB::select($sql);",
        "            $cnt \u003d count($records);",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $actiontypeDesc \u003d $records[$i]-\u003eactiontypeDesc;",
        "                $rets[\"$actiontypeDesc\"] \u003d $records[$i]-\u003ecnt;",
        "            }",
        "",
        "            if (empty($rets)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationconditon . \"GROUP BY actiontypeDesc ORDER BY cnt DESC  \";",
        "",
        "        $records \u003d DB::select($sql);",
        "        $cnt \u003d count($records);",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $actiontypeDesc \u003d $records[$i]-\u003eactiontypeDesc;",
        "            $rets[\"$actiontypeDesc\"] \u003d $records[$i]-\u003ecnt;",
        "        }",
        "",
        "        if (empty($rets)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "",
        "",
        "    }",
        "",
        "    // 违规分类比例图",
        "    public function getViolationChartForType(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        // 需要改回",
        "        //     $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sqldanger \u003d \" SELECT \u0027dangerType\u0027 AS `name`,ifnull(SUM(total),0) AS `cnt` FROM api_violation WHERE vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId  \";",
        "        $sqldamage \u003d \" SELECT \u0027damageType\u0027AS `name` ,ifnull(sum(total),0) AS `cnt` FROM api_violation where vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId  \";",
        "        $sqlbadservice \u003d \" SELECT \u0027badServiceType\u0027AS `name` ,ifnull(sum(total),0) AS `cnt` FROM api_violation where vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId  \";",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        $userdeptid \u003d $this-\u003egetUserIdViolationType();",
        "        $sql1 \u003d \"SELECT violationName FROM driving_violation_type WHERE deptid\u003d\u0027.$userdeptid.\u0027 and dangerType \u003d1\";",
        "        $violationName \u003d DB::select($sql1);",
        "",
        "        $violationNameVal \u003d null;",
        "        for ($i \u003d 0; $i \u003c count($violationName); $i++) {",
        "            $violationNameVal .\u003d \"\u0027\" . $violationName[$i]-\u003eviolationName . \"\u0027\";",
        "            if ($i \u003c count($violationName) - 1) {",
        "                $violationNameVal .\u003d \u0027,\u0027;",
        "            }",
        "        }",
        "",
        "        $violationdanger \u003d \"and  actiontypeDesc  IN ($violationNameVal) \";",
        "        $violationdamage \u003d \"and  actiontypeDesc  IN ($violationNameVal) \";",
        "        $violationservice \u003d \"and  actiontypeDesc  IN ($violationNameVal) \";",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sqldanger .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationdanger;",
        "            $sqldamage .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationdamage;",
        "            $sqlbadservice .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationservice;",
        "            $sql \u003d $sqldanger . \" UNION ALL \" . $sqldamage . \" UNION ALL \" . $sqlbadservice;",
        "            $records \u003d DB::select($sql);",
        "",
        "            $rets[\u0027dangerType\u0027] \u003d $records[0]-\u003ecnt;",
        "            $rets[\u0027damageType\u0027] \u003d $records[1]-\u003ecnt;",
        "            $rets[\u0027badServiceType\u0027] \u003d $records[2]-\u003ecnt;",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "        $sqldanger .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationdanger;",
        "        $sqldamage .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationdamage;",
        "        $sqlbadservice .\u003d $fixedCondtion . \" and \" . $dataconditon . $violationservice;",
        "        $sql \u003d $sqldanger . \" UNION \" . $sqldamage . \" UNION \" . $sqlbadservice;",
        "",
        "        $records \u003d DB::select($sql);",
        "",
        "        $rets[\u0027dangerType\u0027] \u003d $records[0]-\u003ecnt;",
        "        $rets[\u0027damageType\u0027] \u003d $records[1]-\u003ecnt;",
        "        $rets[\u0027badServiceType\u0027] \u003d $records[2]-\u003ecnt;",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $rets);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getZhiZhan",
        "     * @name: 滞站信息统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getZhiZhan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromZhiZhan($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_zhizhan_violaiton\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromZhiZhan_old($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "        $dept \u003d null;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        $selectSql \u003d \" select companyName,driverName, vehicleNo, lineName,c.siteName AS site ,actiontypedesc,begin_time,end_time,judgement \";",
        "        $sql \u003d \" from(",
        "select vehicledeviceid, driverName, lineDeptId, begin_site, actiontypedesc,begin_time,end_time,(select judgement_json from stat_driving_violation_judgement where judgement_id \u003d stat_driving_violation_detail.judgement_id) as judgement",
        "from `stat_driving_violation_detail` where driverId is not null and  vehicledeviceid IN(SELECT deviceId FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "//        $datatype\u003d0;",
        "//        $depttype\u003d\u0027lineDeptid\u0027;",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 6;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "//        if( isset($params[\u0027deptid\u0027]) ){$deptid\u003d$params[\u0027deptid\u0027];};",
        "//        if( isset($params[\u0027depttype\u0027]) ){$depttype\u003d$params[\u0027depttype\u0027];};",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "",
        "                }",
        "",
        "",
        "                break;",
        "",
        "        }",
        "        $fixedcondition \u003d \"and actiontypedesc\u003d\u0027滞站\u0027) a inner join  v_vehicleinfo b on a.vehicledeviceid\u003db.deviceId  inner join t_siteinfo c on a.begin_site \u003dc.siteId \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 ) \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    public function getRecordsfromZhiZhan($params)",
        "    {",
        "        return $this-\u003equeryRecordsFromViolation($params, \"滞站\");",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getZhiZhan",
        "     * @name: 滞站信息统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportZhiZhan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $data \u003d $this-\u003egetRecordsfromZhiZhan($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出滞站列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027beijing_zhizhan_violaiton\u0027, $I18N, $records);//excel表格导出",
        "",
        "        $cnt \u003d 15;",
        "",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日滞站报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日滞站报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天滞站报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月滞站报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月滞站报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年滞站报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年滞站报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"滞站报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027G\u0027)-\u003esetWidth(20);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportYueZhan",
        "     * @name: 导出越站列表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: count,description:行数",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportYueZhan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $data \u003d $this-\u003egetRecordsfromYueZhan($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出越站列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027beijing_yuezhan_violaiton\u0027, $I18N, $records);//excel表格导出",
        "",
        "",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "",
        "",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日越站报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日越站报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天越站报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月越站报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月越站报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年越站报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年越站报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"越站报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027G\u0027)-\u003esetWidth(20);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "        /* $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "         switch ($datatype) {",
        "             case 0: //last day",
        "                 $title \u003d \u0027昨日越站报表\u0027;",
        "                 break;",
        "             case 1:  // 7day",
        "                 $title \u003d \u0027近七天越站报表\u0027;",
        "                 break;",
        "             case 2:  // this month",
        "                 $title \u003d \u0027当月越站报表\u0027;",
        "                 break;",
        "             case 3:  // last month",
        "                 $title \u003d \u0027上月越站报表\u0027;",
        "                 break;",
        "             case 4: // this year",
        "",
        "                 $title \u003d \u0027今年越站报表\u0027;",
        "",
        "                 break;",
        "             case 5: // last year",
        "                 $title \u003d \u0027去年越站报表\u0027;",
        "                 break;",
        "             case 6: // last year",
        "                 if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "                     $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "                     $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027越站报表\u0027;",
        "",
        "                 }",
        "         }",
        "         Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "             $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                 $userName \u003d Auth::user()-\u003ereal_name;",
        "                 $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "",
        "                 $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 $sheet-\u003esetValueOfCell(\"$title\", \u0027A\u0027, 1);",
        "",
        "                 //标题居中",
        "                 $sheet-\u003ecells(\u0027A1:\u0027 . $location . \u00271\u0027, function ($cells) {",
        "                     $cells-\u003esetAlignment(\u0027center\u0027);",
        "                 });",
        "",
        "                 $sheet-\u003esetValueOfCell(\"制表人:$userName                         时间：$first\", $location, 2);",
        "",
        "",
        "                 $sheet-\u003efromArray($records, null, \u0027A3\u0027);",
        "                 $sheet-\u003esetAutoSize(true);",
        "             });",
        "         })-\u003eexport(\u0027xlsx\u0027);*/",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getYueZhan",
        "     * @name: 越站信息统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getYueZhan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromYueZhan($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_yuezhan_violaiton\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromYueZhan($params)",
        "    {",
        "        return $this-\u003equeryRecordsFromViolation($params, \"越站\");",
        "    }",
        "",
        "    public function queryRecordsFromViolation($params, $type)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        $selectSql \u003d \" SELECT",
        "\t                    tmd.companyName,",
        "\t                    tmd.lineName,",
        "\t                    sdvd.driverName,",
        "\t                    tv.vehicleNo,",
        "\t                    tv.vehicleSN,",
        "\t                    c.siteName AS site,",
        "\t                    c.siteName AS begin_site,",
        "\t                    cd.siteName AS end_site,",
        "\t                    sdvd.actiontypeDesc as \u0027actiontypedesc\u0027,",
        "\t                    sdvd.begin_time,",
        "\t                    sdvd.end_time,",
        "\t                    sdvd.end_time,",
        "\t                    sdvj.judgement_json AS judgement \";",
        "        $sql \u003d \" FROM",
        "\t             (**union**) sdvd",
        "                 JOIN t_vehicleinfo tv ON tv.deviceId \u003d sdvd.vehicledeviceid",
        "                 JOIN t_mauth_dept tmd ON tmd.lineDeptId \u003d tv.deptId",
        "                 JOIN stat_driving_violation_judgement sdvj ON sdvd.judgement_id \u003d sdvj.judgement_id",
        "                 INNER JOIN t_siteinfo c ON sdvd.begin_site \u003d c.siteId",
        "                 INNER JOIN t_siteinfo cd ON sdvd.end_site \u003d cd.siteId",
        "                 WHERE",
        "\t             sdvd.driverId IS NOT NULL \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "//",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 6;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : -1;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "        $lineDeptidList \u003d DB::table(\"t_mauth_dept\")-\u003ewhere($depttype, $deptid)-\u003epluck(\"lineDeptid\");",
        "        /*",
        "         * 循环使用 union all 查询大表数据，保证使用索引查询，提高查询速度。",
        "         * 备注：使用该方法需提前保证 mysql max_allowed_packet参数设置大小，扩大 sql 长度限制。",
        "         * 循环拼接 sql，stat_date \u003e\u003d startDate and stat_date \u003c\u003d endDate",
        "         */",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $params[\u0027startDate\u0027] \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027));",
        "                $params[\u0027endDate\u0027] \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027));",
        "                break;",
        "            case 1:  // 7day",
        "                $params[\u0027startDate\u0027] \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-7 day\u0027));",
        "                $params[\u0027endDate\u0027] \u003d date(\u0027Y-m-d\u0027);",
        "                break;",
        "            case 2:  // this month",
        "                $params[\u0027startDate\u0027] \u003d date(\u0027Y-m-01\u0027);",
        "                $params[\u0027endDate\u0027] \u003d date(\u0027Y-m-t\u0027);",
        "                break;",
        "            case 3:  // last month",
        "                $params[\u0027startDate\u0027] \u003d date(\u0027Y-m-d\u0027, strtotime(date(\u0027Y-m-01\u0027) . \u0027 -1 month\u0027));",
        "                $params[\u0027endDate\u0027] \u003d date(\u0027Y-m-d\u0027, strtotime(date(\u0027Y-m-01\u0027) . \u0027 -1 day\u0027));",
        "                break;",
        "            case 4: // this year",
        "                $params[\u0027startDate\u0027] \u003d date(\u0027Y-01-01\u0027);",
        "                $params[\u0027endDate\u0027] \u003d date(\u0027Y-12-31\u0027);",
        "                break;",
        "            case 5: // last year",
        "                $params[\u0027startDate\u0027] \u003d date(\u0027Y-01-01\u0027, strtotime(\u0027-1 year\u0027));",
        "                $params[\u0027endDate\u0027] \u003d date(\u0027Y-12-31\u0027, strtotime(\u0027-1 year\u0027));",
        "                break;",
        "            case 6: // last year",
        "                break;",
        "        }",
        "        $statViolationDetailSql \u003d \"\";",
        "        if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "            foreach ($lineDeptidList as $lineDeptid) {",
        "                for ($date \u003d $params[\u0027startDate\u0027]; $date \u003c\u003d $params[\u0027endDate\u0027]; $date \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027+1 day\u0027, strtotime($date)))) {",
        "                    $statViolationDetailSql .\u003d \" UNION ALL  select * from stat_driving_violation_detail where actiontypedesc \u003d \u0027$type\u0027 and stat_date \u003d \u0027$date\u0027 and lineDeptid \u003d $lineDeptid \";",
        "                }",
        "            }",
        "        }",
        "        if (!empty($statViolationDetailSql)) {",
        "            $statViolationDetailSql \u003d substr($statViolationDetailSql, 11);",
        "            $sql \u003d str_replace(\"**union**\", $statViolationDetailSql, $sql);",
        "            if ($deptlevel !\u003d null) {",
        "                $sql .\u003d \" and tmd.$deptlevel\u003d$id \";",
        "            }",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \"  and tmd.$depttype \u003d \u0027$deptid\u0027 \";",
        "            };",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "            $sql .\u003d \" limit $offset , $count\";",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "        } else {",
        "            // 无机构信息返回",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e null,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e null,",
        "                \u0027total\u0027 \u003d\u003e 0,",
        "                \u0027last_page\u0027 \u003d\u003e 0,",
        "                \u0027data\u0027 \u003d\u003e []",
        "            ];",
        "        }",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportWeiGuiTingKaoZhan",
        "     * @name: 违规停靠站信息导出",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: count,description:行数",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportWeiGuiTingKaoZhan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $data \u003d $this-\u003egetRecordsfromWeiGuiTingKaoZhan($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出违规停靠站列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027beijing_weikuikaozhan_violaiton\u0027, $I18N, $records);//excel表格导出",
        "",
        "",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日违规停靠站报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日违规停靠站报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天违规停靠站报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月违规停靠站报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月违规停靠站报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年违规停靠站报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年违规停靠站报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"违规停靠站报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027G\u0027)-\u003esetWidth(20);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getWeiGuiTingKaoZhan",
        "     * @name: 违规停靠站信息统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getWeiGuiTingKaoZhan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromWeiGuiTingKaoZhan($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_weikuikaozhan_violaiton\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromWeiGuiTingKaoZhan_old($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        //20190515修改",
        "        $selectSql \u003d \" select companyName, driverName, vehicleNo, lineName, c.siteName as site,actiontypedesc,begin_time,end_time,judgement \";",
        "        $sql1 \u003d \"from(",
        "select vehicledeviceid, driverName, stat_driving_violation_detail.lineDeptId, begin_site, \u0027违规停靠站\u0027 as actiontypedesc,begin_time,end_time,(select judgement_json from stat_driving_violation_judgement where judgement_id \u003d stat_driving_violation_detail.judgement_id) as judgement",
        "from `stat_driving_violation_detail` \";",
        "        $sql \u003d \" SELECT distinct(lineDeptId) as lineDeptId FROM t_vehicleinfo b ",
        "                  INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "//        $datatype\u003d0;",
        "//        $depttype\u003d\u0027lineDeptid\u0027;",
        "//        if( isset($params[\u0027timeType\u0027]) ){$datatype\u003d$params[\u0027timeType\u0027];};",
        "//        if( isset($params[\u0027deptid\u0027]) ){$deptid\u003d$params[\u0027deptid\u0027];};",
        "//        if( isset($params[\u0027depttype\u0027]) ){$depttype\u003d$params[\u0027depttype\u0027];};",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 6;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "",
        "                }",
        "",
        "        }",
        "        $fixedcondition \u003d \"and actiontypedesc\u003d\u0027急刹车\u0027 and begin_site\u003e0 ) a inner join  v_vehicleinfo b on a.vehicledeviceid\u003db.deviceId INNER JOIN t_siteinfo c ON a.begin_site \u003dc.siteId \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027\";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id\";",
        "            };",
        "            //",
        "            //先把线路查出来",
        "            $lineDept \u003d DB::select($sql);",
        "            $lineIn \u003d null;",
        "            for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "                $lineIn \u003d $lineIn . $lineDept[$i]-\u003elineDeptId;",
        "                if ($i \u003c count($lineDept) - 1) {",
        "                    $lineIn .\u003d \",\";",
        "                }",
        "            }",
        "            $sql1 .\u003d \"where driverId is not null and  lineDeptId in (\" . $lineIn . \")\";",
        "",
        "",
        "            $sql1 .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql1)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql1 .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql1, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027  \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 \";",
        "        };",
        "        //",
        "        //先把线路查出来",
        "        $lineDept \u003d DB::select($sql);",
        "        $lineIn \u003d null;",
        "        for ($i \u003d 0; $i \u003c count($lineDept); $i++) {",
        "            $lineIn \u003d $lineIn . $lineDept[$i]-\u003elineDeptId;",
        "            if ($i \u003c count($lineDept) - 1) {",
        "                $lineIn .\u003d \",\";",
        "            }",
        "        }",
        "        $sql1 .\u003d \"where lineDeptId in (\" . $lineIn . \")\";",
        "",
        "        $sql1 .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql1)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql1 .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql1, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    public function getRecordsfromWeiGuiTingKaoZhan($params)",
        "    {",
        "        return $this-\u003equeryRecordsFromViolation($params, \"急刹车\");",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportChaoSu",
        "     * @name: 超速信息导出",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: count,description:行数",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportChaoSu(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $data \u003d $this-\u003egetRecordsfromChaoSu($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出超速列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027beijing_chaosu_violaiton\u0027, $I18N, $records);//excel表格导出",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日超速报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日超速报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天超速报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月超速报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月超速报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年超速报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年超速报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"超速报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "            if (isset($val[\u0027速度参数\u0027])) {",
        "                $records[$key][\u0027速度参数\u0027] \u003d (String)$val[\u0027速度参数\u0027];",
        "            }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027G\u0027)-\u003esetWidth(20);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getChaoSu",
        "     * @name: 超速信息统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getChaoSu(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromChaoSu($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_chaosu_violaiton\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromChaoSu($params)",
        "    {",
        "        //超速中使用speedConfig参数显示速度参数",
        "        $data \u003d $this-\u003equeryRecordsFromViolation($params, \"超速\");",
        "        foreach ($data[\u0027data\u0027] as $key \u003d\u003e $value) {",
        "            if (empty($value-\u003ejudgement)) {",
        "                $value-\u003espeedConfig \u003d null;",
        "            } else {",
        "                $value-\u003espeedConfig \u003d json_decode($value-\u003ejudgement)-\u003econfig-\u003espeed;",
        "            }",
        "        }",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportFenDuan",
        "     * @name: 分段准点信息导出",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: count,description:行数",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportFenDuan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $data \u003d $this-\u003egetRecordsfromFenDuan($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出分段列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027beijing_fenduan_violaiton\u0027, $I18N, $records);//excel表格导出",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日分段准点报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日分段准点报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天分段准点报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月分段准点报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月分段准点报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年分段准点报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年分段准点报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"分段准点报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027G\u0027)-\u003esetWidth(20);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getFenDuan",
        "     * @name: 分段准点信息统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getFenDuan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromFenduan($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_fenduan_violaiton\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromFenduan($params)",
        "    {",
        "        return $this-\u003equeryRecordsFromViolation($params, \"到站超时\");",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportXianLuPianYi",
        "     * @name: 线路偏移导出",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:页码",
        "     *parameter2: count,description:行数",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportXianLuPianYi(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $data \u003d $this-\u003egetRecordsfromXianLuPianYi($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出线路偏移列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027beijing_xianlupianyi_violaiton\u0027, $I18N, $records);//excel表格导出",
        "",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if ($data[\u0027data\u0027] \u003d\u003d []) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $lins \u003d [$recordsCompanyName];",
        "            $data[\u0027data\u0027] \u003d $lins;",
        "        }",
        "        $title \u003d $data[\u0027data\u0027][0]-\u003ecompanyName . \"---\";",
        "",
        "",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日线路偏移报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日线路偏移报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天线路偏移报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月线路偏移报表\u0027 . \"---\" . date(\"Y-m-1\") . \"至\" . date(\"Y-m-d\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月线路偏移报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年线路偏移报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年线路偏移报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"线路偏移报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                if (count($titleArry) \u003e\u003d 3) {",
        "                    $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                    $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                        $cells-\u003esetAlignment(\u0027right\u0027);",
        "                        $cells-\u003esetFontSize(12);",
        "                    });",
        "                }",
        "",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027G\u0027)-\u003esetWidth(20);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getXianLuPianYi",
        "     * @name: 线路偏移",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: page,description:页码",
        "     *parameter3: count,description:行数",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getXianLuPianYi(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromXianLuPianYi($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_xianlupianyi_violaiton\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "",
        "    public function getRecordsfromXianLuPianYi_old($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "",
        "        $dept \u003d null;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        $selectSql \u003d \" select companyName, driverName, vehicleNo, lineName, c.siteName as  site, c.siteName as begin_site,d.siteName as end_site, actiontypedesc,begin_time,end_time \";",
        "        $sql \u003d \" from(",
        "select vehicledeviceid, driverName, lineDeptId, begin_site, end_site, actiontypedesc,begin_time,end_time ",
        "from `stat_driving_violation_detail` where vehicledeviceid IN(SELECT deviceId FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "//        $datatype\u003d0;",
        "//        $depttype\u003d\u0027lineDeptid\u0027;",
        "//        if( isset($params[\u0027timeType\u0027]) ){$datatype\u003d$params[\u0027timeType\u0027];};",
        "//        if( isset($params[\u0027deptid\u0027]) ){$deptid\u003d$params[\u0027deptid\u0027];};",
        "//        if( isset($params[\u0027depttype\u0027]) ){$depttype\u003d$params[\u0027depttype\u0027];};",
        "//        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 6;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "",
        "                }",
        "                break;",
        "",
        "        }",
        "        $fixedcondition \u003d \"and actiontypedesc\u003d\u0027线路偏移\u0027 and begin_site\u003e0 ) a inner join  v_vehicleinfo b on a.vehicledeviceid\u003db.deviceId INNER JOIN t_siteinfo c ON a.begin_site \u003dc.siteId inner join t_siteinfo d on a.end_site\u003dd.siteId \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027) \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027) \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    public function getRecordsfromXianLuPianYi($params)",
        "    {",
        "        return $this-\u003equeryRecordsFromViolation($params, \"  线路偏移\");",
        "    }",
        "",
        "    public function exportDianZiWeiLan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $data \u003d $this-\u003egetRecordsfromDianZiWeiLan($this-\u003eparams);//分页",
        "",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出电子围栏列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027beijing_dianziweilan_violaiton\u0027, $I18N, $records);//excel表格导出",
        "",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records) {",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records) {",
        "                $sheet-\u003efromArray($records);",
        "                $sheet-\u003esetAutoSize(true);",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDianZiWeiLan",
        "     * @name: 电子围栏",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: startDate,description:开始时间",
        "     *parameter6: endDate,description:结束时间",
        "     *parameter7: state,description:状态",
        "     *parameter8: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDianZiWeiLan(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromDianZiWeiLan($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_dianziweilan_violaiton\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromDianZiWeiLan($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "",
        "        $dept \u003d null;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        $selectSql \u003d \" select driverName, vehicleNo, lineName, actiontypedesc,begin_time,end_time,statetype \";",
        "        $sql \u003d \" from(",
        "select vehicledeviceid, driverName, lineDeptId, actiontypedesc,begin_time,end_time , case realduration when 1 then \u0027驶出\u0027 when 2 then \u0027驶入\u0027 else \u0027驶出\u0027 end as statetype",
        "from `stat_driving_violation_detail` where vehicledeviceid IN(SELECT deviceId FROM t_vehicleinfo b ",
        "INNER JOIN  t_mauth_dept c ON b.deptId \u003d c.lineDeptId   \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "//        $datatype\u003d0;",
        "//        $depttype\u003d\u0027lineDeptid\u0027;",
        "//        if( isset($params[\u0027timeType\u0027]) ){$datatype\u003d$params[\u0027timeType\u0027];};",
        "//        if( isset($params[\u0027deptid\u0027]) ){$deptid\u003d$params[\u0027deptid\u0027];};",
        "//        if( isset($params[\u0027depttype\u0027]) ){$depttype\u003d$params[\u0027depttype\u0027];};",
        "//        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 6;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "",
        "        $statetype \u003d isset($params[\u0027state\u0027]) ? $params[\u0027state\u0027] : 1;",
        "        switch ($statetype) {",
        "",
        "",
        "            case 1:  // 全部",
        "",
        "                $statetype \u003d \" \";",
        "",
        "                break;",
        "            case 2:  //驶出",
        "",
        "                $statetype \u003d \" and realduration\u003d1 \";",
        "",
        "                break;",
        "            case 3:  //  驶入",
        "",
        "                $statetype \u003d \" and realduration\u003d2 \";",
        "",
        "                break;",
        "        }",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "",
        "                }",
        "                break;",
        "",
        "        }",
        "        $fixedcondition \u003d \"and actiontypedesc\u003d\u0027电子围栏违规\u0027  $statetype ) a inner join  v_vehicleinfo b on a.vehicledeviceid\u003db.deviceId  \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027) \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027) \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmCount",
        "     * @name: 故障概括",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     *parameter2: deptid,description:部门ID",
        "     *parameter3: depttype,description:部门类型 (线路lineDeptid)",
        "     *parameter4: breaktype,description:故障类型 (动力总成、底盘系统、电气系统、辅助系统)",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmCount(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        // 需要改回，",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "        $rets1 \u003d [",
        "            \u0027serious\u0027 \u003d\u003e 0,        // 严重故障",
        "            \u0027ordinary\u0027 \u003d\u003e 0,         // 普通故障",
        "            \u0027car\u0027 \u003d\u003e 0,  //车辆数",
        "            \u0027alarm\u0027 \u003d\u003e 0, // 报警故障",
        "            \u0027carInLineRank\u0027 \u003d\u003e 0 //车辆在线路中故障排名",
        "        ];",
        "        $datarets1 \u003d $rets1;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $breaktype \u003d $request-\u003eget(\u0027breaktype\u0027);",
        "        if (empty($breaktype)) {",
        "            $breaktype \u003d \"%\";",
        "        }",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if (empty($datatype)) {",
        "            $datatype \u003d 0;",
        "        };",
        "        $tableName \u003d \u0027api_breakdowns\u0027;",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                $timeconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 2 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 14 day and stat_date\u003c CURRENT_DATE()-interval 7 day\";",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 2 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day- interval 1 month\";",
        "",
        "                break;",
        "            case 4: // this year",
        "                $tableName \u003d \u0027api_breakdowns_month\u0027;",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "            case 5: // last year",
        "                $tableName \u003d \u0027api_breakdowns_month\u0027;",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 2 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year\";",
        "                break;",
        "        }",
        "        $sqlper \u003d \" SELECT ifnull(SUM(ordinary),0)AS ordinary,ifnull(SUM(serious),0)AS serious,ifnull(SUM(alarm), 0) AS alarm,ifnull(COUNT(vehicleno),0)AS cnt,mark FROM( \";",
        "        $sqlend \u003d \" AND vehicleno IS NOT NULL GROUP BY vehicleno)z GROUP BY mark order by mark asc \";",
        "        $sql \u003d \"SELECT SUM(IF(alarmLevel IS NULL OR alarmLevel \u003d 0,total,0)) \u0027ordinary\u0027, ",
        "                      SUM(IF(alarmLevel \u003d 1,total,0)) \u0027serious\u0027,",
        "                      SUM(IF(alarmLevel \u003d 2,total,0)) \u0027alarm\u0027,",
        "                      vehicleno,",
        "                      1 as mark",
        "        FROM `$tableName` ab INNER JOIN (",
        "            SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "            UNION ALL",
        "            SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "        INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId  \";",
        "        $sql2 \u003d \" UNION ALL ",
        "                  SELECT SUM(IF(alarmLevel IS NULL OR alarmLevel \u003d 0,total,0)) \u0027ordinary\u0027, ",
        "                      SUM(IF(alarmLevel \u003d 1,total,0)) \u0027serious\u0027,",
        "                      SUM(IF(alarmLevel \u003d 2,total,0)) \u0027alarm\u0027,",
        "                      vehicleno,",
        "                      2 as mark",
        "        FROM `$tableName` ab INNER JOIN (",
        "            SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "            UNION ALL",
        "            SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "        INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId \";",
        "        //判断当前deptId在报警等级表中是否有设置，",
        "        /*",
        "         * true：使用报警等级表中设置的；",
        "         * false：使用报警量表中的录入的报警等级",
        "         *",
        "         * */",
        "        $levelfilter \u003d \"\";",
        "        $leveldeptId \u003d $deptid;",
        "        if ($depttype \u003d\u003d \"vehicleNo\") {",
        "            $leveldeptId \u003d DB::select(\"select deptId from t_vehicleinfo where $depttype\u003d\u0027$deptid\u0027\");",
        "            $leveldeptId \u003d $leveldeptId[0]-\u003edeptId;",
        "        }",
        "        if ($leveldeptId !\u003d null) {",
        "            $levelinfo \u003d DB::select(\"select * from t_alarmlevelinfo where deptId\u003d$leveldeptId\");",
        "            if (!empty($levelinfo)) {",
        "                $levelfilter \u003d \"LEFT JOIN t_alarmlevelinfo l ON alarm.alarmname\u003dl.`alarmTypeName` AND l.deptId\u003d$leveldeptId \";",
        "                $sql \u003d \"SELECT SUM(IF(l.alarmLevel IS NULL OR l.alarmLevel \u003d 0,total,0)) \u0027ordinary\u0027, ",
        "                       SUM(IF(ab.alarmLevel \u003d 1 OR l.alarmLevel\u003d1,total,0)) \u0027serious\u0027,",
        "                       SUM(IF(ab.alarmLevel \u003d 2 OR l.alarmLevel\u003d2,total,0)) \u0027alarm\u0027,",
        "                        vehicleno,",
        "                       1 AS mark",
        "        FROM `$tableName` ab INNER JOIN (",
        "            SELECT alarmname,alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "            UNION ALL",
        "            SELECT alarmname,alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "        INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId  \";",
        "",
        "                $sql2 \u003d \" UNION ALL ",
        "                  SELECT IFNULL(SUM(IF(l.alarmLevel IS NULL OR l.alarmLevel \u003d 0,total,0)),0) \u0027ordinary\u0027, ",
        "                       IFNULL(SUM(IF(ab.alarmLevel \u003d 1 OR l.alarmLevel\u003d1,total,0)),0) \u0027serious\u0027,",
        "                       IFNULL(SUM(IF(ab.alarmLevel \u003d 2 OR l.alarmLevel\u003d2,total,0)),0) \u0027alarm\u0027,",
        "                       vehicleno,",
        "                       2 AS mark",
        "        FROM `$tableName` ab INNER JOIN (",
        "            SELECT alarmname,alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "            UNION ALL",
        "            SELECT alarmname,alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "        INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId \";",
        "            }",
        "        }",
        "",
        "",
        "//        $sqlcar \u003d \"select count(1) as cnt from (",
        "//        select vehicleNo",
        "//        FROM `$tableName` ab INNER JOIN (",
        "//            SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "//            UNION ALL",
        "//            SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "//        INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId   \";",
        "        $sqlCarInLineRank \u003d \"SELECT",
        "                            (@r :\u003d @r + 1 ) AS r,vehicleNo,total",
        "                            FROM",
        "                                (SELECT vehicleNo, SUM(total) AS total",
        "                                 FROM",
        "                                 `$tableName` ab INNER JOIN ( SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                                        UNION ALL SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                                    ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "                                    INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sqldept \u003d \" where $deptlevel\u003d$id and $depttype \u003d $deptid \";",
        "                if ($depttype \u003d\u003d \"vehicleNo\") $sqldept \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $sqldept \u003d \" where  $deptlevel\u003d$id \";",
        "            };",
        "            $sql .\u003d $levelfilter . $sqldept . \" and \" . $dataconditon . \" and vehicleno is not null GROUP BY vehicleno \" . $sql2 . $levelfilter . $sqldept . \" and \" . $timeconditon;",
        "            $sql \u003d $sqlper . $sql . $sqlend;",
        "            //$sqlcar .\u003d $sqldept . \"and $dataconditon \";",
        "            //$sqlcar .\u003d \" and vehicleNo is not null group by vehicleno)z\";",
        "            if ($depttype \u003d\u003d \"vehicleNo\") {",
        "                //获取当前车辆处于线路下故障排名",
        "                /*",
        "                 * 实现：",
        "                 * 1.获取线路下所有违规车辆排名",
        "                 * 2.如集合为空，显示默认值0",
        "                 * 3.如存在与集合中，则显示 r",
        "                 * 4.不存在集合中选取最后一个元素r+1",
        "                 */",
        "                $sqlCarInLineRank .\u003d \" where  $deptlevel\u003d$id \" . \" and \" . $dataconditon . \" AND lineDeptId \u003d (SELECT deptId FROM t_vehicleinfo WHERE $depttype \u003d \u0027$deptid\u0027 )\";",
        "                $sqlCarInLineRank .\u003d \" and vehicleNo is not null group by vehicleno ORDER BY total DESC )z inner join (select @r:\u003d0) rank  \";",
        "                $sqlCarInLineRankRecords \u003d DB::select($sqlCarInLineRank);",
        "                foreach ($sqlCarInLineRankRecords as $index \u003d\u003e $value) {",
        "                    if ($value-\u003evehicleNo \u003d\u003d $deptid) {",
        "                        $rets1[\u0027carInLineRank\u0027] \u003d $value-\u003er;",
        "                        break;",
        "                    }",
        "                }",
        "                if (sizeof($sqlCarInLineRankRecords) \u003e 0 \u0026\u0026 $rets1[\u0027carInLineRank\u0027] \u003d\u003d 0) {",
        "                    $rets1[\u0027carInLineRank\u0027] \u003d end($sqlCarInLineRankRecords)-\u003er + 1;",
        "                }",
        "            }",
        "            $records \u003d DB::select($sql);",
        "            if (count($records) \u003e 0) {",
        "                //本期",
        "                if ($records[0]-\u003emark \u003d\u003d 1) {",
        "                    $rets1[\u0027alarm\u0027] \u003d $records[0]-\u003ealarm;",
        "                    $rets1[\u0027car\u0027] \u003d $records[0]-\u003ecnt;",
        "                    $rets1[\u0027serious\u0027] \u003d $records[0]-\u003eserious;",
        "                    $rets1[\u0027ordinary\u0027] \u003d $records[0]-\u003eordinary;",
        "                } else {",
        "                    $datarets1[\u0027alarm\u0027] \u003d $records[0]-\u003ealarm;",
        "                    $datarets1[\u0027car\u0027] \u003d $records[0]-\u003ecnt;",
        "                    $datarets1[\u0027serious\u0027] \u003d $records[0]-\u003eserious;",
        "                    $datarets1[\u0027ordinary\u0027] \u003d $records[0]-\u003eordinary;",
        "                }",
        "                //上期",
        "                if (count($records) \u003d\u003d 2) {",
        "                    $datarets1[\u0027alarm\u0027] \u003d $records[1]-\u003ealarm;",
        "                    $datarets1[\u0027car\u0027] \u003d $records[1]-\u003ecnt;",
        "                    $datarets1[\u0027serious\u0027] \u003d $records[1]-\u003eserious;",
        "                    $datarets1[\u0027ordinary\u0027] \u003d $records[1]-\u003eordinary;",
        "                }",
        "            }",
        "            return $this-\u003esetJsonResponseNew(SUCCESS, $rets1, $datarets1);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sqldept \u003d \" where $depttype \u003d $deptid \";",
        "            if ($depttype \u003d\u003d \"vehicleNo\") $sqldept \u003d \" where $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $sqldept \u003d \" where 1\u003d1 \";",
        "        };",
        "        $sql .\u003d $levelfilter . $sqldept . \" and \" . $dataconditon . \" and vehicleno is not null GROUP BY vehicleno \" . $sql2 . $levelfilter . $sqldept . \" and \" . $timeconditon;",
        "        $sql \u003d $sqlper . $sql . $sqlend;",
        "        // $sqlcar .\u003d $sqldept . \"and $dataconditon \";",
        "        // $sqlcar .\u003d \" and vehicleNo is not null group by vehicleno)z\";",
        "        if ($depttype \u003d\u003d \"vehicleNo\") {",
        "            //获取当前车辆处于线路下故障排名",
        "            /*",
        "             * 实现：",
        "             * 1.获取线路下所有违规车辆排名",
        "             * 2.如集合为空，显示默认值0",
        "             * 3.如存在与集合中，则显示 r",
        "             * 4.不存在集合中选取最后一个元素r+1",
        "             */",
        "            $sqlCarInLineRank .\u003d \" where \" . $dataconditon . \" AND lineDeptId \u003d (SELECT deptId FROM t_vehicleinfo WHERE $depttype \u003d \u0027$deptid\u0027 )\";",
        "            $sqlCarInLineRank .\u003d \" and vehicleNo is not null group by vehicleno ORDER BY total DESC )z inner join (select @r:\u003d0) rank  \";",
        "            $sqlCarInLineRankRecords \u003d DB::select($sqlCarInLineRank);",
        "            foreach ($sqlCarInLineRankRecords as $index \u003d\u003e $value) {",
        "                if ($value-\u003evehicleNo \u003d\u003d $deptid) {",
        "                    $rets1[\u0027carInLineRank\u0027] \u003d $value-\u003er;",
        "                    break;",
        "                }",
        "            }",
        "            if (sizeof($sqlCarInLineRankRecords) \u003e 0 \u0026\u0026 $rets1[\u0027carInLineRank\u0027] \u003d\u003d 0) {",
        "                $rets1[\u0027carInLineRank\u0027] \u003d end($sqlCarInLineRankRecords)-\u003er + 1;",
        "            }",
        "        }",
        "        $records \u003d DB::select($sql);",
        "        //本期",
        "        if (count($records) \u003e 0 \u0026\u0026 $records[0]-\u003emark \u003d\u003d 1) {",
        "            $rets1[\u0027alarm\u0027] \u003d $records[0]-\u003ealarm;",
        "            $rets1[\u0027car\u0027] \u003d $records[0]-\u003ecnt;",
        "            $rets1[\u0027serious\u0027] \u003d $records[0]-\u003eserious;",
        "            $rets1[\u0027ordinary\u0027] \u003d $records[0]-\u003eordinary;",
        "        } else {"
      ]
    },
    {
      "a": [
        "            $datarets1[\u0027alarm\u0027] \u003d $records[0]-\u003ealarm;",
        "            $datarets1[\u0027car\u0027] \u003d $records[0]-\u003ecnt;",
        "            $datarets1[\u0027serious\u0027] \u003d $records[0]-\u003eserious;",
        "            $datarets1[\u0027ordinary\u0027] \u003d $records[0]-\u003eordinary;"
      ],
      "b": [
        "            $datarets1[\u0027alarm\u0027] \u003d isset($records[0]-\u003ealarm)?$records[0]-\u003ealarm:0;",
        "            $datarets1[\u0027car\u0027] \u003d isset($records[0]-\u003ecnt)?$records[0]-\u003ecnt:0;",
        "            $datarets1[\u0027serious\u0027] \u003d isset($records[0]-\u003eserious)?$records[0]-\u003eserious:0;",
        "            $datarets1[\u0027ordinary\u0027] \u003d isset($records[0]-\u003eordinary)?$records[0]-\u003eordinary:0;"
      ],
      "edit_a": [],
      "edit_b": [
        [
          34,
          6
        ],
        [
          18,
          22
        ],
        [
          34,
          24
        ],
        [
          16,
          2
        ],
        [
          38,
          28
        ],
        [
          20,
          2
        ],
        [
          39,
          29
        ],
        [
          21,
          2
        ]
      ]
    },
    {
      "ab": [
        "        }",
        "        //上期",
        "        if (count($records) \u003d\u003d 2) {",
        "            $datarets1[\u0027alarm\u0027] \u003d $records[1]-\u003ealarm;",
        "            $datarets1[\u0027car\u0027] \u003d $records[1]-\u003ecnt;",
        "            $datarets1[\u0027serious\u0027] \u003d $records[1]-\u003eserious;",
        "            $datarets1[\u0027ordinary\u0027] \u003d $records[1]-\u003eordinary;",
        "        }",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $rets1, $datarets1);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBreakCarRank",
        "     * @name: 故障车辆排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: breaktype,description:故障类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBreakCarRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromBreakCarRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_breakdowns_car\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromBreakCarRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "        $breaktype \u003d isset($params[\u0027breaktype\u0027]) ? $params[\u0027breaktype\u0027] : \u0027%\u0027;",
        "        if ($breaktype \u003d\u003d null) {",
        "            $breaktype \u003d \"%\";",
        "        }",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "        $sql \u003d \" FROM (",
        "        SELECT @r:\u003d@r+1 AS rank,d.* FROM ",
        "        (SELECT lineName ,vehicleNo, SUM(total) AS times  ",
        "        FROM api_breakdowns ab INNER JOIN (",
        "            SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "            UNION ALL",
        "            SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "        INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId  \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \" FROM (",
        "                SELECT @r:\u003d@r+1 AS rank,d.* FROM ",
        "                (SELECT lineName, vehicleNo, SUM(total) AS times  ",
        "                FROM api_breakdowns_month ab INNER JOIN (",
        "                    SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                    UNION ALL",
        "                    SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "                INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \" FROM (",
        "                SELECT @r:\u003d@r+1 AS rank,d.* FROM ",
        "                (SELECT lineName, vehicleNo, SUM(total) AS times  ",
        "                FROM api_breakdowns_month ab INNER JOIN (",
        "                    SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                    UNION ALL",
        "                    SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "                INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "        }",
        "        $fixedcondition \u003d \"AND vehicleNo is NOT NULL GROUP BY vehicleNo  ORDER BY times DESC) d INNER JOIN (SELECT @r:\u003d0) b) m \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 \";",
        "        };",
        "        //",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getBreakRank",
        "     * @name: 故障排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: breaktype,description:故障类型",
        "     *parameter4: page,description:当前页",
        "     *parameter5: count,description:分页条数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBreakRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromBreakRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_breakdowns\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromBreakRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $breaktype \u003d isset($params[\u0027breaktype\u0027]) ? $params[\u0027breaktype\u0027] : \u0027%\u0027;",
        "        if ($breaktype \u003d\u003d null) {",
        "            $breaktype \u003d \"%\";",
        "        }",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "        $sql \u003d \" FROM (",
        "        SELECT @r:\u003d@r+1 AS rank,a.* FROM ",
        "        ( SELECT  lineName,abm.alarmtypename as break, SUM(total) AS times   ",
        "        FROM api_breakdowns abm INNER JOIN (",
        "\t\t\t\t\tSELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "\t\t\t\t\tUNION ALL",
        "\t\t\t\t\tSELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "\t\t\t\t) alarm ON abm.alarmtypename \u003d alarm.alarmtypename",
        "\t\t\t\tINNER JOIN t_mauth_dept tm ON abm.deptId \u003d tm.lineDeptId  \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //设备号转车牌号",
        "        if (\"deviceId\" \u003d\u003d $depttype) {",
        "            $depttype \u003d \"vehicleNo\";",
        "            $vehicleInfo \u003d DB::table(\"t_vehicleinfo\")",
        "                -\u003ewhere(\"deviceId\", $deptid)",
        "                -\u003eselect(\"vehicleNo\")-\u003efirst();",
        "            if ($vehicleInfo !\u003d null) {",
        "                $deptid \u003d $vehicleInfo-\u003evehicleNo;",
        "            } else {",
        "                $deptid \u003d \"\";",
        "            }",
        "        }",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \" FROM (",
        "                SELECT @r:\u003d@r+1 AS rank,a.* FROM ",
        "                        ( SELECT  lineName,abm.alarmtypename as break, SUM(total) AS times   ",
        "                        FROM api_breakdowns_month abm INNER JOIN (",
        "                                    SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                                    UNION ALL",
        "                                    SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                                ) alarm ON abm.alarmtypename \u003d alarm.alarmtypename",
        "                                INNER JOIN t_mauth_dept tm ON abm.deptId \u003d tm.lineDeptId  \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \" FROM (",
        "                SELECT @r:\u003d@r+1 AS rank,a.* FROM ",
        "                        ( SELECT  lineName,abm.alarmtypename as break, SUM(total) AS times   ",
        "                        FROM api_breakdowns_month abm INNER JOIN (",
        "                                    SELECT alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                                    UNION ALL",
        "                                    SELECT alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                                ) alarm ON abm.alarmtypename \u003d alarm.alarmtypename",
        "                                INNER JOIN t_mauth_dept tm ON abm.deptId \u003d tm.lineDeptId  \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "        }",
        "        $fixedcondition \u003d \" GROUP BY abm.alarmtypename ORDER BY times DESC ) a INNER JOIN (SELECT @r:\u003d0) b) m  \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 \";",
        "        };",
        "        //",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmChart",
        "     * @name: 故障比例图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: breaktype,description:故障类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmChart(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        // 需要改回",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        //大系统分类中文",
        "        $breaktype \u003d $request-\u003eget(\u0027breaktype\u0027);",
        "        if (!empty($breaktype)) {",
        "            $breaktype \u003d \" WHERE parenttype \u003d \u0027$breaktype\u0027 \";",
        "        }",
        "        //故障表名，默认api_breakdowns",
        "        $breakTableName \u003d \"api_breakdowns\";",
        "        //时间范围 012345 默认0昨天",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        $alarmtype \u003d $request-\u003eget(\u0027alarmtype\u0027);",
        "        if (empty($alarmtype)) {",
        "            $alarmtypeCondition \u003d \"\";",
        "        } else {",
        "            $alarmtypeCondition \u003d \" and ab.alarmtypename \u003d\u0027$alarmtype\u0027 \";",
        "        }",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                break;",
        "            case 4: // this year",
        "                $breakTableName \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $breakTableName \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "        }",
        "        $sql \u003d \" SELECT ab.alarmtypename as alarmType ,sum(total) AS `cnt` ",
        "                 FROM $breakTableName ab inner join  ",
        "                  (SELECT alarmtypename FROM `t_vehiclealarmtype` $breaktype UNION ALL SELECT alarmtypename FROM `t_vehiclealarmtype2` $breaktype ) alarmType  ",
        "                  ON ab.alarmtypename \u003d alarmType.alarmtypename",
        "                  INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId  \";",
        "        if ($deptlevel !\u003d null) {",
        "            //非超级管理员",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondition \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $fixedCondition \u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondition . \" $alarmtypeCondition and \" . $dataconditon . \"GROUP BY ab.alarmtypename ORDER BY cnt DESC LIMIT 5 \";",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondition \u003d \" where  $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $fixedCondition \u003d \" where 1\u003d1 \";",
        "        };",
        "        //sql整合",
        "        $sql .\u003d $fixedCondition . \" $alarmtypeCondition and \" . $dataconditon . \"GROUP BY ab.alarmtypename ORDER BY cnt DESC LIMIT 5 \";",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmWithTypeChart",
        "     * @name: 大类故障-故障比例-分类一次",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: breaktype,description:故障类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmWithTypeChart(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        // 需要改回",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        // 大分类  如 动力总成",
        "        $breaktype \u003d $request-\u003eget(\u0027breaktype\u0027);",
        "        if (empty($breaktype)) {",
        "            $breaktype \u003d \"%\";",
        "        }",
        "        $sql \u003d \"  SELECT alarm.type AS alarmType ,sum(total) AS `cnt` ",
        "        FROM `api_breakdowns` ab INNER JOIN (",
        "            SELECT alarmtypename,type FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "            UNION ALL",
        "            SELECT alarmtypename,type FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "        INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId  \";",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        //防止传入设备号转车牌号",
        "        if (\"deviceId\" \u003d\u003d $depttype) {",
        "            $depttype \u003d \"vehicleNo\";",
        "            $vehicleInfo \u003d DB::table(\"t_vehicleinfo\")",
        "                -\u003ewhere(\"deviceId\", $deptid)",
        "                -\u003eselect(\"vehicleNo\")-\u003efirst();",
        "            if ($vehicleInfo !\u003d null) {",
        "                $deptid \u003d $vehicleInfo-\u003evehicleNo;",
        "            } else {",
        "                $deptid \u003d \"\";",
        "            }",
        "        }",
        "",
        "        // 小分类 如 EBS系统",
        "        $alarmtype \u003d $request-\u003eget(\u0027alarmtype\u0027);",
        "        if (empty($alarmtype)) {",
        "            $alarmtypeCondition \u003d \"\";",
        "        } else {",
        "            $alarmtypeCondition \u003d \" and alarm.type\u003d\u0027$alarmtype\u0027 \";",
        "        }",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"  SELECT alarm.type AS alarmType ,sum(total) AS `cnt` ",
        "                FROM `api_breakdowns_month` ab INNER JOIN (",
        "                    SELECT alarmtypename,type FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                    UNION ALL",
        "                    SELECT alarmtypename,type FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "                INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId  \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"  SELECT alarm.type as alarmType ,sum(total) AS `cnt` ",
        "                FROM `api_breakdowns_month` ab INNER JOIN (",
        "                    SELECT alarmtypename,type FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027$breaktype\u0027",
        "                    UNION ALL",
        "                    SELECT alarmtypename,type FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027$breaktype\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "                INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId  \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 AND vehicleNo IS NOT NULL  \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id  AND vehicleNo IS NOT NULL  \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" $alarmtypeCondition and \" . $dataconditon . \" and alarm.type is not null  GROUP BY alarm.type   \";",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 AND vehicleNo IS NOT NULL \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1  AND vehicleNo IS NOT NULL\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" $alarmtypeCondition and \" . $dataconditon . \" and alarm.type is not null GROUP BY alarm.type  \";",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmData",
        "     * @name: 故障单一趋势图  故障数据",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: breaktype,description:故障类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        //大系统分类条件拼接",
        "        $breakTypeWhere \u003d $request-\u003eget(\u0027breaktype\u0027);",
        "        if (!empty($breakTypeWhere)) {",
        "            $breakTypeWhere \u003d \" WHERE parenttype \u003d \u0027$breakTypeWhere\u0027 \";",
        "        } else {",
        "            $breakTypeWhere \u003d \"\";",
        "        }",
        "        // sql 头部",
        "        $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(stat_date,\u0027%d\u0027) as stat_date  ",
        "                FROM(",
        "                  SELECT SUM(total) AS cnt, stat_date  ",
        "                  FROM (",
        "                    SELECT total, stat_date AS stat_date ",
        "                    FROM api_breakdowns  abs INNER JOIN (",
        "\t\t\t\t\t\tSELECT alarmtypename FROM `t_vehiclealarmtype` $breakTypeWhere",
        "\t\t\t\t\t\tUNION ALL",
        "                        SELECT alarmtypename FROM `t_vehiclealarmtype2` $breakTypeWhere",
        "\t\t\t\t\t) alarmType ON abs.alarmtypename \u003d alarmType.alarmtypename",
        "\t\t\t\t\tINNER JOIN t_mauth_dept tm ON abs.deptId \u003d tm.lineDeptId \";",
        "",
        "        // 用作 limit, 只有在时间为今年的时候有",
        "        $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        //设备号转车牌号",
        "        if (\"deviceId\" \u003d\u003d $depttype) {",
        "            $depttype \u003d \"vehicleNo\";",
        "            $vehicleInfo \u003d DB::table(\"t_vehicleinfo\")",
        "                -\u003ewhere(\"deviceId\", $deptid)",
        "                -\u003eselect(\"vehicleNo\")-\u003efirst();",
        "            if ($vehicleInfo !\u003d null) {",
        "                $deptid \u003d $vehicleInfo-\u003evehicleNo;",
        "            } else {",
        "                $deptid \u003d \"\";",
        "            }",
        "        }",
        "",
        "        // 车辆类型",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \"\";",
        "        } else {",
        "            $motorCondtion \u003d \" and motortype\u003d$motorType \";",
        "        };",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date) b    \";",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $sql \u003d \"SELECT sum(total) AS cnt, stat_date ",
        "                        FROM (",
        "                          SELECT total, DATE_FORMAT(stat_date,\u0027%H:00\u0027)  AS stat_date ",
        "                          FROM api_breakdowns_hour abs INNER JOIN (",
        "                              SELECT alarmtypename FROM `t_vehiclealarmtype` $breakTypeWhere",
        "                              UNION ALL",
        "                              SELECT alarmtypename FROM `t_vehiclealarmtype2` $breakTypeWhere",
        "                        ) alarmType ON abs.alarmtypename \u003d alarmType.alarmtypename",
        "                        INNER JOIN t_mauth_dept tm ON abs.deptId \u003d tm.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 1 day  and stat_date\u003cCURRENT_DATE() \";",
        "                $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date   \";",
        "                for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                    if ($i \u003e 9) {",
        "                        $arrtime[] \u003d date(\"$i:00\");",
        "                    } else {",
        "                        $arrtime[] \u003d date(\"0$i:00\");",
        "                    }",
        "",
        "                }",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day\", time()));",
        "                    $inttime--;",
        "                }",
        "                // 关联表",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d date(\u0027d\u0027);",
        "                $inttime \u003d intval($inttime) - 1;",
        "                $inttime2 \u003d $inttime;",
        "                for ($i \u003d 0; $i \u003c $inttime2; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day \", time()));",
        "                    $inttime--;",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date ",
        "                        FROM(",
        "                          SELECT SUM(total) AS cnt, stat_date ",
        "                          FROM (",
        "                            SELECT total, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date ",
        "                            FROM api_breakdowns_month abs INNER JOIN (",
        "                              SELECT alarmtypename FROM `t_vehiclealarmtype` $breakTypeWhere",
        "                              UNION ALL",
        "                              SELECT alarmtypename FROM `t_vehiclealarmtype2` $breakTypeWhere",
        "                        ) alarmType ON abs.alarmtypename \u003d alarmType.alarmtypename",
        "                        INNER JOIN t_mauth_dept tm ON abs.deptId \u003d tm.lineDeptId     \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                // 为显示 到当前月的 每月数据",
        "                $fixed .\u003d \"inner JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "                (SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date ",
        "                        FROM(",
        "                            SELECT SUM(total) AS cnt, stat_date ",
        "                            FROM (",
        "                            SELECT total, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date  ",
        "                            FROM api_breakdowns_month abs INNER JOIN (",
        "                              SELECT alarmtypename FROM `t_vehiclealarmtype` $breakTypeWhere",
        "                              UNION ALL",
        "                              SELECT alarmtypename FROM `t_vehiclealarmtype2` $breakTypeWhere",
        "                        ) alarmType ON abs.alarmtypename \u003d alarmType.alarmtypename",
        "                        INNER JOIN t_mauth_dept tm ON abs.deptId \u003d tm.lineDeptId     \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                // 为显示  每月数据",
        "                $fixed .\u003d \"inner JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "                (SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c)d ON  b.stat_date\u003dd.month\";",
        "                break;",
        "        }",
        "        // 如果用户等级不是 顶级 则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027   $motorCondtion \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id $motorCondtion \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "            $records \u003d DB::select($sql);",
        "",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "",
        "            if (isset($arrtime)) {",
        "",
        "                $arr3[0] \u003d $arrtime;",
        "                $arr3[1] \u003d array_map(function () {",
        "                    return 0;",
        "                }, $arrtime);",
        "                $temp \u003d [];",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $temp[$val] \u003d $key;",
        "                }",
        "",
        "                foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                    $data \u003d $arr1[1][$key];",
        "                    $arr3[1][$temp[$value]] \u003d $data;",
        "                }",
        "                $arr1 \u003d $arr3;",
        "            }",
        "",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 $motorCondtion \";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "        $records \u003d DB::select($sql);",
        "",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        $cnt \u003d count($records);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "",
        "        if (isset($arrtime)) {",
        "            $arr3[0] \u003d $arrtime;",
        "            $arr3[1] \u003d array_map(function () {",
        "                return 0;",
        "            }, $arrtime);",
        "            $temp \u003d [];",
        "            foreach ($arrtime as $key \u003d\u003e $val) {",
        "                $temp[$val] \u003d $key;",
        "            }",
        "",
        "            foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                $data \u003d $arr1[1][$key];",
        "                $arr3[1][$temp[$value]] \u003d $data;",
        "            }",
        "            $arr1 \u003d $arr3;",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getCarAlarmTrends",
        "     * @name: 车辆故障趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: breaktype,description:故障类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getCarAlarmTrends(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5\u0027, // 时间类型",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "        $ret \u003d $this-\u003egetRecordsCarAlarmTrends($this-\u003eparams);",
        "        if (empty($ret)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $ret);",
        "        };",
        "        $timeType \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        $time \u003d $this-\u003egetTimeFunction($timeType);",
        "        switch ($timeType) {",
        "            case 1:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 8, 2);",
        "                }",
        "                break;",
        "            case 2:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 8, 2);",
        "                }",
        "                break;",
        "            case 3:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 8, 2);",
        "                }",
        "                break;",
        "            case 4:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 5, 2);",
        "                }",
        "                break;",
        "            case 5:",
        "                foreach ($time as $key \u003d\u003e $val) {",
        "                    $time[$key] \u003d substr($val, 5, 2);",
        "                }",
        "                break;",
        "        }",
        "        foreach ($ret as $key \u003d\u003e $val) {",
        "            $ret[\"$key\"][\u0027time\u0027] \u003d $time;",
        "        }",
        "        for ($cnt \u003d count($ret); $cnt \u003c 5; $cnt++) {",
        "            $ret[$cnt] \u003d [\u0027name\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027data\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027time\u0027 \u003d\u003e \u0027\u0027",
        "            ];",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    public function getRecordsCarAlarmTrends($data)",
        "    {",
        "",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($data[\u0027depttype\u0027])) {",
        "            $depttype \u003d $data[\u0027depttype\u0027];",
        "        };",
        "        $deptid \u003d $data[\u0027deptid\u0027];",
        "        //设备号转车牌号",
        "        if (\"deviceId\" \u003d\u003d $depttype) {",
        "            $depttype \u003d \"vehicleNo\";",
        "            $vehicleInfo \u003d DB::table(\"t_vehicleinfo\")",
        "                -\u003ewhere(\"deviceId\", $deptid)",
        "                -\u003eselect(\"vehicleNo\")-\u003efirst();",
        "            if ($vehicleInfo !\u003d null) {",
        "                $deptid \u003d $vehicleInfo-\u003evehicleNo;",
        "            } else {",
        "                $deptid \u003d \"\";",
        "            }",
        "        }",
        "",
        "        $breaktype \u003d \u0027%\u0027;",
        "        if (!empty($data[\u0027breaktype\u0027])) {",
        "            $breaktype \u003d $data[\u0027breaktype\u0027];",
        "        };",
        "",
        "        $timeType \u003d $data[\u0027timeType\u0027];",
        "",
        "        DB::statement(DB::raw(\"SET @@GROUP_CONCAT_MAX_LEN \u003d 1024000;\"));",
        "        if ($depttype \u003d\u003d \"vehicleNo\") {",
        "            DB::statement(DB::raw(\"CALL  p_api_breakdownstrend_fortype_plus($timeType,\u0027$deptid\u0027,\u0027$depttype\u0027,\u0027$breaktype\u0027,@r);\"));",
        "        } else {",
        "            DB::statement(DB::raw(\"CALL  p_api_breakdownstrend_fortype($timeType,\u0027$deptid\u0027,\u0027$depttype\u0027,\u0027$breaktype\u0027,@r);\"));",
        "        }",
        "        $ret \u003d DB::select(\"select @r as data\");",
        "        // dd($ret);",
        "",
        "        return json_decode(($ret[0]-\u003edata), TRUE);",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmAlarmTrends",
        "     * @name: 大类故障趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: breaktype,description:故障类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmAlarmTrends(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5\u0027, // 时间类型",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d $this-\u003egetRecordsAlarmAlarmTrends($this-\u003eparams);",
        "        if (empty($ret)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $ret);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    public function getRecordsAlarmAlarmTrends($data)",
        "    {",
        "",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($data[\u0027depttype\u0027])) {",
        "            $depttype \u003d $data[\u0027depttype\u0027];",
        "        };",
        "        $deptid \u003d $data[\u0027deptid\u0027];",
        "        //防止传入设备号转车牌号",
        "        if (\"deviceId\" \u003d\u003d $depttype) {",
        "            $depttype \u003d \"vehicleNo\";",
        "            $vehicleInfo \u003d DB::table(\"t_vehicleinfo\")",
        "                -\u003ewhere(\"deviceId\", $deptid)",
        "                -\u003eselect(\"vehicleNo\")-\u003efirst();",
        "            if ($vehicleInfo !\u003d null) {",
        "                $deptid \u003d $vehicleInfo-\u003evehicleNo;",
        "            } else {",
        "                $deptid \u003d \"\";",
        "            }",
        "        }",
        "        //大系统分类",
        "        $breaktype \u003d \u0027%\u0027;",
        "        if (!empty($data[\u0027breaktype\u0027])) {",
        "            $breaktype \u003d $data[\u0027breaktype\u0027];",
        "        };",
        "        $timeType \u003d $data[\u0027timeType\u0027];",
        "        $startEndTimeInfo \u003d $this-\u003egetStartEndTimeByTimeType($timeType, true);",
        "        $tableStr \u003d \"api_breakdowns\";",
        "        switch ($startEndTimeInfo[3]) {",
        "            case 0:",
        "                $tableStr \u003d \"api_breakdowns_hour\";",
        "                break;",
        "            case 1:",
        "                break;",
        "            case 2:",
        "                $tableStr \u003d \"api_breakdowns_month\";",
        "                break;",
        "            default:",
        "                break;",
        "        }",
        "",
        "        $countSql \u003d \"SELECT alarm.type AS tname, SUM(total) AS cnt, stat_date",
        "                    FROM $tableStr abh INNER JOIN t_mauth_dept tm  ON abh.deptId \u003d tm.lineDeptId",
        "                        INNER JOIN v_all_alarmtype alarm ON abh.alarmtypename \u003d alarm.`alarmtypename` AND alarm.parenttype LIKE \u0027$breaktype\u0027",
        "                    WHERE stat_date \u003e\u003d  \u0027$startEndTimeInfo[0]\u0027 AND stat_date \u003c  \u0027$startEndTimeInfo[1]\u0027 AND  $depttype\u003d\u0027$deptid\u0027",
        "                    GROUP BY alarm.type, abh.stat_date \";",
        "",
        "        $dbResult \u003d DB::select($countSql);",
        "        //格式：辽XXXX\u003d\u003e[0,0,0,01,.......]",
        "        $returnStr \u003d array();",
        "        foreach ($dbResult as $item) {",
        "            if (!isset($returnStr[$item-\u003etname])) {",
        "                $returnStr[$item-\u003etname] \u003d $startEndTimeInfo[2];",
        "            }",
        "            $returnStr[$item-\u003etname][$item-\u003estat_date] \u003d intval($item-\u003ecnt);",
        "        }",
        "",
        "        //返回数据结构整理",
        "        $returnStrArray \u003d array();",
        "        foreach ($returnStr as $key \u003d\u003e $value) {",
        "            $valueInfo \u003d new \\stdClass();",
        "            $valueInfo-\u003ename \u003d $key;",
        "            $valueInfo-\u003edata \u003d array_values($value);",
        "            array_push($returnStrArray, $valueInfo);",
        "        }",
        "        return $returnStrArray;",
        "    }",
        "",
        "// 遗留故障",
        "    public function getAlarmLeft(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        // 需要改回",
        "        //  $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \"SELECT    @r:\u003d@r+1 AS rank,a.* FROM",
        "(      SELECT vehicleNo,   ",
        "\tCOUNT(1) AS `all`,  ",
        "\tSUM((CASE `b`.`alarmLevel` WHEN 1 THEN 1 ELSE 0 END)) AS `serious`,",
        "\tSUM((CASE WHEN `b`.`alarmLevel` \u003c\u003e 1 THEN 1 ELSE 0 END)) AS `ordinary` ",
        "\tFROM(",
        "\tSELECT * FROM t_alarmsummary ",
        "\tWHERE  \";",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" alarmstarttime\u003e CURRENT_DATE()-interval 1 day  and alarmstarttime\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003d CURRENT_DATE()-interval 8 day and alarmstarttime\u003c CURRENT_DATE()\";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and alarmstarttime\u003c CURRENT_DATE()\";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and alarmstarttime\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and alarmstarttime\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                alarmstarttime\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "",
        "                break;",
        "",
        "        }",
        "",
        "        //    $sql.\u003d$dataconditon;",
        "",
        "        if ($deptlevel !\u003d null) {",
        "",
        "            $dataconditon .\u003d \" and $deptlevel\u003d$id \";",
        "",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "",
        "                $dataconditon .\u003d \" and $depttype \u003d \u0027$deptid\u0027 \";",
        "            };",
        "            // not exists ： 删除 获得各种结束的报警 的 最晚时间及对应 车牌号，目标数据的时间范围应该比之要晚",
        "            $conditonbetween \u003d \"AND vehicleNo IS NOT NULL AND",
        "\t NOT EXISTS( SELECT * FROM (SELECT MAX(alarmstarttime) AS ma,alarmType,vehicleNo ",
        "\t\tFROM t_alarmsummary ",
        "\t\tWHERE\";",
        "",
        "            $sqlall \u003d $sql . $dataconditon . $conditonbetween . $dataconditon;",
        "",
        "            $sqlall .\u003d \" AND vehicleNO IS NOT NULL AND alarmLevel\u003d11111111 ",
        "\t\tGROUP BY vehicleNo, alarmType)a  ",
        "\t\tWHERE t_alarmsummary.alarmstarttime\u003cma ",
        "\t\tAND t_alarmsummary.`alarmType`\u003da.alarmType ",
        "\t\tAND t_alarmsummary.vehicleNo\u003da.vehicleNo)    ",
        "\t  GROUP BY alarmType,vehicleNo) b GROUP BY vehicleNo )a  ",
        "        INNER JOIN (SELECT @r:\u003d0) c ORDER BY `all` DESC limit 5\";",
        "",
        "",
        "            $records \u003d DB::select($sqlall);",
        "",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        };",
        "",
        "",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "",
        "            $dataconditon .\u003d \" and $depttype \u003d \u0027$deptid\u0027 \";",
        "        };",
        "        //// not exists ： 删除 获得各种结束的报警 的 最晚时间及对应 车牌号，目标数据的时间范围应该比之要晚",
        "        $conditonbetween \u003d \"AND vehicleNo IS NOT NULL AND",
        "\t NOT EXISTS( SELECT * FROM (SELECT MAX(alarmstarttime) AS ma,alarmType,vehicleNo ",
        "\t\tFROM t_alarmsummary ",
        "\t\tWHERE\";",
        "",
        "        $sqlall \u003d $sql . $dataconditon . $conditonbetween . $dataconditon;",
        "",
        "        $sqlall .\u003d \" AND vehicleNO IS NOT NULL AND alarmLevel\u003d11111111 ",
        "\t\tGROUP BY vehicleNo, alarmType)a  ",
        "\t\tWHERE t_alarmsummary.alarmstarttime\u003cma ",
        "\t\tAND t_alarmsummary.`alarmType`\u003da.alarmType ",
        "\t\tAND t_alarmsummary.vehicleNo\u003da.vehicleNo)    ",
        "\t  GROUP BY alarmType,vehicleNo) b GROUP BY vehicleNo )a  ",
        "        INNER JOIN (SELECT @r:\u003d0) c ORDER BY `all` DESC limit 5\";",
        "",
        "        $records \u003d DB::select($sqlall);",
        "",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmToday",
        "     * @name: 待修故障",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: count,description:行数",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmToDay(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        // 需要改回",
        "        //  $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \"SELECT @r:\u003d@r+1 AS rank,a.* FROM(      ",
        "                   SELECT vehicleNo,",
        "                          COUNT(1) AS `all`,",
        "                          SUM((CASE WHEN `b`.`alarmLevel`\u003d1 OR c.alarmlevel\u003d1 THEN 1 ELSE 0 END)) AS `serious`,",
        "                          SUM((CASE WHEN `b`.`alarmLevel`\u003d1 OR c.alarmlevel\u003d1 THEN 0 ELSE 1 END)) AS `ordinary`",
        "\t               FROM(  SELECT * FROM t_alarmsummary_unfinished WHERE  \";",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $dataconditon \u003d \"\";",
        "        $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" alarmstarttime\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003d CURRENT_DATE()-interval 7 day and alarmstarttime\u003c CURRENT_DATE()\";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and alarmstarttime\u003c CURRENT_DATE()\";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and alarmstarttime\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and alarmstarttime\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" alarmstarttime\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                alarmstarttime\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "        }",
        "",
        "        //    $sql.\u003d$dataconditon;",
        "",
        "        if ($deptlevel !\u003d null) {",
        "",
        "            $dataconditon .\u003d \" and $deptlevel\u003d$id \";",
        "",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "",
        "                $dataconditon .\u003d \" and $depttype \u003d \u0027$deptid\u0027 \";",
        "            };",
        "            // not exists ： 删除 获得各种结束的报警 的 最晚时间及对应 车牌号，目标数据的时间范围应该比之要晚",
        "            $conditonbetween \u003d \"AND vehicleNo IS NOT NULL  \";",
        "",
        "            $sqlall \u003d $sql . $dataconditon . $conditonbetween;",
        "",
        "            $sqlall .\u003d \" GROUP BY alarmType,vehicleNo) b LEFT JOIN (",
        "                          SELECT alarmtypeNAme,alarmLevel FROM v_alarmlevelandname_line WHERE deptid\u003d$id) c ON b.alarmTYpe\u003dc.alarmtypename GROUP BY vehicleNo )a  ",
        "                        INNER JOIN (SELECT @r:\u003d0) c ORDER BY `all` DESC limit 5\";",
        "            $records \u003d DB::select($sqlall);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        };",
        "",
        "",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "",
        "            $dataconditon .\u003d \" and $depttype \u003d \u0027$deptid\u0027 \";",
        "        };",
        "        // not exists ： 删除 获得各种结束的报警 的 最晚时间及对应 车牌号，目标数据的时间范围应该比之要晚",
        "        $conditonbetween \u003d \"AND vehicleNo IS NOT NULL  \";",
        "",
        "        $sqlall \u003d $sql . $dataconditon . $conditonbetween;",
        "        $deptidLevel \u003d isset($deptid) ? $deptid : -1;",
        "",
        "        $sqlall .\u003d \" GROUP BY alarmType,vehicleNo) b LEFT JOIN (",
        "\t                 SELECT alarmtypeNAme,alarmLevel FROM v_alarmlevelandname_line WHERE deptid\u003d$deptidLevel) c ON b.alarmTYpe\u003dc.alarmtypename  GROUP BY vehicleNo )a  ",
        "                     INNER JOIN (SELECT @r:\u003d0) c ORDER BY `all` DESC limit 5\";",
        "        $records \u003d DB::select($sqlall);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getEnergyCount",
        "     * @name: 能耗获取",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getEnergyCount(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 建立目标返回数组",
        "        $rets \u003d [",
        "            \u0027accruedMiles\u0027 \u003d\u003e 0,   // 里程",
        "            \u0027runTime\u0027 \u003d\u003e 0,        // 运行时长",
        "            \u0027hundredElec\u0027 \u003d\u003e 0,    // 平均 百电耗",
        "            \u0027hundredGas\u0027 \u003d\u003e 0,",
        "            \u0027hundredFule\u0027 \u003d\u003e 0,",
        "        ];",
        "        $beforerets \u003d $rets;",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        // sql 头部,备注 t_mauth_dept来自mauth_dept",
        "        $sqlmiles \u003d \"  SELECT IFNULL(SUM(miles),0) AS cnt FROM api_energe aep INNER JOIN t_mauth_dept tm ON aep.deptId \u003d tm.lineDeptId \";",
        "        $runtime \u003d \"SELECT round(ifnull(SUM(runtime)/3600,0),2) as cnt FROM  `stat_energy_saving_summary_day` ses inner join t_mauth_dept tm ON ses.deptid \u003d tm.lineDeptId  \";",
        "        $energy \u003d \"SELECT IFNULL(SUM(ele)*100/SUM(miles),0) AS elec,IFNULL(SUM(gas)*100/SUM(miles),0) AS gas ,IFNULL(SUM(oil)*100/SUM(miles),0) AS fule ",
        "                      FROM api_energe aep INNER JOIN t_mauth_dept tm ON aep.deptId \u003d tm.lineDeptId \";",
        "        $carcnt \u003d \"select count(1) as carcnt FROM api_energe aep INNER JOIN t_mauth_dept tm ON aep.deptId \u003d tm.lineDeptId \";",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                $timeconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 2 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 14 day and stat_date\u003c CURRENT_DATE()-interval 7 day\";",
        "",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 2 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day- interval 1 month\";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 2 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year\";",
        "                break;",
        "",
        "        }",
        "        // 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id   \";",
        "            };",
        "        } else {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where  $depttype \u003d $deptid \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where 1\u003d1 \";",
        "            };",
        "        }",
        "",
        "        $sqlmiles .\u003d $fixedCondtion . \" and \" . $dataconditon . \" union all \" . $sqlmiles . $fixedCondtion . \" and \" . $timeconditon;",
        "        $runtime .\u003d $fixedCondtion . \" and \" . $dataconditon . \" union all \" . $runtime . $fixedCondtion . \" and \" . $timeconditon;",
        "        $energy .\u003d $fixedCondtion . \" and \" . $dataconditon . \" union all \" . $energy . $fixedCondtion . \" and \" . $timeconditon;",
        "        $carcnt .\u003d $fixedCondtion . \"and \" . $dataconditon . \" union all \" . $carcnt . $fixedCondtion . \" and \" . $timeconditon;",
        "        $carlen \u003d DB::select($carcnt);",
        "        $energyArray \u003d DB::select($energy);",
        "        $sqlmilesdata \u003d DB::select($sqlmiles);",
        "        $runtimedata \u003d DB::select($runtime);",
        "        $car \u003d 1;",
        "",
        "        //本期",
        "        if ($carlen[0]-\u003ecarcnt \u003e 0) {",
        "            $car \u003d $carlen[0]-\u003ecarcnt;",
        "        }",
        "        if (count($sqlmilesdata) \u003e 0 \u0026\u0026 count($runtimedata) \u003e 0 \u0026\u0026 count($energyArray) \u003e 0) {",
        "            $rets[\u0027accruedMiles\u0027] \u003d $sqlmilesdata[0]-\u003ecnt;",
        "            $rets[\u0027runTime\u0027] \u003d $runtimedata[0]-\u003ecnt;",
        "            $rets[\u0027hundredElec\u0027] \u003d round($energyArray[0]-\u003eelec / $car, 2);",
        "            $rets[\u0027hundredGas\u0027] \u003d round($energyArray[0]-\u003egas / $car, 2);",
        "            $rets[\u0027hundredFule\u0027] \u003d round($energyArray[0]-\u003efule / $car, 2);",
        "        }",
        "        //上期",
        "        if (count($carlen) \u003d\u003d 2 \u0026\u0026 $carlen[1]-\u003ecarcnt \u003e 0) {",
        "            $car \u003d $carlen[1]-\u003ecarcnt;",
        "        }",
        "        if (count($sqlmilesdata) \u003d\u003d 2 \u0026\u0026 count($runtimedata) \u003d\u003d 2 \u0026\u0026 count($energyArray) \u003d\u003d 2) {",
        "            $beforerets[\u0027accruedMiles\u0027] \u003d $sqlmilesdata[1]-\u003ecnt;",
        "            $beforerets[\u0027runTime\u0027] \u003d $runtimedata[1]-\u003ecnt;",
        "            $beforerets[\u0027hundredElec\u0027] \u003d round($energyArray[1]-\u003eelec / $car, 2);",
        "            $beforerets[\u0027hundredGas\u0027] \u003d round($energyArray[1]-\u003egas / $car, 2);",
        "            $beforerets[\u0027hundredFule\u0027] \u003d round($energyArray[1]-\u003efule / $car, 2);",
        "        }",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $rets, $beforerets);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getEnergyCountInDetail",
        "     * @name: 能耗获取",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getEnergyCountInDetail(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 非首页",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //   $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "// 建立目标返回数组",
        "        $rets \u003d [",
        "            \u0027sumEnergy\u0027 \u003d\u003e 0,  //总能耗",
        "            \u0027hundredEnergy\u0027 \u003d\u003e 0,  // 百公里能耗",
        "            \u0027accruedMiles\u0027 \u003d\u003e 0,    // 里程",
        "            \u0027runTime\u0027 \u003d\u003e 0,        // 运行时长",
        "            \u0027hundredElec\u0027 \u003d\u003e 0,         // 电耗",
        "            \u0027hundredGas\u0027 \u003d\u003e 0,",
        "            \u0027hundredFule\u0027 \u003d\u003e 0,",
        "        ];",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        $id \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"c.companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"c.subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"c.groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"c.lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 车辆类型",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \"\";",
        "        } else {",
        "            $motorCondtion \u003d \" and b.motorType\u003d$motorType \";",
        "        };",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        $rets \u003d $this-\u003equeryEnergyCountInDetail($deptlevel, $id, $deptid, $depttype, $datatype, $motorCondtion);",
        "        $beforerets \u003d $this-\u003equeryEnergyCountInDetail($deptlevel, $id, $deptid, $depttype, $datatype + 6, $motorCondtion);",
        "",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $rets, $beforerets);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getHundredEnergy",
        "     * @name: 百公里能耗",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getHundredEnergy(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            //     \u0027depttype\u0027 , // 机构类型",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "            \u0027motorType\u0027 \u003d\u003e \u0027required\u0027, // 车俩类型",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5\u0027, // 时间类型",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d $this-\u003egetRecordsHundredEnergy($this-\u003eparams);",
        "",
        "        if (empty($ret)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $ret);",
        "        };",
        "// 去除多余 时间点为0的能耗数据",
        "",
        "        $motorType \u003d isset($this-\u003eparams[\u0027motorType\u0027]) ? $this-\u003eparams[\u0027motorType\u0027] : null;",
        "        /*switch ($motorType) {",
        "            // 0 -ele 1-gas 2-oil",
        "            case 1:",
        "                $ret[0][\u0027data\u0027] \u003d [];",
        "                $ret[0][\u0027time\u0027] \u003d [];",
        "                $ret[1][\u0027data\u0027] \u003d [];",
        "                $ret[1][\u0027time\u0027] \u003d [];",
        "                break;",
        "            case 2:",
        "                $ret[1][\u0027data\u0027] \u003d [];",
        "                $ret[1][\u0027time\u0027] \u003d [];",
        "                $ret[2][\u0027data\u0027] \u003d [];",
        "                $ret[2][\u0027time\u0027] \u003d [];",
        "                break;",
        "            case 3:",
        "                $ret[1][\u0027data\u0027] \u003d [];",
        "                $ret[1][\u0027time\u0027] \u003d [];",
        "                break;",
        "            case 4:",
        "                $ret[0][\u0027data\u0027] \u003d [];",
        "                $ret[0][\u0027time\u0027] \u003d [];",
        "                $ret[2][\u0027data\u0027] \u003d [];",
        "                $ret[2][\u0027time\u0027] \u003d [];",
        "                break;",
        "            case 5:",
        "                $ret[2][\u0027data\u0027] \u003d [];",
        "                $ret[2][\u0027time\u0027] \u003d [];",
        "                break;",
        "        }*/",
        "",
        "",
        "//unset ($ret[2][\u0027data\u0027][24]);",
        "//dd ($ret[2][\u0027time\u0027]);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "    }",
        "",
        "    public function getRecordsHundredEnergy($data)",
        "    {",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($data[\u0027depttype\u0027])) {",
        "            $depttype \u003d $data[\u0027depttype\u0027];",
        "        };",
        "        $deptid \u003d $data[\u0027deptid\u0027];",
        "        $timeType \u003d $data[\u0027timeType\u0027];",
        "        $motorType \u003d $data[\u0027motorType\u0027];",
        "        if ($motorType \u003d\u003d 10) {",
        "            DB::statement(DB::raw(\"SET @@GROUP_CONCAT_MAX_LEN \u003d 1024000;\"));",
        "            DB::statement(DB::raw(\"CALL  p_api_energyrank_nomotortype($timeType,\u0027$deptid\u0027,\u0027$depttype\u0027,@r);\"));",
        "        } else {",
        "            DB::statement(DB::raw(\"SET @@GROUP_CONCAT_MAX_LEN \u003d 1024000;\"));",
        "            DB::statement(DB::raw(\"CALL  p_api_energyrank($timeType,\u0027$deptid\u0027,\u0027$depttype\u0027,$motorType,@r);\"));",
        "        }",
        "",
        "        $ret \u003d DB::select(\"select @r as data\");",
        "",
        "",
        "        return json_decode(($ret[0]-\u003edata), TRUE);",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getOilRank",
        "     * @name: 油耗排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:条数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getOilRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromOilRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_oilrank\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "        $motorType \u003d isset($this-\u003eparams[\u0027motorType\u0027]) ? $this-\u003eparams[\u0027motorType\u0027] : null;",
        "        if ($motorType \u003d\u003d 2 || $motorType \u003d\u003d 4 || $motorType \u003d\u003d 5) {",
        "            $records[\u0027body\u0027] \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e 1,",
        "                \u0027from\u0027 \u003d\u003e 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e 5,",
        "                \u0027to\u0027 \u003d\u003e 5,",
        "                \u0027total\u0027 \u003d\u003e 0,",
        "                \u0027last_page\u0027 \u003d\u003e 1,",
        "                \u0027data\u0027 \u003d\u003e []",
        "            ];",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromOilRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "",
        "        $motorType \u003d isset($params[\u0027motorType\u0027]) ? $params[\u0027motorType\u0027] : null;",
        "",
        "",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \" $motorType \";",
        "        } else {",
        "            $motorCondtion \u003d \" and b.motortype\u003d $motorType \";",
        "        };",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "        //       $sql \u003d \" FROM (",
        "//SELECT @r:\u003d@r+1 AS rank,d.* FROM",
        "//(SELECT c.lineName,a.vehicleNo,a.oil as hundredOil  FROM (SELECT deptid, vehicleNo,   ROUND(IFNULL(SUM(oil)*100/SUM(miles),0),2) AS oil  FROM api_energe WHERE",
        "//vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b",
        "//INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "",
        "        $sql \u003d \"FROM",
        "                \t(",
        "                \t\tSELECT",
        "                \t\t\t@r :\u003d@r + 1 AS rank,",
        "                \t\t\td.*",
        "                \t\tFROM",
        "                \t\t\t(",
        "                \t\t\t\tSELECT",
        "                \t\t\t\t\tc.lineName,",
        "                \t\t\t\t\ta.vehicleNo,",
        "                \t\t\t\t\ta.oil AS hundredOil",
        "                \t\t\t\tFROM",
        "                \t\t\t\t\t(",
        "                \t\t\t\t\t\tSELECT",
        "                \t\t\t\t\t\t\tf.deptid,",
        "                \t\t\t\t\t\t\tf.vehicleNo,",
        "                \t\t\t\t\t\t\tROUND(",
        "                \t\t\t\t\t\t\t\tIFNULL(",
        "                \t\t\t\t\t\t\t\t\tSUM(f.oil) * 100 / SUM(f.miles),",
        "                \t\t\t\t\t\t\t\t\t0",
        "                \t\t\t\t\t\t\t\t),",
        "                \t\t\t\t\t\t\t\t2",
        "                \t\t\t\t\t\t\t) AS oil",
        "                \t\t\t\t\t\tFROM",
        "                \t\t\t\t\t\t\tapi_energe f,",
        "                \t\t\t\t\t\t\tt_vehicleinfo b,",
        "                \t\t\t\t\t\t\tt_mauth_dept c",
        "                \t\t\t\t\t\tWHERE",
        "                \t\t\t\t\t\t\tf.vehicleNo \u003d b.vehicleNo",
        "                \t\t\t\t\t\tAND b.deptId \u003d c.lineDeptId\";",
        "",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"c.companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"c.subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"c.groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"c.lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" f.stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and",
        "               f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "        }",
        "        $fixedcondition \u003d \" GROUP BY f.vehicleNo  ) a",
        "INNER JOIN t_mauth_dept c ON a.deptid\u003dc.lineDeptId ORDER BY a.oil DESC) d INNER JOIN (SELECT @r:\u003d0) b) m \";",
        "",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \"  and $deptlevel\u003d$id and c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "            } else {",
        "                $sql .\u003d \" and $deptlevel\u003d$id $motorCondtion \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" and  c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "        } else {",
        "            $sql .\u003d \" and 1\u003d1 $motorCondtion \";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getEleRank",
        "     * @name: 电耗排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getEleRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromEleRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_elerank\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "        $motorType \u003d isset($this-\u003eparams[\u0027motorType\u0027]) ? $this-\u003eparams[\u0027motorType\u0027] : null;",
        "        if ($motorType \u003d\u003d 1 || $motorType \u003d\u003d 4) {",
        "            $records[\u0027body\u0027] \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e 1,",
        "                \u0027from\u0027 \u003d\u003e 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e 5,",
        "                \u0027to\u0027 \u003d\u003e 5,",
        "                \u0027total\u0027 \u003d\u003e 0,",
        "                \u0027last_page\u0027 \u003d\u003e 1,",
        "                \u0027data\u0027 \u003d\u003e []",
        "            ];",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromEleRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "        $motorType \u003d isset($params[\u0027motorType\u0027]) ? $params[\u0027motorType\u0027] : null;",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \" $motorType \";",
        "        } else {",
        "            $motorCondtion \u003d \" and b.motortype\u003d $motorType \";",
        "        };",
        "",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "        //       $sql \u003d \" FROM (",
        "//SELECT @r:\u003d@r+1 AS rank,d.* FROM",
        "//(SELECT c.lineName,a.vehicleNo,a.ele as hundredElec FROM (SELECT deptid, vehicleNo,   ROUND(IFNULL(SUM(ele)*100/SUM(miles),0),2) AS ele  FROM api_energe WHERE",
        "//vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b",
        "//INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "        $sql \u003d \"FROM ( SELECT @r :\u003d@r + 1 AS rank, d.* FROM (",
        "              \t\t\t\tSELECT c.lineName, a.vehicleNo, a.ele AS hundredElec FROM (",
        "              \t\t\t\t\t\tSELECT f.deptid, f.vehicleNo, ROUND( IFNULL( SUM(f.ele) * 100 / SUM(f.miles), 0 ), 2 ) AS ele",
        "              \t\t\t\t\t\tFROM",
        "              \t\t\t\t\t\t\tapi_energe f,",
        "              \t\t\t\t\t\t\tt_vehicleinfo b,",
        "              \t\t\t\t\t\t\tt_mauth_dept c",
        "              \t\t\t\t\t\tWHERE",
        "              \t\t\t\t\t\t\tf.vehicleNo \u003d b.vehicleNo",
        "              \t\t\t\t\t\tAND f.deptId \u003d c.lineDeptId\";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"c.companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"c.subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"c.groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"c.lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" f.stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and",
        "                f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "        }",
        "        $fixedcondition \u003d \" GROUP BY f.vehicleNo  ) a",
        "INNER JOIN t_mauth_dept c ON a.deptid\u003dc.lineDeptId ORDER BY a.ele DESC) d INNER JOIN (SELECT @r:\u003d0) b) m \";",
        "        /* $fixedcondition \u003d \"  ) a",
        "        INNER JOIN t_mauth_dept c ON a.deptid\u003dc.lineDeptId ORDER BY a.ele DESC) d INNER JOIN (SELECT @r:\u003d0) b) m \";*/",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" and $deptlevel\u003d$id and c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "            } else {",
        "                $sql .\u003d \" and $deptlevel\u003d$id $motorCondtion \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" and  c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "        } else {",
        "            $sql .\u003d \" and 1\u003d1 $motorCondtion\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getGasRank",
        "     * @name: 气耗排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getGasRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromGasRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_gasrank\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "        $motorType \u003d isset($this-\u003eparams[\u0027motorType\u0027]) ? $this-\u003eparams[\u0027motorType\u0027] : null;",
        "        if ($motorType \u003d\u003d 1 || $motorType \u003d\u003d 2 || $motorType \u003d\u003d 3) {",
        "            $records[\u0027body\u0027] \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e 1,",
        "                \u0027from\u0027 \u003d\u003e 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e 5,",
        "                \u0027to\u0027 \u003d\u003e 5,",
        "                \u0027total\u0027 \u003d\u003e 0,",
        "                \u0027last_page\u0027 \u003d\u003e 1,",
        "                \u0027data\u0027 \u003d\u003e []",
        "            ];",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromGasRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "        $motorType \u003d isset($params[\u0027motorType\u0027]) ? $params[\u0027motorType\u0027] : null;",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \" $motorType \";",
        "        } else {",
        "            $motorCondtion \u003d \" and b.motortype\u003d $motorType \";",
        "        };",
        "",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "        //       $sql \u003d \" FROM (",
        "//SELECT @r:\u003d@r+1 AS rank,d.* FROM",
        "//(SELECT c.lineName,a.vehicleNo,a.gas as hundredGas FROM (SELECT deptid, vehicleNo,   ROUND(IFNULL(SUM(gas)*100/SUM(miles),0),2) AS gas  FROM api_energe WHERE",
        "//vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b",
        "//INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "        $sql \u003d \"FROM",
        "              \t(",
        "              \t\tSELECT",
        "              \t\t\t@r :\u003d@r + 1 AS rank,",
        "              \t\t\td.*",
        "              \t\tFROM",
        "              \t\t\t(",
        "              \t\t\t\tSELECT",
        "              \t\t\t\t\tc.lineName,",
        "              \t\t\t\t\ta.vehicleNo,",
        "              \t\t\t\t\ta.gas AS hundredGas",
        "              \t\t\t\tFROM",
        "              \t\t\t\t\t(",
        "              \t\t\t\t\t\tSELECT",
        "              \t\t\t\t\t\t\tf.deptid,",
        "              \t\t\t\t\t\t\tf.vehicleNo,",
        "              \t\t\t\t\t\t\tROUND(",
        "              \t\t\t\t\t\t\t\tIFNULL(SUM(f.gas) * 100 / SUM(f.miles), 0),",
        "              \t\t\t\t\t\t\t\t2",
        "              \t\t\t\t\t\t\t) AS gas",
        "              \t\t\t\t\t\tFROM",
        "              \t\t\t\t\t\t\tapi_energe f,t_vehicleinfo b,t_mauth_dept c",
        "              \t\t\t\t\t\tWHERE",
        "              \t\t\t\t\t\t\tf.vehicleNo \u003db.vehicleNo",
        "              \t\t\t\t\t\t\tand",
        "              \t\t\t\t\t\t\tb.deptId \u003d c.lineDeptId \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"c.companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"c.subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"c.groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"c.lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" f.stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and",
        "                f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "        }",
        "        $fixedcondition \u003d \" GROUP BY f.vehicleNo  ) a",
        "INNER JOIN t_mauth_dept c ON a.deptid\u003dc.lineDeptId ORDER BY a.gas DESC) d INNER JOIN (SELECT @r:\u003d0) b) m \";",
        "",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" and $deptlevel\u003d$id and c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "            } else {",
        "                $sql .\u003d \" and $deptlevel\u003d$id $motorCondtion \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" and  c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "        } else {",
        "            $sql .\u003d \" and 1\u003d1 $motorCondtion\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getMilesRank",
        "     * @name: 里程排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getMilesRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromMilesRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_milesrank\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromMilesRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "        $motorType \u003d isset($params[\u0027motorType\u0027]) ? $params[\u0027motorType\u0027] : null;",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \" $motorType \";",
        "        } else {",
        "            $motorCondtion \u003d \" and b.motortype\u003d $motorType \";",
        "        };",
        "",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "        //    $sql \u003d \" FROM (",
        "//SELECT @r:\u003d@r+1 AS rank,d.* FROM",
        "//(SELECT c.lineName,a.vehicleNo,a.miles FROM (SELECT deptid, vehicleNo,   sum(miles) AS miles  FROM api_energe WHERE",
        "//vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b",
        "//INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "        $sql \u003d \" FROM",
        "                \t(",
        "                \t\tSELECT",
        "                \t\t\t@r :\u003d@r + 1 AS rank,",
        "                \t\t\td.*",
        "                \t\tFROM",
        "                \t\t\t(",
        "                \t\t\t\tSELECT",
        "                \t\t\t\t\tc.lineName,",
        "                \t\t\t\t\ta.vehicleNo,",
        "                \t\t\t\t\ta.miles",
        "                \t\t\t\tFROM",
        "                \t\t\t\t\t(",
        "                \t\t\t\t\t\tSELECT",
        "                \t\t\t\t\t\t\tf.deptid,",
        "                \t\t\t\t\t\t\tf.vehicleNo,",
        "                \t\t\t\t\t\t\tsum(f.miles) AS miles",
        "                \t\t\t\t\t\tFROM",
        "                \t\t\t\t\t\t\tapi_energe f,",
        "                \t\t\t\t\t\t\tt_vehicleinfo b,",
        "                \t\t\t\t\t\t\tt_mauth_dept c",
        "                \t\t\t\t\t\tWHERE",
        "                \t\t\t\t\t\t\tf.vehicleNo \u003d b.vehicleNo",
        "                \t\t\t\t\t\t\tAND b.deptId \u003d c.lineDeptId\";",
        "        $deptlevel \u003d null;",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"c.companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"c.subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"c.groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"c.lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        //  $deptid\u003d$params[\u0027deptid\u0027];",
        "//        $depttype\u003d$params[\u0027depttype\u0027];",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" f.stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and f.stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" f.stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and",
        "                f.stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "",
        "        }",
        "        $fixedcondition \u003d \" GROUP BY f.vehicleNo  ) a",
        "INNER JOIN t_mauth_dept c ON a.deptid\u003dc.lineDeptId ORDER BY a.miles DESC) d INNER JOIN (SELECT @r:\u003d0) b) m \";",
        "",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "",
        "                //   $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 $motorCondtion) \";",
        "                $sql .\u003d \" and $deptlevel\u003d$id and c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "",
        "            } else {",
        "                // $sql .\u003d \" where $deptlevel\u003d$id $motorCondtion) \";",
        "                $sql .\u003d \" and $deptlevel\u003d$id $motorCondtion \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            //   dd($sql);",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" and  c.$depttype \u003d \u0027$deptid\u0027 $motorCondtion \";",
        "        } else {",
        "            $sql .\u003d \" and 1\u003d1 $motorCondtion\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getMilesTrend",
        "     * @name: 里程趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getMilesTrend(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //    $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // sql 头部",
        "//        $sql\u003d\"SELECT IFNULL(cnt,0) as cnt , date_format(stat_date,\u0027%d日\u0027) as stat_date FROM",
        "//",
        "// (",
        "//SELECT SUM(accruedmiles) AS cnt, stat_date FROM (",
        "//SELECT accruedmiles, stat_date AS stat_date FROM t_vehiclemiles WHERE vehicledeviceid IN( SELECT deviceid FROM t_vehicleinfo b",
        "//INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId    \";",
        "        /*    $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(stat_date,\u0027%d\u0027) AS stat_date FROM",
        "",
        "     (",
        "    SELECT SUM(miles) AS cnt, stat_date FROM (",
        "    SELECT miles, stat_date AS stat_date FROM api_energe WHERE vehicleNo IN( SELECT vehicleNo FROM t_vehicleinfo b",
        "    INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";*/",
        "",
        "        $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(stat_date,\u0027%d\u0027) AS stat_date FROM(",
        "SELECT SUM(miles) AS cnt, stat_date FROM (",
        "SELECT miles, stat_date AS stat_date FROM api_energe WHERE vehicleNo IN\";",
        "        $sql1 \u003d \"SELECT vehicleNo FROM t_vehicleinfo b INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId\";",
        "",
        "// 用作 limit, 只有在时间为今年的时候有",
        "        $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 车辆类型",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \"\";",
        "        } else {",
        "            $motorCondtion \u003d \" and motortype\u003d$motorType \";",
        "        };",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date) b    \";",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-1 day\", time()));",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "                $inttime \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day\", time()));",
        "                    $inttime--;",
        "                }",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d date(\u0027d\u0027);",
        "                $inttime \u003d intval($inttime) - 1;",
        "                $inttime2 \u003d $inttime;",
        "                for ($i \u003d 0; $i \u003c $inttime2; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day \", time()));",
        "                    $inttime--;",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(`month`,\u0027%m月\u0027) AS stat_date FROM",
        " (",
        "SELECT SUM(miles) AS cnt, stat_date FROM (",
        "SELECT miles, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM api_energe WHERE vehicleNo IN\";",
        "                $sql1 \u003d \"SELECT vehicleNo FROM t_vehicleinfo b INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                // 为显示 到当前月的 每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(`month`,\u0027%m月\u0027) AS stat_date FROM",
        " (",
        "SELECT SUM(miles) AS cnt, stat_date FROM (",
        "SELECT miles, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM api_energe WHERE vehicleNo IN\";",
        "                $sql1 \u003d \" SELECT vehicleNo FROM t_vehicleinfo b INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                // 为显示  每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c)d ON  b.stat_date\u003dd.month\";",
        "                break;",
        "        }",
        "",
        "// 如果用户等级不是 顶级 则",
        "        if ($deptlevel !\u003d null) {",
        "            /*   if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                   $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  $motorCondtion) \";",
        "               } else {",
        "                   $fixedCondtion \u003d \" where $deptlevel\u003d$id $motorCondtion) \";",
        "               };*/",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  $motorCondtion\";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id $motorCondtion \";",
        "            };",
        "",
        "            $sql1 \u003d $sql1 . $fixedCondtion;",
        "",
        "            $result \u003d DB::select($sql1);",
        "",
        "            if (empty($result)) {",
        "                if (empty($arrtime)) {",
        "                    for ($i \u003d 1; $i \u003c\u003d 12; $i++) {",
        "                        $arrtime[] \u003d $i . \u0027月\u0027;",
        "                    }",
        "                }",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $result[] \u003d 0;",
        "                }",
        "                $data[0] \u003d $arrtime;",
        "                $data[1] \u003d $result;",
        "                return $this-\u003esetJsonResponse(REPEAT, $data);",
        "            }",
        "            $str \u003d \u0027(\u0027;",
        "            foreach ($result as $k \u003d\u003e $v) {",
        "                $str .\u003d \"\u0027\" . $v-\u003evehicleNo . \"\u0027,\";",
        "            }",
        "            if (strlen($str) !\u003d 1) {",
        "                $str \u003d substr($str, 0, strlen($str) - 1);",
        "            }",
        "            $str .\u003d \")\";",
        "            $sql .\u003d $str . \" and \" . $dataconditon . $fixed;",
        "            // $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "            $records \u003d DB::select($sql);",
        "",
        "            if (empty($records)) {",
        "                if (empty($arrtime)) {",
        "                    for ($i \u003d 1; $i \u003c\u003d 12; $i++) {",
        "                        $arrtime[] \u003d $i . \u0027月\u0027;",
        "                    }",
        "                }",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $records[] \u003d 0;",
        "                }",
        "                $data[0] \u003d $arrtime;",
        "                $data[1] \u003d $records;",
        "                return $this-\u003esetJsonResponse(REPEAT, $data);",
        "            };",
        "",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            if (isset($arrtime)) {",
        "",
        "                $arr3[0] \u003d $arrtime;",
        "                $arr3[1] \u003d array_map(function () {",
        "                    return 0;",
        "                }, $arrtime);",
        "                $temp \u003d [];",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $temp[$val] \u003d $key;",
        "                }",
        "",
        "                foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                    $data \u003d $arr1[1][$key];",
        "                    $arr3[1][$temp[$value]] \u003d $data;",
        "                }",
        "                $arr1 \u003d $arr3;",
        "            }",
        "",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "",
        "",
        "        };",
        "        /*  if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "              $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 $motorCondtion) \";",
        "          } else {",
        "              $fixedCondtion \u003d \" where 1\u003d1 $motorCondtion)\";",
        "          };*/",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 $motorCondtion\";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 $motorCondtion\";",
        "        };",
        "        //",
        "        $sql1 \u003d $sql1 . $fixedCondtion;",
        "",
        "        $result \u003d DB::select($sql1);",
        "        if (empty($result)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $result);",
        "        };",
        "        $str \u003d \u0027(\u0027;",
        "        foreach ($result as $k \u003d\u003e $v) {",
        "            $str .\u003d \"\u0027\" . $v-\u003evehicleNo . \"\u0027,\";",
        "        }",
        "        if (strlen($str) !\u003d 1) {",
        "            $str \u003d substr($str, 0, strlen($str) - 1);",
        "        }",
        "        $str .\u003d \")\";",
        "        /* $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;*/",
        "        $sql .\u003d $str . \" and \" . $dataconditon . $fixed;",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "",
        "        $cnt \u003d count($records);",
        "        // dd($cnt);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "        }",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "        if (isset($arrtime)) {",
        "",
        "            $arr3[0] \u003d $arrtime;",
        "            $arr3[1] \u003d array_map(function () {",
        "                return 0;",
        "            }, $arrtime);",
        "            $temp \u003d [];",
        "            foreach ($arrtime as $key \u003d\u003e $val) {",
        "                $temp[$val] \u003d $key;",
        "            }",
        "",
        "            foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                $data \u003d $arr1[1][$key];",
        "                $arr3[1][$temp[$value]] \u003d $data;",
        "            }",
        "            $arr1 \u003d $arr3;",
        "        }",
        "        foreach ($arr1[1] as $key \u003d\u003e $value) {",
        "            // $arr1[1][$key] \u003dround($arr1[1][$key]/3600,2);",
        "            $arr1[1][$key] \u003d round($arr1[1][$key], 2);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "    }",
        "",
        "    // 里程趋势图",
        "    public function getMilesTrend2(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //   $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // sql 头部",
        "        $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(stat_date,\u0027%d日\u0027) AS stat_date FROM",
        "",
        " (",
        "SELECT SUM(miles) AS cnt, stat_date FROM (",
        "SELECT miles, stat_date AS stat_date FROM api_energe WHERE vehicleNo IN( SELECT vehicleNo FROM t_vehicleinfo b",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "",
        "// 用作 limit, 只有在时间为今年的时候有",
        "        $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 车辆类型",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \"\";",
        "        } else {",
        "            $motorCondtion \u003d \" and motortype\u003d$motorType \";",
        "        };",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date) b    \";",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "                // 关联表",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(`month`,\u0027%m月\u0027) AS stat_date FROM",
        " (",
        "SELECT SUM(miles) AS cnt, stat_date FROM (",
        "SELECT miles, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM api_energe WHERE vehicleNo IN( SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                // 为显示 到当前月的 每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(`month`,\u0027%m月\u0027) AS stat_date FROM",
        " (",
        "SELECT SUM(miles) AS cnt, stat_date FROM (",
        "SELECT miles, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM api_energe WHERE vehicleNo IN( SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                // 为显示  每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c)d ON  b.stat_date\u003dd.month\";",
        "                break;",
        "",
        "        }",
        "",
        "// 如果用户等级不是 顶级 则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  $motorCondtion) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id $motorCondtion) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "            $records \u003d DB::select($sql);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "            }",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 $motorCondtion) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 $motorCondtion)\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        $cnt \u003d count($records);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "        }",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getNotRunConditionOnTrend",
        "     * @name: 非运营空调开启",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getNotRunConditionOnTrend(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //  $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // sql 头部",
        "        $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(stat_date,\u0027%d\u0027) AS stat_date FROM",
        "(",
        "SELECT SUM(NotRunconditionTime) AS cnt, stat_date FROM (",
        "SELECT NotRunconditionTime, stat_date AS stat_date FROM stat_energy_saving_summary_day WHERE vehicleNo IN( SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";",
        "",
        "// 用作 limit, 只有在时间为今年的时候有",
        "        $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 车辆类型",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \"\";",
        "        } else {",
        "            $motorCondtion \u003d \" and motortype\u003d$motorType \";",
        "        };",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date) b    \";",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $sql \u003d \"SELECT SUM(total_seconds) AS cnt, stat_date FROM (",
        "SELECT total_seconds, DATE_FORMAT(begin_time,\u0027%H:00\u0027)  AS stat_date FROM `stat_energy_saving_detail` ",
        "WHERE `TYPE`\u003d\u0027NotRunconditionTime\u0027 AND ",
        " vehicledeviceid IN (SELECT deviceid FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                $fixed \u003d \") a GROUP BY stat_date ORDER BY stat_date \";",
        "                for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                    if ($i \u003e 9) {",
        "                        $arrtime[] \u003d date(\"$i:00\");",
        "                    } else {",
        "                        $arrtime[] \u003d date(\"0$i:00\");",
        "                    }",
        "",
        "                }",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day\", time()));",
        "                    $inttime--;",
        "                }",
        "                // 关联表",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d date(\u0027d\u0027);",
        "                $inttime \u003d intval($inttime) - 1;",
        "                $inttime2 \u003d $inttime;",
        "                for ($i \u003d 0; $i \u003c $inttime2; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day \", time()));",
        "                    $inttime--;",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date FROM",
        " (",
        "SELECT SUM(NotRunconditionTime) AS cnt, stat_date FROM (",
        "SELECT NotRunconditionTime, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM stat_energy_saving_summary WHERE vehicleNo IN( SELECT  vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                // 为显示 到当前月的 每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date FROM",
        " (",
        "SELECT SUM(NotRunconditionTime) AS cnt, stat_date FROM (",
        "SELECT NotRunconditionTime, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM stat_energy_saving_summary WHERE vehicleNo IN( SELECT  vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                // 为显示  每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c)d ON  b.stat_date\u003dd.month\";",
        "                break;",
        "",
        "        }",
        "",
        "// 如果用户等级不是 顶级 则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  $motorCondtion) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id $motorCondtion) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "            $records \u003d DB::select($sql);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            if (isset($arrtime)) {",
        "",
        "                $arr3[0] \u003d $arrtime;",
        "                $arr3[1] \u003d array_map(function () {",
        "                    return 0;",
        "                }, $arrtime);",
        "                $temp \u003d [];",
        "",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $temp[$val] \u003d $key;",
        "                }",
        "",
        "                foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                    $data \u003d $arr1[1][$key];",
        "",
        "                    $arr3[1][$temp[$value]] \u003d $data;",
        "",
        "                }",
        "                $arr1 \u003d $arr3;",
        "            }",
        "            foreach ($arr1[1] as $key \u003d\u003e $value) {",
        "                $arr1[1][$key] \u003d round($arr1[1][$key] / 3600, 2);",
        "            }",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 $motorCondtion) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 $motorCondtion)\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "        $records \u003d DB::select($sql);",
        "",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        $cnt \u003d count($records);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "        if (isset($arrtime)) {",
        "",
        "            $arr3[0] \u003d $arrtime;",
        "            $arr3[1] \u003d array_map(function () {",
        "                return 0;",
        "            }, $arrtime);",
        "            $temp \u003d [];",
        "            foreach ($arrtime as $key \u003d\u003e $val) {",
        "                $temp[$val] \u003d $key;",
        "            }",
        "",
        "            foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                $data \u003d $arr1[1][$key];",
        "                $arr3[1][$temp[$value]] \u003d $data;",
        "            }",
        "            $arr1 \u003d $arr3;",
        "        }",
        "",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "",
        "",
        "        foreach ($arr1[1] as $key \u003d\u003e $value) {",
        "            $arr1[1][$key] \u003d round($arr1[1][$key] / 3600, 2);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getConditionOnTrend",
        "     * @name: 空调开启时长趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: page,description:页码",
        "     *parameter5: count,description:行数",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getConditionOnTrend(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        // $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];//479",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // sql 头部",
        "        $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(stat_date,\u0027%d\u0027) AS stat_date FROM",
        "(",
        "SELECT SUM(conditionTime) AS cnt, stat_date FROM (",
        "SELECT conditionTime, stat_date AS stat_date FROM stat_energy_saving_summary_day WHERE vehicleNo IN( SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";",
        "",
        "// 用作 limit, 只有在时间为今年的时候有",
        "        $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 车辆类型",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        if (empty($motorType)) {",
        "            $motorCondtion \u003d \"\";",
        "        } else {",
        "            $motorCondtion \u003d \" and motortype\u003d$motorType \";",
        "        };",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date) b    \";",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "",
        "                $sql \u003d \"SELECT COUNT(1) AS cnt, stat_date FROM (",
        "SELECT  DATE_FORMAT(begin_time,\u0027%H:00\u0027)  AS stat_date FROM `stat_energy_saving_detail` ",
        "WHERE `TYPE`\u003d\u0027conditionTime\u0027 AND ",
        " vehicledeviceid IN (SELECT deviceid FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                $fixed \u003d \") a GROUP BY stat_date ORDER BY stat_date \";",
        "                for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                    if ($i \u003e 9) {",
        "                        $arrtime[] \u003d date(\"$i:00\");",
        "                    } else {",
        "                        $arrtime[] \u003d date(\"0$i:00\");",
        "                    }",
        "",
        "                }",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day\", time()));",
        "                    $inttime--;",
        "                }",
        "                // 关联表",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d date(\u0027d\u0027);",
        "                $inttime \u003d intval($inttime) - 1;",
        "                $inttime2 \u003d $inttime;",
        "                for ($i \u003d 0; $i \u003c $inttime2; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day \", time()));",
        "                    $inttime--;",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date FROM",
        " (",
        "SELECT SUM(conditionTime) AS cnt, stat_date FROM (",
        "SELECT conditionTime, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM stat_energy_saving_summary WHERE vehicleNo IN( SELECT  vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                // 为显示 到当前月的 每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date FROM",
        " (",
        "SELECT SUM(conditionTime) AS cnt, stat_date FROM (",
        "SELECT conditionTime, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM stat_energy_saving_summary WHERE vehicleNo IN( SELECT  vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId    \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                // 为显示  每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c)d ON  b.stat_date\u003dd.month\";",
        "                break;",
        "",
        "        }",
        "",
        "// 如果用户等级不是 顶级 则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  $motorCondtion) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id $motorCondtion) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "            $records \u003d DB::select($sql);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            if (isset($arrtime)) {",
        "",
        "                $arr3[0] \u003d $arrtime;",
        "                $arr3[1] \u003d array_map(function () {",
        "                    return 0;",
        "                }, $arrtime);",
        "                $temp \u003d [];",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $temp[$val] \u003d $key;",
        "                }",
        "",
        "                foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                    $data \u003d $arr1[1][$key];",
        "                    $arr3[1][$temp[$value]] \u003d $data;",
        "                }",
        "                $arr1 \u003d $arr3;",
        "            }",
        "",
        "            foreach ($arr1[1] as $key \u003d\u003e $value) {",
        "                $arr1[1][$key] \u003d round($arr1[1][$key] / 3600, 2);",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 $motorCondtion) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 $motorCondtion)\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        $cnt \u003d count($records);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "",
        "        if (isset($arrtime)) {",
        "",
        "            $arr3[0] \u003d $arrtime;",
        "            $arr3[1] \u003d array_map(function () {",
        "                return 0;",
        "            }, $arrtime);",
        "            $temp \u003d [];",
        "            foreach ($arrtime as $key \u003d\u003e $val) {",
        "                $temp[$val] \u003d $key;",
        "            }",
        "",
        "            foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                $data \u003d $arr1[1][$key];",
        "                $arr3[1][$temp[$value]] \u003d $data;",
        "            }",
        "            $arr1 \u003d $arr3;",
        "        }",
        "",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "",
        "        foreach ($arr1[1] as $key \u003d\u003e $value) {",
        "            $arr1[1][$key] \u003d round($arr1[1][$key] / 3600, 2);",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "",
        "    }",
        "",
        "    // 获取当前时间 近60 秒内电流和电压",
        "    public function getBatteryTrend(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deviceId \u003d $request-\u003eget(\u0027deviceId\u0027);",
        "        $sql \u003d \u0027SELECT GROUP_CONCAT(batterytotalvolt order by time asc) AS volt,GROUP_CONCAT(buscurrent order by time asc)  AS current,group_concat(date_format(time,\\\u0027%i:%s\\\u0027) order by time asc) as time ",
        "FROM (select batterytotalvolt,buscurrent,time,vehicledeviceid from",
        " t_electricvehicleana\u0027 . \"     ",
        " WHERE vehicledeviceid\u003d$deviceId AND TIME\u003e\u003d NOW()- INTERVAL 60 SECOND AND TIME\u003cNOW()  )a group  by vehicledeviceid   \";",
        "        $records \u003d DB::select($sql);",
        "        $records[0]-\u003etime \u003d explode(\u0027,\u0027, $records[0]-\u003etime);",
        "        $records[0]-\u003evolt \u003d explode(\u0027,\u0027, $records[0]-\u003evolt);",
        "        $records[0]-\u003ecurrent \u003d explode(\u0027,\u0027, $records[0]-\u003ecurrent);",
        "",
        "",
        "        if (empty($records[0]-\u003ecurrent) \u0026\u0026 empty($records[0]-\u003evolt)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "    }",
        "",
        "    // 获取电池信息一览表",
        "    public function getBatteryInfo(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deviceId \u003d $request-\u003eget(\u0027deviceId\u0027);",
        "        $time \u003d $request-\u003eget(\u0027time\u0027);",
        "        // 差电池类型",
        "        $sql \u003d \"SELECT batterytotalvolt,",
        "                      buscurrent,",
        "                      soc,",
        "                      batterymaxtemp,",
        "                      batterymintemp,",
        "                      singlemaxvolt1sn,",
        "                      singlemaxvolt1count,  ",
        "                      singlehighvolt,",
        "                      singleminvolt1sn,",
        "                      singleminvolt1count,    ",
        "                      singlelowvolt, ",
        "                      singlemaxtemp1sn,                          ",
        "                      singlemaxtemp1count,",
        "                      singlehightemp, ",
        "                      singlemintemp1sn,",
        "                      singlemintemp1count,    ",
        "                      singlelowtemp,    ",
        "                      batterycount,",
        "                               ",
        "                      total_battery_temp_node_number,",
        "                      battery_rated_voltage,",
        "                      battery_rated_energy,",
        "                      battery_residual_energy                   ",
        "\" . \"",
        "                 FROM t_electricvehicleana     ",
        "                 WHERE vehicledeviceid\u003d$deviceId AND TIME\u003d\u0027$time\u0027 \";",
        "        $records \u003d DB::select($sql);",
        "",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "    }",
        "",
        "    public function getBatterySingleVolt(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deviceId \u003d $request-\u003eget(\u0027deviceId\u0027);",
        "        $time \u003d $request-\u003eget(\u0027time\u0027);",
        "        $sql \u003d \u0027SELECT all_single_voltage \u0027 . \u0027FROM t_electricvehicleana2     ",
        "      WHERE vehicledeviceid\u003d1809130000001194 AND TIME\u003d\\\u00272018-11-07 22:06:25\\\u0027 \u0027;",
        "        $records \u003d DB::select($sql)[0]-\u003eall_single_voltage;",
        "        $records \u003d str_replace(\"\\\":\\\"\", \"_\", $records);",
        "        $records \u003d str_replace([\"\\\"\", \u0027{\u0027, \u0027}\u0027], \"\", $records);",
        "        $arr1 \u003d explode(\u0027,\u0027, $records);",
        "",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "",
        "    }",
        "",
        "    public function getBatterySingleTemp(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deviceId \u003d $request-\u003eget(\u0027deviceId\u0027);",
        "        $time \u003d $request-\u003eget(\u0027time\u0027);",
        "        $sql \u003d \u0027SELECT all_singlet_temperature \u0027 . \u0027FROM t_electricvehicleana2     ",
        "      WHERE vehicledeviceid\u003d1809130000001194 AND TIME\u003d\\\u00272018-11-07 22:06:25\\\u0027 \u0027;",
        "        $records \u003d DB::select($sql)[0]-\u003eall_single_voltage;",
        "        $records \u003d str_replace(\"\\\":\\\"\", \"_\", $records);",
        "        $records \u003d str_replace([\"\\\"\", \u0027{\u0027, \u0027}\u0027], \"\", $records);",
        "        $arr1 \u003d explode(\u0027,\u0027, $records);",
        "",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getChaoSuDetail",
        "     * @name: 违规取证",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:页码",
        "     *parameter2: count,description:行数",
        "     *parameter3: vehicleNo,description:车牌号",
        "     *parameter4: startTime,description:开始时间",
        "     *parameter5: endTime,description:结束时间",
        "     *parameter6: site,description:地点",
        "     *parameter7: violationType,description:违规类型",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getChaoSuDetail(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $rules \u003d [",
        "            \u0027vehicleNo\u0027 \u003d\u003e \u0027required\u0027, // 车牌号",
        "            \u0027startTime\u0027 \u003d\u003e \u0027required\u0027, // 开始时间",
        "            \u0027endTime\u0027 \u003d\u003e \u0027required\u0027, // 结束时间",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "        $records \u003d $this-\u003egetRecordsFromChaoSuDetail($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027beijing_chaosu_quzheng\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    // 获取超速详情 通用取证",
        "    public function getRecordsFromChaoSuDetail($params)",
        "    {",
        "        /*",
        "          * 参数处理部分",
        "          */",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "        $first \u003d (new Carbon())-\u003esubDays(env(\u0027MYSQL_HISTORY_DAYS\u0027));",
        "        $second \u003d Carbon::parse($params[\u0027startTime\u0027]);",
        "        $conn \u003d $second-\u003elt(Carbon::parse($first-\u003eformat(\u0027Y-m-d 00:00:00\u0027))) ? \u0027mysql_viti\u0027 : \u0027mysql\u0027;",
        "        $violationType \u003d isset($params[\u0027violationType\u0027]) ? $params[\u0027violationType\u0027] : null;",
        "        $vehicleNO \u003d $params[\u0027vehicleNo\u0027];",
        "        //默认参数(对象中不能包含对象) 油车模拟量 speed,gpsx,gpsy",
        "        $config \u003d (array)json_decode(isset($params[\u0027config\u0027]) ? $params[\u0027config\u0027] : \u0027{\"t_vehicleanaloginfo\":\"speed,gpsx,gpsy\"}\u0027);",
        "        //根据参数获取列名数组",
        "        $columns \u003d explode(\",\", implode(\",\", $config));",
        "        $allColumns \u003d explode(\",\", implode(\",\", $config) . \",time,driverName,lineName,vehicleNo,violationType\");",
        "        /*",
        "         * 信息获取",
        "         */",
        "        //读取车辆线路信息",
        "        $vehicleInfo \u003d DB::select(\"select vehicleNo,lineName,deviceId,offsetId from t_vehicleinfo  a join t_mauth_dept b on a.deptId\u003db.lineDeptId where vehicleNo\u003d\u0027$vehicleNO\u0027\");",
        "        $lineName \u003d isset($vehicleInfo[0]-\u003e{\u0027lineName\u0027}) ? $vehicleInfo[0]-\u003e{\u0027lineName\u0027} : \"\";",
        "        $deviceId \u003d isset($vehicleInfo[0]-\u003e{\u0027deviceId\u0027}) ? $vehicleInfo[0]-\u003e{\u0027deviceId\u0027} : \"\";",
        "        //读取车辆该时间段司机信息",
        "        $driverName \u003d isset($params[\u0027driverName\u0027]) ? $params[\u0027driverName\u0027] : \"\";",
        "        /*",
        "         * 偏移量及状态码获取",
        "         */",
        "        //偏移量",
        "        $offsetInfo \u003d array();",
        "        //状态码",
        "        $stateInfo \u003d array();",
        "        if (!empty($vehicleInfo[0]-\u003e{\u0027offsetId\u0027})) {",
        "            $vehicleanalogOffsetInfo \u003d DB::select(\"select offset_content,state_content from t_vehicleanalog_offset  where id\u003d\" . $vehicleInfo[0]-\u003e{\u0027offsetId\u0027});",
        "            if (sizeof($vehicleanalogOffsetInfo) \u003e 0) {",
        "                $analogInfo \u003d json_decode($vehicleanalogOffsetInfo[0]-\u003eoffset_content);",
        "                $offsetStateInfo \u003d json_decode($vehicleanalogOffsetInfo[0]-\u003estate_content);",
        "                foreach ($columns as $column) {",
        "                    foreach ($analogInfo as $analog) {",
        "                        if ($analog-\u003een \u003d\u003d $column) {",
        "                            $offsetInfo[$column] \u003d $analog-\u003econfig;",
        "                        }",
        "                    }",
        "                    if (isset($offsetStateInfo-\u003e$column)) {",
        "                        $stateInfo[$column] \u003d $offsetStateInfo-\u003e$column-\u003estateList;",
        "                    }",
        "                }",
        "            }",
        "        }",
        "",
        "        $proValue \u003d array(\"driverName\" \u003d\u003e $driverName, \"lineName\" \u003d\u003e $lineName, \"vehicleNo\" \u003d\u003e $vehicleNO, \"violationType\" \u003d\u003e $violationType);",
        "        $dbResult \u003d null;",
        "        //确定时间段",
        "        $starttime \u003d $params[\u0027startTime\u0027];",
        "        $endtime \u003d $params[\u0027endTime\u0027];",
        "        $countSql \u003d \"select count(*) as total \";",
        "        //获取总数，使用配置的第一个元素查询总数",
        "        $sql \u003d \" from  \" . key($config) . \"  WHERE vehicledeviceid \u003d \u0027$deviceId\u0027 AND TIME\u003e\u003d\u0027$starttime\u0027 AND TIME\u003c\u003d\u0027$endtime\u0027 order by time \";",
        "        $result \u003d Redis::get($countSql . $sql);",
        "        if (is_null($result)) {",
        "            // 修改历史数据 zhangzhufu cassandra",
        "            if (\u0027mysql_viti\u0027 \u003d\u003d $conn) {",
        "                $dbResult \u003d $this-\u003egetCassandraData($params, $deviceId, $columns);",
        "                $totalObj \u003d new \\stdClass();",
        "                $totalObj-\u003e{\u0027total\u0027} \u003d sizeof($dbResult);",
        "                $dbResult \u003d array($totalObj);",
        "            } else {",
        "                $dbResult \u003d DB::connection($conn)-\u003eselect($countSql . $sql);",
        "            }",
        "            // 缓存一天",
        "            Redis::setex($countSql . $sql, 3600 * 24, serialize($dbResult));",
        "            $total \u003d (array)$dbResult[0];",
        "        } else {",
        "            $total \u003d (array)unserialize($result)[0];",
        "        }",
        "        //获取列表数据，首先拼接缓存sql-key",
        "        $listSql \u003d array();",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "        $limit \u003d \" limit $offset , $count\";",
        "        foreach ($config as $key \u003d\u003e $value) {",
        "            array_push($listSql, \" select vehicledeviceid,time, \" . $value . \" from \" . $key . \"  WHERE vehicledeviceid \u003d \u0027$deviceId\u0027 AND TIME\u003e\u003d\u0027$starttime\u0027 AND TIME\u003c\u003d\u0027$endtime\u0027 order by time \" . $limit);",
        "        }",
        "",
        "        $records \u003d Redis::get(implode(\";\", $listSql));",
        "        $dbResult \u003d null;",
        "        if (is_null($records)) {",
        "            if (\u0027mysql_viti\u0027 \u003d\u003d $conn) {",
        "                $dbResult \u003d $this-\u003egetCassandraData($params, $deviceId, $columns);",
        "                //分页",
        "                $dbResult \u003d array_slice($dbResult, $offset, $count);",
        "                $dbResultAft \u003d array();",
        "                foreach ($dbResult as $value) {",
        "                    $dbRes \u003d new \\stdClass();",
        "                    foreach ($value as $k \u003d\u003e $v) {",
        "                        $dbRes-\u003e{$k} \u003d $v;",
        "                    }",
        "                    foreach ($proValue as $itemK \u003d\u003e $itemV) {",
        "                        $dbRes-\u003e{$itemK} \u003d $itemV;",
        "                    }",
        "                    array_push($dbResultAft, $dbRes);",
        "                }",
        "                $dbResult \u003d $dbResultAft;",
        "            } else {",
        "                //拆分sql，获取结果",
        "                $dbOrgResult \u003d array();",
        "                foreach ($listSql as $item) {",
        "                    $sqlinfo \u003d DB::connection($conn)-\u003eselect($item);",
        "                    if (sizeof($dbOrgResult) \u003d\u003d 0) {",
        "                        $dbOrgResult \u003d (array)$sqlinfo;",
        "                        foreach ($dbOrgResult as $index \u003d\u003e $item) {",
        "                            $dbOrgResult[$index] \u003d (object)array_merge((array)$item, $proValue);",
        "                        }",
        "                    } else {",
        "                        foreach ($dbOrgResult as $index \u003d\u003e $item) {",
        "                            foreach ($sqlinfo as $columnValue) {",
        "                                if ($item-\u003etime \u003d\u003d $columnValue-\u003etime) {",
        "                                    $dbOrgResult[$index] \u003d (object)array_merge((array)$item, (array)$columnValue, $proValue);",
        "                                }",
        "                            }",
        "                        }",
        "                    }",
        "                }",
        "                $dbResult \u003d $dbOrgResult;",
        "            }",
        "            //偏移量及状态码统一修正",
        "            foreach ($dbResult as $resItem) {",
        "                foreach ($resItem as $proName \u003d\u003e $proValue) {",
        "                    if (isset($offsetInfo[$proName])) {",
        "                        $resItem-\u003e$proName \u003d $proValue * $offsetInfo[$proName]-\u003eres + $offsetInfo[$proName]-\u003eoffset;",
        "                    }",
        "                    if (isset($stateInfo[$proName])) {",
        "                        $resItem-\u003e$proName \u003d $stateInfo[$proName]-\u003e$proValue;",
        "                    }",
        "                }",
        "            }",
        "",
        "            // 缓存一天",
        "            Redis::setex(implode(\";\", $listSql), 3600 * 24, serialize($dbResult));",
        "            $records \u003d (array)$dbResult;",
        "        } else {",
        "            $records \u003d (array)unserialize($records);",
        "        }",
        "",
        "        //站点信息",
        "        $site \u003d isset($params[\u0027site\u0027]) ? $params[\u0027site\u0027] : null;",
        "        $cntary \u003d count($records);",
        "        if ($violationType !\u003d \u0027越站\u0027 || $site \u003d\u003d null) {",
        "            for ($i \u003d 0; $i \u003c $cntary; $i++) {",
        "                $gpsx \u003d $records[$i]-\u003egpsx;",
        "                $gpsy \u003d $records[$i]-\u003egpsy;",
        "                $newGPS \u003d $this-\u003ewgs84togcj02($gpsx, $gpsy);",
        "                $gps \u003d $newGPS[0] . \",\" . $newGPS[1];",
        "                $address \u003d $this-\u003egetaddress($gps);",
        "                $records[$i]-\u003elocation \u003d $address;",
        "            }",
        "        } else {",
        "            for ($i \u003d 0; $i \u003c $cntary; $i++) {",
        "                $records[$i]-\u003elocation \u003d $site;",
        "            }",
        "        }",
        "        //数据组装",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records,",
        "            \u0027columns\u0027 \u003d\u003e $allColumns",
        "        ];",
        "        return $data;",
        "    }",
        "",
        "    function microtime_float()",
        "    {",
        "        list($usec, $sec) \u003d explode(\" \", microtime());",
        "        return ((float)$usec + (float)$sec);",
        "    }",
        "",
        "",
        "    /**",
        "     *API: api/statistic/getChartoOrTrendTime",
        "     * @name: 获取时间",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: timeType,description:时间类型",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getChartoOrTrendTime(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $datebegin \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "                $dateend \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $datebegin \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-7 day\u0027, time()));",
        "                $dateend \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $datebegin \u003d date(\"Y-m-01\", time());",
        "                $dateend \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "",
        "                break;",
        "            case 3:  // last month",
        "                $datebegin \u003d date(\"Y-m-01\", strtotime(\u0027-1 month\u0027));",
        "                $dateend \u003d date(\u0027Y-m-t\u0027, strtotime(\u0027-1 month\u0027));",
        "",
        "                break;",
        "            case 4: // this year",
        "                $datebegin \u003d date(\"Y-01-01\", time());",
        "                $dateend \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "",
        "",
        "                break;",
        "            case 5: // last year",
        "                $datebegin \u003d date(\"Y-01-01\", strtotime(\u0027-1 year\u0027));",
        "                $dateend \u003d date(\"Y-12-31\", strtotime(\u0027-1 year\u0027));",
        "",
        "",
        "                break;",
        "",
        "        }",
        "",
        "        $arr1[0] \u003d $datebegin;",
        "        $arr1[1] \u003d $dateend;",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getTime",
        "     * @name: 获取北京时间",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getTime(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "",
        "                for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                    if ($i \u003e 9) {",
        "                        $arr1[$i] \u003d date(\"$i:00\");",
        "                    } else {",
        "                        $arr1[$i] \u003d date(\"0$i:00\");",
        "                    }",
        "",
        "                }",
        "",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "",
        "                $int \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-d\u0027, strtotime(\"-$int day\", time()));",
        "                    $int--;",
        "                }",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $int \u003d date(\u0027d\u0027);",
        "                $int \u003d intval($int) - 1;",
        "                $int2 \u003d $int;",
        "                if ($int2 \u003d\u003d 0) {",
        "                    $arr1[] \u003d date(\u0027Y-m-01\u0027);",
        "                } else {",
        "                    for ($i \u003d 0; $i \u003c $int2; $i++) {",
        "                        $arr1[] \u003d date(\u0027Y-m-d\u0027, strtotime(\"-$int day \", time()));",
        "                        $int--;",
        "                    }",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $int \u003d date(\u0027m\u0027);",
        "                $int \u003d intval($int);",
        "                $d \u003d $int - 1;",
        "                for ($i \u003d 0; $i \u003c $int; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-01\u0027, strtotime(\"- $d month\", time()));",
        "                    $d--;",
        "                }",
        "",
        "                break;",
        "            case 5: // last year",
        "",
        "                $int \u003d date(\u0027m\u0027);",
        "                $int \u003d intval($int);",
        "                $d \u003d $int + 11;",
        "                for ($i \u003d 0; $i \u003c 12; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-01\u0027, strtotime(\"- $d month \", time()));",
        "                    $d--;",
        "                }",
        "                break;",
        "",
        "        }",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "    }",
        "",
        "    public function getTimeFunction($datatype)",
        "    {",
        "        // 确定时间参数",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "",
        "                for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                    if ($i \u003e 9) {",
        "                        $arr1[$i] \u003d date(\"$i:00\");",
        "                    } else {",
        "                        $arr1[$i] \u003d date(\"0$i:00\");",
        "                    }",
        "",
        "                }",
        "",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "",
        "                $int \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-d\u0027, strtotime(\"-$int day\", time()));",
        "                    $int--;",
        "                }",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $int \u003d date(\u0027d\u0027);",
        "                $int \u003d intval($int) - 1;",
        "                $int2 \u003d $int;",
        "                for ($i \u003d 0; $i \u003c $int2; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-d\u0027, strtotime(\"-$int day \", time()));",
        "                    $int--;",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $int \u003d date(\u0027m\u0027);",
        "                $int \u003d intval($int);",
        "                $d \u003d $int - 1;",
        "                for ($i \u003d 0; $i \u003c $int; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-01\u0027, strtotime(\"- $d month\", time()));",
        "                    $d--;",
        "                }",
        "",
        "                break;",
        "            case 5: // last year",
        "",
        "                $int \u003d date(\u0027m\u0027);",
        "                $int \u003d intval($int);",
        "                $d \u003d $int + 11;",
        "                for ($i \u003d 0; $i \u003c 12; $i++) {",
        "                    $arr1[] \u003d date(\u0027Y-m-01\u0027, strtotime(\"- $d month \", time()));",
        "                    $d--;",
        "                }",
        "                break;",
        "",
        "        }",
        "",
        "        return $arr1;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getOneLine",
        "     * @name: 获取默认选中路线",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getOneLine(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //   $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "",
        "        if ($dept[\u0027level\u0027] \u003d\u003d 0) {",
        "            $sql \u003d \"select lineDeptid,lineName from v_lineinfo  limit 1 \";",
        "        } else {",
        "            $sql \u003d \"select lineDeptid,lineName from v_lineinfo where $deptlevel\u003d$id  limit 1 \";",
        "        }",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDeviceid",
        "     * @name: 获取车辆deviceID\u003d\u003evehicleNo 列表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: vehicleNo,description:车牌号",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDeviceid(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //   $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $vehicleNo \u003d $request-\u003eget(\u0027vehicleNo\u0027);",
        "        $sql \u003d \"select deviceid as vehicledeviceid from t_vehicleinfo where vehicleNo\u003d\u0027$vehicleNo\u0027\";",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "    }",
        "",
        "    public function test(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $toBeFixed \u003d json_decode($this-\u003egetChartoOrTrendTime($request), true);",
        "",
        "        $arr \u003d array();",
        "",
        "        $arr[1] \u003d $toBeFixed[\u0027data\u0027];",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getCarBasicInfo",
        "     * @name: 车辆基本信息 for 概况",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getCarBasicInfo(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        // 需要改回",
        "        //   $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \" SELECT COUNT(1) AS `all`,ifnull( SUM(CASE `status` WHEN 1 THEN 1 END ),0)AS normal,",
        " ifnull( SUM(CASE `status` WHEN 2 THEN 1 END ),0) AS break, ifnull(SUM(CASE `status` WHEN 3 THEN 1 END ),0) AS maintain ",
        " FROM t_vehicleinfo b",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        $dataconditon \u003d \" WHERE \";",
        "",
        "",
        "        //    $sql.\u003d$dataconditon;",
        "",
        "        if ($deptlevel !\u003d null) {",
        "",
        "            $dataconditon .\u003d \"  $deptlevel\u003d$id \";",
        "",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "",
        "                $dataconditon .\u003d \" and $depttype \u003d $deptid \";",
        "            };",
        "",
        "",
        "            $sqlall \u003d $sql . $dataconditon;",
        "",
        "",
        "            $records \u003d DB::select($sqlall);",
        "            $records[0]-\u003enormal \u003d $records[0]-\u003enormal + $records[0]-\u003ebreak;",
        "",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        };",
        "",
        "",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "",
        "            $dataconditon .\u003d \"  $depttype \u003d $deptid \";",
        "        } else {",
        "            $dataconditon \u003d \"\";",
        "        };",
        "",
        "",
        "        $sqlall \u003d $sql . $dataconditon;",
        "",
        "",
        "        $records \u003d DB::select($sqlall);",
        "        $records[0]-\u003enormal \u003d $records[0]-\u003enormal + $records[0]-\u003ebreak;",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "    }",
        "",
        "    // 获取首页概况中的 其它信息",
        "    public function getHomeInfo(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "// 建立目标返回数组",
        "        $rets \u003d [",
        "            \u0027overdue\u0027 \u003d\u003e 0,    // 过期",
        "            \u0027breakCar\u0027 \u003d\u003e 0,        // 故障车辆",
        "            \u0027violationCar\u0027 \u003d\u003e 0,         // 不良车辆",
        "            \u0027breakTimes\u0027 \u003d\u003e 0,   // 故障次数",
        "            // \u0027breakCnt\u0027 \u003d\u003e 0, // 故障次数",
        "            \u0027violationCnt\u0027 \u003d\u003e 0, // 不良次数",
        "            \u0027seriousBreak\u0027 \u003d\u003e 0, // 严重报警数",
        "            \u0027batteryBreak\u0027 \u003d\u003e 0, // 电池报警",
        "        ];",
        "        $beforerets \u003d $rets;",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptId\u0027;",
        "        };",
        "",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                $dataconditon2 \u003d \" thirdMaintenance\u003d CURRENT_DATE()-interval 1 day \";",
        "                $timeconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 2 day \";",
        "                $timeconditon2 \u003d \" thirdMaintenance\u003d CURRENT_DATE()-interval 2 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $dataconditon2 \u003d \" thirdMaintenance\u003e\u003d CURRENT_DATE()-interval 7 day and thirdMaintenance\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 14 day and stat_date\u003c CURRENT_DATE()-interval 7 day\";",
        "                $timeconditon2 \u003d \" thirdMaintenance\u003e\u003d CURRENT_DATE()-interval 14 day and thirdMaintenance\u003c CURRENT_DATE()-interval 7 day\";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $dataconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and thirdMaintenance\u003c CURRENT_DATE()\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $timeconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and thirdMaintenance\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $dataconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and thirdMaintenance\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 2 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day- interval 1 month\";",
        "                $timeconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 2 month and thirdMaintenance\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day- interval 1 month\";",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                $dataconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and thirdMaintenance\u003c CURRENT_DATE() \";",
        "",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "",
        "                $timeconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                thirdMaintenance\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "",
        "                $dataconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                thirdMaintenance\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "",
        "                $timeconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 2 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year\";",
        "",
        "                $timeconditon2 \u003d \" thirdMaintenance\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 2 year and ",
        "                thirdMaintenance\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year\";",
        "                break;",
        "        }",
        "        // sql 头部",
        "        $sqloverdue \u003d \"SELECT ifnull(COUNT(1),0) as overdue FROM t_vehiclemaintenance WHERE  vehicleNO IN (SELECT vehicleNo FROM t_vehicleinfo b",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId   \";",
        "",
        "        $sqlbreak \u003d \"SELECT ifnull(SUM(total),0) AS total,ifnull(count(vehiclecnt),0) AS vehiclecnt FROM (",
        "SELECT SUM(total) AS total , vehicleNo AS vehiclecnt,1 AS stat_date FROM api_breakdowns  \";",
        "        $sqlbreak2 \u003d \"UNION ALL ",
        "                SELECT IFNULL(SUM(total),0)AS total , vehicleNo AS vehiclecnt,2 AS stat_date FROM api_breakdowns\";",
        "",
        "        $sqlviolation \u003d \"SELECT ifnull(SUM(total),0) AS total,ifnull(count(driverId),0) AS vehiclecnt FROM (",
        "SELECT SUM(totalNum) AS total , driverId AS driverId,1 as stat_date FROM stat_driving_violation_day  INNER JOIN ",
        "     (SELECT driverid AS vdriverid FROM v_driverinfo  WHERE $depttype \u003d $deptid ) temp ON stat_driving_violation_day.driverId\u003dtemp.vdriverid \";",
        "        $sqlviolation2 \u003d \" union all ",
        "                SELECT IFNULL(SUM(totalNum),0)AS total , driverId AS driverId ,2 AS stat_date FROM stat_driving_violation_day INNER JOIN ",
        "     (SELECT driverid AS vdriverid FROM v_driverinfo  WHERE $depttype \u003d $deptid ) temp ON stat_driving_violation_day.driverId\u003dtemp.vdriverid\";",
        "",
        "",
        "        $sqlseriousbreak \u003d \"SELECT ifnull(SUM(total),0) AS total,ifnull(count(vehiclecnt),0) AS vehiclecnt FROM (",
        "  SELECT SUM(total) AS total , vehicleNo AS vehiclecnt FROM ( SELECT e.deptId,e.vehicleno ,e.alarmname,e.total,IFNULL(alarmLevel,breakdownlevel)AS alarmlevel FROM (                         ",
        "   SELECT a.vehicleno, d.alarmname,a.deptId,a.total,a.alarmlevel AS breakdownlevel FROM  api_breakdowns a INNER JOIN",
        "     (SELECT alarmtypename,alarmname FROM t_vehiclealarmtype ",
        "         UNION ALL ",
        "      SELECT alarmtypename,alarmname FROM t_vehiclealarmtype2 ",
        "         UNION ALL ",
        "      SELECT alarmtypename,alarmname FROM t_vehiclealarmtype3 )d ON a.alarmtypename\u003dd.alarmtypename  \";",
        "",
        "",
        "//$deptlevel\u003dnull",
        "// 如果用户等级不是 顶级则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "",
        "            $sqloverdue .\u003d $fixedCondtion . \" and \" . $dataconditon2;",
        "            $batteryfix \u003d \" where alarmtypename IN (SELECT alarmtypename FROM `t_vehiclebatteryalarmtype` ) and  deptId \u003d \u0027$deptid\u0027 AND vehicleNo IS NOT NULL\";",
        "            $batterysql \u003d $sqlbreak . $batteryfix . \" and \" . $dataconditon . \" GROUP BY vehicleNo)a\";",
        "            $sqlviolation2 .\u003d \" where  lineId \u003d \u0027$deptid\u0027 AND driverId IS NOT NULL\" . \" and \" . $timeconditon . \" GROUP BY driverId\";",
        "            $sqlviolation .\u003d \" where  lineId \u003d \u0027$deptid\u0027 AND driverId IS NOT NULL\" . \" and \" . $dataconditon . \" GROUP BY driverId $sqlviolation2)a GROUP BY stat_date ORDER BY stat_date asc\";",
        "            $fix \u003d \" where  deptId \u003d \u0027$deptid\u0027 AND vehicleNo IS NOT NULL\";",
        "            $sqlbreak2 .\u003d $fix . \" and\" . $timeconditon . \" GROUP BY vehiclecnt\";",
        "            $sqlbreak .\u003d $fix . \" and\" . $dataconditon . \" GROUP BY vehicleNo $sqlbreak2)a group by stat_date order by stat_date asc\";",
        "            $sqlseriousbreak .\u003d $fix . \" and\" . $dataconditon . \")e INNER JOIN t_mauth_dept b ON e.deptId\u003db.lineDeptId LEFT JOIN t_alarmlevelinfo c ON b.companyDeptId \u003d c.deptId AND c.alarmTypeName\u003de.alarmname) api_breakdowns_temp WHERE alarmlevel\u003d1 GROUP BY vehicleNo)t\";",
        "",
        "            $rets[\u0027overdue\u0027] \u003d DB::select($sqloverdue)[0]-\u003eoverdue;",
        "            $violation \u003d DB::select($sqlviolation);",
        "            $break \u003d DB::select($sqlbreak);",
        "            $rets[\u0027batteryBreak\u0027] \u003d DB::select($batterysql)[0]-\u003etotal;//电池报警",
        "            $seriousBreak \u003d DB::select($sqlseriousbreak);",
        "",
        "//本期",
        "            if (count($break) \u003e 0) {",
        "                $rets[\u0027breakTimes\u0027] \u003d $break[0]-\u003etotal;//故障次数   69087",
        "                $rets[\u0027breakCar\u0027] \u003d $break[0]-\u003evehiclecnt;//故障车辆   9",
        "            }",
        "            if (count($violation) \u003e 0) {",
        "                $rets[\u0027violationCnt\u0027] \u003d $violation[0]-\u003etotal;//不良次数",
        "                $rets[\u0027violationCar\u0027] \u003d $violation[0]-\u003evehiclecnt;// 不良行为  9",
        "            }",
        "            $rets[\u0027seriousBreak\u0027] \u003d $seriousBreak[0]-\u003etotal;//严重报警",
        "",
        "//上期",
        "            if (count($break) \u003d\u003d 2) {",
        "                $beforerets[\u0027breakCar\u0027] \u003d $break[1]-\u003evehiclecnt;",
        "                $beforerets[\u0027breakTimes\u0027] \u003d $break[1]-\u003etotal;",
        "            }",
        "            if (count($violation) \u003d\u003d 2) $beforerets[\u0027violationCar\u0027] \u003d $violation[1]-\u003evehiclecnt;",
        "",
        "            return $this-\u003esetJsonResponseNew(SUCCESS, $rets, $beforerets);",
        "        };",
        "",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "",
        "        $fix \u003d \" where  deptId \u003d \u0027$deptid\u0027 AND vehicleNo IS NOT NULL\";",
        "        $batteryfix \u003d \" where alarmtypename IN (SELECT alarmtypename FROM `t_vehiclebatteryalarmtype` ) and  deptId \u003d \u0027$deptid\u0027 AND vehicleNo IS NOT NULL\";",
        "        $batterysql \u003d $sqlbreak . $batteryfix . \" and \" . $dataconditon . \" GROUP BY vehicleNo)a\";",
        "        $sqlbreak2 .\u003d $fix . \" and\" . $timeconditon . \" GROUP BY vehiclecnt\";",
        "        $sqlbreak .\u003d $fix . \" and \" . $dataconditon . \" GROUP BY vehicleNo $sqlbreak2)a group by stat_date order by stat_date asc\";",
        "        $sqlviolation2 .\u003d \" where  lineId \u003d \u0027$deptid\u0027 AND driverId IS NOT NULL\" . \" and \" . $timeconditon . \" GROUP BY driverId\";",
        "        $sqlviolation .\u003d \" where  lineId \u003d \u0027$deptid\u0027 AND driverId IS NOT NULL\" . \" and \" . $dataconditon . \" GROUP BY driverId $sqlviolation2)a GROUP BY stat_date ORDER BY stat_date asc\";",
        "        $sqloverdue .\u003d $fixedCondtion . \" and \" . $dataconditon2;",
        "        $sqlseriousbreak .\u003d $fix . \" and\" . $dataconditon . \")e INNER JOIN t_mauth_dept b ON e.deptId\u003db.lineDeptId LEFT JOIN t_alarmlevelinfo c ON b.companyDeptId \u003d c.deptId AND c.alarmTypeName\u003de.alarmname) api_breakdowns_temp WHERE alarmlevel\u003d1 GROUP BY vehicleNo)t\";",
        "",
        "//dd($sqloverdue,$sqlbreak,$sqlviolation,$batterysql,$sqlseriousbreak);",
        "        $rets[\u0027overdue\u0027] \u003d DB::select($sqloverdue)[0]-\u003eoverdue;",
        "        $break \u003d DB::select($sqlbreak);",
        "        $violation \u003d DB::select($sqlviolation);",
        "        $rets[\u0027batteryBreak\u0027] \u003d DB::select($batterysql)[0]-\u003etotal;//电池报警",
        "        $seriousBreak \u003d DB::select($sqlseriousbreak);",
        "",
        "//本期",
        "        if (count($break) \u003e 0) {",
        "            $rets[\u0027breakTimes\u0027] \u003d $break[0]-\u003etotal;//故障次数   69087",
        "            $rets[\u0027breakCar\u0027] \u003d $break[0]-\u003evehiclecnt;//故障车辆   9",
        "        }",
        "        if (count($violation) \u003e 0) {",
        "            $rets[\u0027violationCnt\u0027] \u003d $violation[0]-\u003etotal;//不良次数",
        "            $rets[\u0027violationCar\u0027] \u003d $violation[0]-\u003evehiclecnt;// 不良行为  9",
        "        }",
        "        $rets[\u0027seriousBreak\u0027] \u003d $seriousBreak[0]-\u003etotal;//严重报警",
        "",
        "//上期",
        "        if (count($break) \u003d\u003d 2) {",
        "            $beforerets[\u0027breakCar\u0027] \u003d $break[1]-\u003evehiclecnt;",
        "            $beforerets[\u0027breakTimes\u0027] \u003d $break[1]-\u003etotal;",
        "        }",
        "        if (count($violation) \u003d\u003d 2) $beforerets[\u0027violationCar\u0027] \u003d $violation[1]-\u003evehiclecnt;",
        "",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $rets, $beforerets);",
        "",
        "    }",
        "",
        "",
        "    public function getRecordsfromAlarmMonitorVehicleRank($params)",
        "    {",
        "",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $countSql \u003d \"select count(*) as total \";",
        "",
        "//   selectsql 完整如下：",
        "//        select c.*, @asistrank:\u003d@asistrank+1 AS rank from",
        "//    (select vehicleno,drivername ,companyname,subcompanyname, groupName,lineName,sum(duration) as duration,sum(times) as times ,stattime,alarmtype2",
        "//      from v_6monitorvehiclerank  group by vehicleno,drivername)c INNER JOIN (SELECT @asistrank:\u003d0) b    WHERE 条件  order by times desc limit num1,num2",
        "",
        "        $selectSql \u003d \" SELECT * \";",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                $sql \u003d \"   FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT vehicleNo,driverName ,companyName,subCompanyName, groupName,lineName,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitorvehiclerank     where  \";",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"  FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT vehicleNo,driverName ,companyName,subCompanyName, groupName,lineName,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitorvehiclerank      where companyDeptId \u003d \u0027$id\u0027 and  \";",
        "                break;",
        "            case 2:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \" FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT vehicleNo,driverName ,companyName,subCompanyName, groupName,lineName,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitorvehiclerank   where subCompanyDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"  FROM",
        "      FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT vehicleNo,driverName ,companyName,subCompanyName, groupName,lineName,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitorvehiclerank    where groupDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $sql \u003d \"   FROM (SELECT c.* ,IF(@pre_times\u003dtimes,@rank,@rank:\u003d@rank+@asistrank ) AS rank,IF(@pre_times\u003dtimes,@asistrank:\u003d@asistrank+1,@asistrank:\u003d1),  @pre_times:\u003dtimes FROM ",
        "   (SELECT vehicleNo,driverName ,companyName,subCompanyName, groupName,lineName,SUM(duration) AS duration,SUM(times) AS times ,statTime,alarmtype2",
        "  FROM v_6monitorvehiclerank     where lineDeptId \u003d \u0027$id\u0027 and \";",
        "                break;",
        "",
        "",
        "        }",
        "",
        "        $sql .\u003d \"1\u003d1\";",
        "",
        "        if (isset($params[\u0027findKey\u0027]) \u0026\u0026 isset($params[\u0027findVal\u0027])) {",
        "            $key \u003d $params[\u0027findKey\u0027];",
        "            $val \u003d $params[\u0027findVal\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "        }",
        "",
        "        if (isset($params[\u0027findKey2\u0027]) \u0026\u0026 isset($params[\u0027findVal2\u0027])) {",
        "            $key \u003d $params[\u0027findKey2\u0027];",
        "            $val \u003d $params[\u0027findVal2\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  $key like \u0027%$val%\u0027 \";",
        "            }",
        "",
        "        }",
        "",
        "        if (isset($params[\u0027findKey3\u0027]) \u0026\u0026 isset($params[\u0027findVal3\u0027])) {",
        "            $key \u003d $params[\u0027findKey3\u0027];",
        "            $val \u003d $params[\u0027findVal3\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" and  ($key in (\u0027$val\u0027) \";",
        "            }",
        "//            $sql .\u003d \" and  ($key in (\u0027$val\u0027) \" ;",
        "        }",
        "",
        "        if (isset($params[\u0027findKey6\u0027]) \u0026\u0026 isset($params[\u0027findVal6\u0027])) {",
        "            $key \u003d $params[\u0027findKey6\u0027];",
        "            $val \u003d $params[\u0027findVal6\u0027];",
        "            if ($val !\u003d \"\") {",
        "                $sql .\u003d \" or  $key in (\u0027$val\u0027) )\";",
        "            }",
        "",
        "            //   $sql .\u003d \" or  $key in (\u0027$val\u0027) )\" ;",
        "        }",
        "",
        "        $sql .\u003d \" GROUP BY vehicleno,drivername,alarmtype2 ORDER BY times DESC  )c INNER JOIN    (SELECT @pretimes:\u003d-1,@rank:\u003d0,@asistrank:\u003d1)  b   )d  \";",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "",
        "//        if (isset($params[\u0027sortKey\u0027])\u0026\u0026isset($params[\u0027sortVal\u0027])) {",
        "//            $key \u003d $params[\u0027sortKey\u0027];",
        "//            $val \u003d $params[\u0027sortVal\u0027];",
        "//            if($val !\u003d \"\" ){",
        "//                $sql .\u003d \" order by $key $val \" ;",
        "//            }",
        "//        }",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmNoTypeTrend",
        "     * @name: 故障整体趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmNoTypeTrend(\\Illuminate\\Http\\Request $request)",
        "    {",
        "// 针对司机",
        "",
        "// 判断用户等级",
        "        // 需要改回，",
        "        //    $dept[\u0027level\u0027]\u003d0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "",
        "        $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(stat_date,\u0027%d\u0027) AS stat_date FROM(",
        "                  SELECT SUM(total) AS cnt, stat_date FROM (",
        "                      SELECT total, stat_date AS stat_date FROM api_breakdowns  b INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId\";",
        "",
        "// 用作 limit, 只有在时间为今年的时候有",
        "        $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptId\u0027;",
        "        };",
        "",
        "        $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date) b    \";",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $sql \u003d \"SELECT sum(total) AS cnt, stat_date FROM (",
        "                           SELECT total, DATE_FORMAT(stat_date,\u0027%H:00\u0027)  AS stat_date FROM api_breakdowns_hour b INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId  \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 1 day  and stat_date\u003cCURRENT_DATE() \";",
        "                $fixed \u003d \" )a GROUP BY  stat_date ORDER BY stat_date   \";",
        "                for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                    if ($i \u003e 9) {",
        "                        $arrtime[] \u003d date(\"$i:00\");",
        "                    } else {",
        "                        $arrtime[] \u003d date(\"0$i:00\");",
        "                    }",
        "",
        "                }",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "",
        "                $inttime \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day\", time()));",
        "                    $inttime--;",
        "                }",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d date(\u0027d\u0027);",
        "                $inttime \u003d intval($inttime) - 1;",
        "                $inttime2 \u003d $inttime;",
        "                for ($i \u003d 0; $i \u003c $inttime2; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day \", time()));",
        "                    $inttime--;",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(`month`,\u0027%m月\u0027) AS stat_date FROM(",
        "                          SELECT SUM(total) AS cnt, stat_date FROM (",
        "                            SELECT total, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM api_breakdowns_month  b INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                // 为显示 到当前月的 每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) AS cnt , DATE_FORMAT(`month`,\u0027%m月\u0027) AS stat_date FROM(",
        "                           SELECT SUM(total) AS cnt, stat_date FROM (",
        "                             SELECT total, DATE_FORMAT(stat_date,\u0027%Y-%m-01\u0027) AS stat_date FROM api_breakdowns_month  b ",
        "                           INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month\";",
        "                // 为显示  每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c)d ON  b.stat_date\u003dd.month\";",
        "                break;",
        "",
        "        }",
        "",
        "// 如果用户等级不是 顶级 则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "",
        "            $records \u003d DB::select($sql);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            if (isset($arrtime)) {",
        "",
        "                $arr3[0] \u003d $arrtime;",
        "                $arr3[1] \u003d array_map(function () {",
        "                    return 0;",
        "                }, $arrtime);",
        "                $temp \u003d [];",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $temp[$val] \u003d $key;",
        "                }",
        "",
        "                foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                    $data \u003d $arr1[1][$key];",
        "                    $arr3[1][$temp[$value]] \u003d $data;",
        "                }",
        "                $arr1 \u003d $arr3;",
        "            }",
        "",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "",
        "",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027  \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 \";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        };",
        "",
        "        $cnt \u003d count($records);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "        }",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "        if (isset($arrtime)) {",
        "",
        "            $arr3[0] \u003d $arrtime;",
        "            $arr3[1] \u003d array_map(function () {",
        "                return 0;",
        "            }, $arrtime);",
        "            $temp \u003d [];",
        "            foreach ($arrtime as $key \u003d\u003e $val) {",
        "                $temp[$val] \u003d $key;",
        "            }",
        "",
        "            foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                $data \u003d $arr1[1][$key];",
        "                $arr3[1][$temp[$value]] \u003d $data;",
        "            }",
        "            $arr1 \u003d $arr3;",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "    }",
        "",
        "",
        "    /**",
        "     * 获取车辆资源动态匹配统计数据",
        "     */",
        "    public function getDynamicMatchData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $this-\u003epredo(\u0027v_vehicle_dynimic\u0027, \u0027v_vehicle_dynimic\u0027, 17);",
        "",
        "        \\Log::info(\"能耗统计查询\");",
        "",
        "        $info \u003d $this-\u003equeryDepts($this-\u003eparams);",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     * 获取车速统计数据",
        "     */",
        "    public function getSpeedStat(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027vehicledeviceid\u0027 \u003d\u003e \u0027required\u0027, // 车辆ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $ret \u003d (new BStatVehicleCanData([], $request))-\u003egetSpeedStat($this-\u003eparams);",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $ret);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSingleVehicleInfo",
        "     * @name: 单车分析-获取车辆基本信息",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param:",
        "     *parameter1: vehicleNo,description:车牌号",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSingleVehicleInfo()",
        "    {//todo 异常开门次数",
        "",
        "        $rules \u003d [",
        "            \u0027vehicleNo\u0027 \u003d\u003e \u0027required\u0027, // 数据类型",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $basicInfo \u003d (array)DB::table(\"v_vehicleinfo\")-\u003eselect(\u0027vehicleNo\u0027, \u0027vehicleType\u0027, \u0027motorType\u0027,",
        "            \u0027companyName\u0027, \u0027lineDeptId\u0027, \u0027oilBoxCap\u0027, \u0027airBottleCap\u0027, \u0027batteryCap\u0027, \u0027deviceId\u0027)",
        "            -\u003ewhere(\u0027vehicleNo\u0027, $this-\u003eparams[\u0027vehicleNo\u0027])",
        "            -\u003efirst();",
        "",
        "        $lineType \u003d (array)DB::table(\"v_lineinfo\")-\u003eselect(\u0027lineType\u0027)",
        "            -\u003ewhere(\u0027lineDeptId\u0027, $basicInfo[\u0027lineDeptId\u0027])",
        "            -\u003efirst();",
        "",
        "        $accruedmiles \u003d (array)DB::table(\"t_vehiclemiles\")-\u003eselect(\u0027accruedmiles\u0027)",
        "            -\u003ewhere(\u0027vehicleNo\u0027, $this-\u003eparams[\u0027vehicleNo\u0027])-\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $rundays \u003d (array)DB::table(\"v_vehicle_dynimic\")-\u003eselect(\u0027rundays\u0027)",
        "            -\u003ewhere(\u0027vehicleNo\u0027, $this-\u003eparams[\u0027vehicleNo\u0027])",
        "            -\u003efirst();",
        "",
        "        $energy \u003d (array)DB::table(\"v_vehicleenerysum\")-\u003eselect(\u0027gasHundredMiles\u0027, \u0027fuleHundredMiles\u0027, \u0027elecTotal\u0027, \u0027gasTotal\u0027, \u0027fuleTotal\u0027)",
        "            -\u003ewhere(\u0027vehicleNo\u0027, $this-\u003eparams[\u0027vehicleNo\u0027])-\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $coasting \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as coastingNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027coasting\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $overspeed \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as overspeedNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027overspeed\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $driveInNight \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as driveInNightNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027driveInNight\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $startAccelerationRapidly \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as startAccelerationRapidlyNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027startAccelerationRapidly\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $suddenlySpeedUp \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as suddenlySpeedUpNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027suddenlySpeedUp\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $suddenlyBraking \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as suddenlyBrakingNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027suddenlyBraking\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $coastingWithEngineOff \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as coastingWithEngineOffNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027coastingWithEngineOff\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $openDoorDuringRunning \u003d (array)DB::table(\"stat_driving_violation_summary\")-\u003eselect(\u0027totalNum as openDoorDuringRunningNum\u0027)",
        "            -\u003ewhere(\u0027deviceId\u0027, $basicInfo[\u0027deviceId\u0027])",
        "            -\u003ewhere(\u0027actionType\u0027, \u0027openDoorDuringRunning\u0027)",
        "            -\u003eorderBy(\u0027stat_date\u0027, \u0027desc\u0027)",
        "            -\u003efirst();",
        "",
        "        $ret \u003d array_merge($basicInfo, $lineType, $accruedmiles, $rundays, $energy, $coasting, $overspeed, $driveInNight, $startAccelerationRapidly, $suddenlySpeedUp, $suddenlyBraking, $coastingWithEngineOff, $openDoorDuringRunning);",
        "",
        "        $data \u003d [",
        "            \"vehicleNo\" \u003d\u003e isset($basicInfo[\"vehicleNo\"]) ? $basicInfo[\"vehicleNo\"] : null,",
        "            \u0027vehicleType\u0027 \u003d\u003e isset($basicInfo[\"vehicleType\"]) ? $basicInfo[\"vehicleType\"] : null,",
        "            \u0027motorType\u0027 \u003d\u003e isset($basicInfo[\"motorType\"]) ? $basicInfo[\"motorType\"] : null,",
        "            \u0027companyName\u0027 \u003d\u003e isset($basicInfo[\"companyName\"]) ? $basicInfo[\"companyName\"] : null,",
        "            \u0027lineDeptId\u0027 \u003d\u003e isset($basicInfo[\"lineDeptId\"]) ? $basicInfo[\"lineDeptId\"] : null,",
        "            \u0027oilBoxCap\u0027 \u003d\u003e isset($basicInfo[\"oilBoxCap\"]) ? $basicInfo[\"oilBoxCap\"] : null,",
        "            \u0027airBottleCap\u0027 \u003d\u003e isset($basicInfo[\"airBottleCap\"]) ? $basicInfo[\"airBottleCap\"] : null,",
        "            \u0027batteryCap\u0027 \u003d\u003e isset($basicInfo[\"batteryCap\"]) ? $basicInfo[\"batteryCap\"] : null,",
        "            \u0027deviceId\u0027 \u003d\u003e isset($basicInfo[\"deviceId\"]) ? $basicInfo[\"deviceId\"] : null,",
        "            \"lineType\" \u003d\u003e isset($lineType[\"lineType\"]) ? $lineType[\"lineType\"] : null,",
        "            \"accruedmiles\" \u003d\u003e isset($accruedmiles[\"accruedmiles\"]) ? $accruedmiles[\"accruedmiles\"] : null,",
        "            \"rundays\" \u003d\u003e isset($rundays[\"rundays\"]) ? $rundays[\"rundays\"] : null,",
        "            \"gasHundredMiles\" \u003d\u003e isset($energy[\"gasHundredMiles\"]) ? $energy[\"gasHundredMiles\"] : null,",
        "            \"fuleHundredMiles\" \u003d\u003e isset($energy[\"fuleHundredMiles\"]) ? $energy[\"fuleHundredMiles\"] : null,",
        "            \"elecTotal\" \u003d\u003e isset($energy[\"elecTotal\"]) ? $energy[\"elecTotal\"] : null,",
        "            \"gasTotal\" \u003d\u003e isset($energy[\"gasTotal\"]) ? $energy[\"gasTotal\"] : null,",
        "            \"fuleTotal\" \u003d\u003e isset($energy[\"fuleTotal\"]) ? $energy[\"fuleTotal\"] : null,",
        "            \"coastingNum\" \u003d\u003e isset($coasting[\"coastingNum\"]) ? $coasting[\"coastingNum\"] : null,",
        "            \"overspeedNum\" \u003d\u003e isset($overspeed[\"overspeedNum\"]) ? $overspeed[\"overspeedNum\"] : null,",
        "            \"driveInNightNum\" \u003d\u003e isset($driveInNight[\"driveInNightNum\"]) ?",
        "                $driveInNight[\"driveInNightNum\"] : null,",
        "            \"startAccelerationRapidlyNum\" \u003d\u003e isset($startAccelerationRapidly[\"startAccelerationRapidlyNum\"]) ?",
        "                $startAccelerationRapidly[\"startAccelerationRapidlyNum\"] : null,",
        "            \"suddenlySpeedUpNum\" \u003d\u003e isset($suddenlySpeedUp[\"suddenlySpeedUpNum\"]) ?",
        "                $suddenlySpeedUp[\"suddenlySpeedUpNum\"] : null,",
        "            \"suddenlyBrakingNum\" \u003d\u003e isset($suddenlyBraking[\"suddenlyBrakingNum\"]) ?",
        "                $suddenlyBraking[\"suddenlyBrakingNum\"] : null,",
        "            \"coastingWithEngineOffNum\" \u003d\u003e isset($coastingWithEngineOff[\"coastingWithEngineOffNum\"]) ?",
        "                $coastingWithEngineOff[\"coastingWithEngineOffNum\"] : null,",
        "            \"openDoorDuringRunningNum\" \u003d\u003e isset($openDoorDuringRunning[\"openDoorDuringRunningNum\"]) ?",
        "                $openDoorDuringRunning[\"openDoorDuringRunningNum\"] : null,",
        "        ];",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, [\u0027data\u0027 \u003d\u003e $data]);",
        "",
        "    }",
        "",
        "    public function getLineDangerPoints()",
        "    {",
        "        $rules \u003d [",
        "            \u0027dataType\u0027 \u003d\u003e \u0027required|in:1,2\u0027, // 数据类型数:1-故障，2-违规",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required:in:0,1,2,3,4\u0027, // 时间类型：1-天, 2-近七天, 3-当月, 4-当年",
        "            \u0027lineDeptId\u0027 \u003d\u003e \u0027required | exists:mauth_dept,dept_id\u0027, // 线路机构ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "// 日期类型转换，前端和数据库表",
        "        $timeType \u003d $this-\u003eparams[\u0027timeType\u0027];",
        "        switch ($timeType) {",
        "            case 0:",
        "                $data_type \u003d 1;",
        "                $data_date \u003d $datebegin \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "                break;",
        "            case 1:",
        "                $data_type \u003d 2;",
        "                $data_date \u003d $datebegin \u003d date(\u0027Y-m-d\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "                break;",
        "            case 2:",
        "                $data_type \u003d 3;",
        "                $data_date \u003d $datebegin \u003d date(\u0027Y-m-01\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "                break;",
        "            case 3:",
        "                $data_type \u003d 3;",
        "                $data_date \u003d $datebegin \u003d date(\u0027Y-m-01\u0027, strtotime(\u0027-1 day -1 month\u0027, time()));",
        "                break;",
        "            case 4:",
        "                $data_type \u003d 4;",
        "                $data_date \u003d $datebegin \u003d date(\u0027Y-01-01\u0027, strtotime(\u0027-1 day\u0027, time()));",
        "                break;",
        "            case 5:",
        "                $data_type \u003d 4;",
        "                $data_date \u003d $datebegin \u003d date(\u0027Y-01-01\u0027, strtotime(\u0027-1 day - 1 year\u0027, time()));",
        "                break;",
        "        }",
        "",
        "        $data \u003d DB::table(\u0027stat_line_alarm_violation_position_cluster\u0027)",
        "            -\u003ewhere(\"statistics_type\", $this-\u003eparams[\u0027dataType\u0027])",
        "            -\u003ewhere(\"data_type\", $data_type)",
        "            -\u003ewhere(\"line_dept_id\", $this-\u003eparams[\u0027lineDeptId\u0027])",
        "            -\u003ewhere(\u0027data_date\u0027, $data_date)",
        "            -\u003ejoin(\u0027mauth_dept\u0027, function ($join) {",
        "                $join-\u003eon(\u0027stat_line_alarm_violation_position_cluster.line_dept_id\u0027,",
        "                    \u0027\u003d\u0027, \u0027mauth_dept.dept_id\u0027);",
        "            })",
        "            -\u003eselect(\"name\", \"center_gps_x\", \"center_gps_y\", \"avg_distance\", \"count\")",
        "            -\u003eget();",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, [\u0027data\u0027 \u003d\u003e $data]);",
        "    }",
        "",
        "    public function getUserIdViolationType()",
        "    {",
        "",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d -1;",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $userid \u003d DB::table(\u0027v_lineinfo\u0027)-\u003ewhere($deptlevel, $id)-\u003eselect(\u0027companyDeptId\u0027)-\u003efirst();",
        "        if (empty($userid)) {",
        "            $userid \u003d -1;",
        "        } else {",
        "            $userid \u003d $userid-\u003ecompanyDeptId;",
        "            $tableHead \u003d DB::table(\u0027driving_violation_type\u0027)-\u003ewhere(\u0027deptid\u0027, \u0027\u003d\u0027, $userid)",
        "                -\u003eselect(\u0027violationName\u0027, \u0027violationeName\u0027)-\u003eget();",
        "            if (empty($tableHead)) {",
        "                $userid \u003d -1;",
        "            }",
        "        }",
        "",
        "        return $userid;",
        "    }",
        "",
        "    public function getUserIdViolationStyle()",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d -1;",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $userid \u003d DB::table(\u0027v_lineinfo\u0027)-\u003ewhere($deptlevel, $id)-\u003eselect(\u0027companyDeptId\u0027)-\u003efirst();",
        "        if (empty($userid)) {",
        "            $userid \u003d -1;",
        "        } else {",
        "            $userid \u003d $userid-\u003ecompanyDeptId;",
        "            $tableHead \u003d DB::table(\u0027t_driving_style_violation\u0027)-\u003ewhere(\u0027deptId\u0027, \u0027\u003d\u0027, $userid)",
        "                -\u003eselect(\u0027id\u0027)-\u003eget();",
        "            if (empty($tableHead)) {",
        "                $userid \u003d -1;",
        "            }",
        "        }",
        "",
        "        return $userid;",
        "    }",
        "",
        "    public function getUserIdViolationAssess()",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d -1;",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $userid \u003d DB::table(\u0027v_lineinfo\u0027)-\u003ewhere($deptlevel, $id)-\u003eselect(\u0027companyDeptId\u0027)-\u003efirst();",
        "        if (empty($userid)) {",
        "            $userid \u003d -1;",
        "        } else {",
        "            $userid \u003d $userid-\u003ecompanyDeptId;",
        "            $tableHead \u003d DB::table(\u0027t_driving_style_assess\u0027)-\u003ewhere(\u0027deptId\u0027, \u0027\u003d\u0027, $userid)",
        "                -\u003eselect(\u0027id\u0027)-\u003eget();",
        "            if (empty($tableHead)) {",
        "                $userid \u003d -1;",
        "            }",
        "        }",
        "",
        "",
        "        return $userid;",
        "    }",
        "",
        "    public function getUserIdViolationAdvice()",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d -1;",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $userid \u003d DB::table(\u0027v_lineinfo\u0027)-\u003ewhere($deptlevel, $id)-\u003eselect(\u0027companyDeptId\u0027)-\u003efirst();",
        "        if (empty($userid)) {",
        "            $userid \u003d -1;",
        "        } else {",
        "            $userid \u003d $userid-\u003ecompanyDeptId;",
        "            $tableHead \u003d DB::table(\u0027t_driving_style_advice\u0027)-\u003ewhere(\u0027deptId\u0027, \u0027\u003d\u0027, $userid)",
        "                -\u003eselect(\u0027id\u0027)-\u003eget();",
        "            if (empty($tableHead)) {",
        "                $userid \u003d -1;",
        "            }",
        "        }",
        "",
        "",
        "        return $userid;",
        "    }",
        "",
        "    public function getAverageSpeedforHour(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $sql \u003d \"SELECT ROUND(AVG(VALUE),1) AS speed ,HOUR  AS stat_date   FROM  stat_speed_analyse_forhour WHERE ",
        "DeviceId IN (SELECT deviceid FROM t_vehicleinfo a INNER JOIN t_mauth_dept b ON a.`deptId`\u003db.`lineDeptId` \";",
        "",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptId\u0027;",
        "        };",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        if (empty($motorType)) {",
        "            $motorType \u003d \u0027%\u0027;",
        "        };",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day  \";",
        "                $fixed \u003d \" and type\u003d\u0027day\u0027 group by hour \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $fixed \u003d \" and type\u003d\u0027day\u0027 group by hour \";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                $fixed \u003d \" and type\u003d\u0027month\u0027 group by hour \";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month \";",
        "                $fixed \u003d \" and type\u003d\u0027month\u0027 group by hour \";",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month  \";",
        "                $fixed \u003d \" and type\u003d\u0027year\u0027 group by hour \";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year \";",
        "                $fixed \u003d \" and type\u003d\u0027year\u0027 group by hour \";",
        "                break;",
        "        }",
        "",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 and motorType like $motorType) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and motorType like $motorType) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "            $records \u003d DB::select($sql);",
        "",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            }",
        "            $cnt \u003d count($records);",
        "            $middle \u003d [];",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $middle[\u0027speed\u0027][] \u003d $records[$i]-\u003espeed;",
        "                $middle[\u0027time\u0027][] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            $records \u003d [];",
        "            for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                $records[\u0027time\u0027][$i] \u003d $i;",
        "                $records[\u0027speed\u0027][$i] \u003d \u00270\u0027;",
        "            }",
        "            foreach ($middle[\u0027time\u0027] as $key \u003d\u003e $val) {",
        "                $records[\u0027speed\u0027][$val] \u003d $middle[\u0027speed\u0027][$key];",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 and motorType like $motorType) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 and motorType like $motorType)\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        }",
        "        $cnt \u003d count($records);",
        "        $middle \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $middle[\u0027speed\u0027][] \u003d $records[$i]-\u003espeed;",
        "            $middle[\u0027time\u0027][] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "        $records \u003d [];",
        "        for ($i \u003d 0; $i \u003c 24; $i++) {",
        "            $records[\u0027time\u0027][$i] \u003d $i;",
        "            $records[\u0027speed\u0027][$i] \u003d \u00270\u0027;",
        "        }",
        "        foreach ($middle[\u0027time\u0027] as $key \u003d\u003e $val) {",
        "            $records[\u0027speed\u0027][$val] \u003d $middle[\u0027speed\u0027][$key];",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAverageSpeedforHourNew",
        "     * @name: 平均车速 添加偏移量getAverageSpeedforHourNew，getAverageSpeedforHourNew（每天就偏移量）",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: motorType,description:车辆类型",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: deptid,description:机构ID",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAverageSpeedforHourNew(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        /* $sql \u003d \"SELECT ROUND(AVG(VALUE),1) AS speed ,HOUR  AS stat_date   FROM  stat_speed_analyse_forhour WHERE",
        " DeviceId IN (SELECT deviceid FROM t_vehicleinfo a INNER JOIN t_mauth_dept b ON a.`deptId`\u003db.`lineDeptId` \";*/",
        "        $sql \u003d \"SELECT c.HOUR AS stat_date,",
        " ROUND(AVG(VALUE*(substring_index(substring_index(d.offset_content,\u0027\\\",\\\"offset\\\":\u0027,1),\u0027\\\":{\\\"res\\\":\\\"\u0027,-1))+(substring_index(substring_index(d.offset_content,\u0027\\\",\\\"unit\\\":\u0027,1),\u0027\\\",\\\"offset\\\":\\\"\u0027,-1))), 1) AS speed",
        "                    FROM t_vehicleinfo a,t_mauth_dept b,",
        "                        stat_speed_analyse_forhour c,",
        "                        t_vehicleanalog_offset d",
        "                    WHERE",
        "                        a.`deptId` \u003d b.`lineDeptId`\";",
        "",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptId\u0027;",
        "        };",
        "        $motorType \u003d $request-\u003eget(\u0027motorType\u0027);",
        "        $motorTypeSql \u003d \u00271\u003d1\u0027;",
        "        if (!empty($motorType)) {",
        "            $motorTypeSql \u003d \" a.motorType \u003d $motorType\";",
        "        };",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \"c.stat_date\u003d CURRENT_DATE()-interval 1 day  \";",
        "                $fixed \u003d \" and c.type\u003d\u0027day\u0027 GROUP BY c.HOUR\";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" c.stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and c.stat_date\u003c CURRENT_DATE()\";",
        "                $fixed \u003d \" and c.type\u003d\u0027day\u0027 GROUP BY c.HOUR\";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" c.stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                $fixed \u003d \" and c.type\u003d\u0027month\u0027 GROUP BY c.HOUR\";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" c.stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month \";",
        "                $fixed \u003d \" and c.type\u003d\u0027month\u0027  GROUP BY c.HOUR\";",
        "                break;",
        "            case 4: // this year",
        "                $dataconditon \u003d \" c.stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month  \";",
        "                $fixed \u003d \" and c.type\u003d\u0027year\u0027  GROUP BY c.HOUR\";",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" c.stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year \";",
        "                $fixed \u003d \" and c.type\u003d\u0027year\u0027  GROUP BY c.HOUR\";",
        "                break;",
        "        }",
        "",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" and b.$deptlevel\u003d$id and b.$depttype \u003d \u0027$deptid\u0027 and $motorTypeSql and a.DeviceId \u003d c.DeviceId AND d.id \u003d a.offsetId \";",
        "            } else {",
        "                $fixedCondtion \u003d \" and b.$deptlevel\u003d$id and $motorTypeSql and a.DeviceId \u003d c.DeviceId AND d.id \u003d a.offsetId \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "            $records \u003d DB::select($sql);",
        "",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            }",
        "            $cnt \u003d count($records);",
        "            $middle \u003d [];",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $middle[\u0027speed\u0027][] \u003d $records[$i]-\u003espeed;",
        "                $middle[\u0027time\u0027][] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "            $records \u003d [];",
        "            for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                $records[\u0027time\u0027][$i] \u003d $i;",
        "                $records[\u0027speed\u0027][$i] \u003d \u00270\u0027;",
        "            }",
        "            foreach ($middle[\u0027time\u0027] as $key \u003d\u003e $val) {",
        "                $records[\u0027speed\u0027][$val] \u003d $middle[\u0027speed\u0027][$key];",
        "            }",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" and  b.$depttype \u003d \u0027$deptid\u0027 and $motorTypeSql and a.DeviceId \u003d c.DeviceId AND d.id \u003d a.offsetId \";",
        "        } else {",
        "            $fixedCondtion \u003d \" and $motorTypeSql and a.DeviceId \u003d c.DeviceId AND d.id \u003d a.offsetId \";",
        "        };",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "        $records \u003d DB::select($sql);",
        "        if (empty($records)) {",
        "            return $this-\u003esetJsonResponse(REPEAT, $records);",
        "        }",
        "        $cnt \u003d count($records);",
        "        $middle \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $middle[\u0027speed\u0027][] \u003d $records[$i]-\u003espeed;",
        "            $middle[\u0027time\u0027][] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "        $records \u003d [];",
        "        for ($i \u003d 0; $i \u003c 24; $i++) {",
        "            $records[\u0027time\u0027][$i] \u003d $i;",
        "            $records[\u0027speed\u0027][$i] \u003d \u00270\u0027;",
        "        }",
        "        foreach ($middle[\u0027time\u0027] as $key \u003d\u003e $val) {",
        "            $records[\u0027speed\u0027][$val] \u003d $middle[\u0027speed\u0027][$key];",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "    }",
        "",
        "",
        "    public function cancelAlarm(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        $id \u003d $request-\u003eget(\u0027id\u0027);",
        "",
        "",
        "        $exsist \u003d DB::select(\"select * from t_alarmsummary_unfinished where id\u003d$id\");",
        "",
        "        if (empty($exsist)) {",
        "            return $this-\u003esetJsonResponse(SUCCESS, \u0027已自动取消\u0027);",
        "        }",
        "",
        "        $dismissTime \u003d Carbon::parse($exsist[0]-\u003ealarmstarttime)-\u003eaddSeconds($exsist[0]-\u003eduration);",
        "        $exsist[0]-\u003edismissTime \u003d $dismissTime-\u003etoDateTimeString();",
        "        $dismissTime \u003d $exsist[0]-\u003edismissTime;",
        "        try {",
        "            DB::beginTransaction();",
        "            DB::insert(\"insert into t_alarmsummary(vehicleNo,deviceId,driverName,alarmType,type,parenttype,alarmstarttime,duration,alarmlocation,motorType,dismissTime,",
        "                            alarmLevel,statTime,gx,gy,lastAlarmTIme,alarmtypeid,alarmFlag,companyName,companyDeptid,subCompanyName,subCompanyDeptId,",
        "                            groupName,groupDeptId,lineName,lineDeptId,finished) ",
        "                            select vehicleNo,deviceId,driverName,alarmTYpe,type,parenttype,alarmstarttime,duration,alarmlocation,motorType,\u0027$dismissTime\u0027,",
        "                            alarmLevel,statTime,gx,gy,lastAlarmTime,alarmtypeid,alarmFlag,companyName,companyDeptid,subCompanyName,subCompanyDeptId,",
        "                            groupName,groupDeptId,lineName,lineDeptId,1 from t_alarmsummary_unfinished where id\u003d$id\");",
        "",
        "            DB::delete(\"delete from t_alarmsummary_unfinished where id\u003d$id\");",
        "            DB::commit();",
        "            $ret \u003d $this-\u003esetJsonResponse(SUCCESS);",
        "        } catch (QueryException $e) {",
        "            DB::rollBack();//失败回滚",
        "            $ret \u003d $this-\u003esetJsonResponse([\u0027code\u0027 \u003d\u003e 2, \u0027msg\u0027 \u003d\u003e $e-\u003eerrorInfo]);",
        "        } catch (Exception $e) {",
        "            DB::rollBack();//失败回滚",
        "            $ret \u003d $this-\u003esetJsonResponse([\u0027code\u0027 \u003d\u003e 0, \u0027msg\u0027 \u003d\u003e $e-\u003egetMessage()]);",
        "        }",
        "",
        "",
        "        return $ret;",
        "",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, \u0027已手动取消\u0027);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getVehicleInfoSystemType",
        "     * @name: 明细报表-标签数据",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     * @return: array",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getVehicleInfoSystemType(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $parenttype \u003d DB::table(\u0027t_vehicleinfo_system_type\u0027)-\u003egroupBy(\u0027parenttype\u0027)-\u003eselect(\u0027parenttype\u0027)-\u003eget();",
        "",
        "        $cnt \u003d count($parenttype);",
        "        $arrParenttype \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arrParenttype[$i] \u003d $parenttype[$i]-\u003eparenttype;",
        "        }",
        "",
        "",
        "        $arrData \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $type \u003d DB::table(\u0027t_vehicleinfo_system_type\u0027)-\u003ewhere(\u0027parenttype\u0027, $arrParenttype[$i])-\u003eorderBy(\u0027type\u0027)-\u003eselect(\u0027type\u0027)-\u003eget();",
        "",
        "",
        "            $cnt2 \u003d count($type);",
        "            $arrType \u003d [];",
        "            for ($n \u003d 0; $n \u003c $cnt2; $n++) {",
        "                $arrType[$n] \u003d $type[$n]-\u003etype;",
        "            }",
        "            $son \u003d [];",
        "            for ($m \u003d 0; $m \u003c $cnt2; $m++) {",
        "                $son[$m] \u003d [\u0027name\u0027 \u003d\u003e \"$arrType[$m]\"];",
        "            }",
        "",
        "            $arrData[$i] \u003d [",
        "                \u0027name\u0027 \u003d\u003e \"$arrParenttype[$i]\",",
        "                \u0027son\u0027 \u003d\u003e $son",
        "            ];",
        "",
        "        }",
        "        return $arrData;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/alarmChartMake",
        "     * @name: 故障系统图表",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:查询类型",
        "     *parameter2: deptid,description:查询ID",
        "     *parameter3: dataType  ,description:数据类型",
        "     *parameter4: bigSystemType  ,description:故障类型",
        "     *parameter5: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function alarmChartMake(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "",
        "        $rules \u003d [",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5,6\u0027, // 时间类型",
        "            \u0027depttype\u0027 \u003d\u003e \u0027required\u0027,",
        "            //         \u0027bigSystemType\u0027 \u003d\u003e \u0027required\u0027,",
        "            //            \u0027systemType\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027dataType\u0027 \u003d\u003e \u0027required|in:1,2\u0027,//1:比例图；2:折线图",
        "            //            \u0027alarmType\u0027 \u003d\u003e \u0027required\u0027,",
        "",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        $system \u003d $request-\u003eget(\u0027systemType\u0027);",
        "        $bigSystem \u003d $request-\u003eget(\u0027bigSystemType\u0027);",
        "        if (isset($system)) {",
        "            $system \u003d $request-\u003eget(\u0027systemType\u0027);",
        "        } else {",
        "            $system \u003d \u0027%\u0027;",
        "        };",
        "        if (isset($bigSystem)) {",
        "            $bigSystem \u003d $request-\u003eget(\u0027bigSystemType\u0027);",
        "            $bigSystem \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $bigSystem);",
        "        } else {",
        "            $bigSystem \u003d \u0027%\u0027;",
        "        }",
        "",
        "        if (isset($system)) {",
        "",
        "            $system \u003d $this-\u003esystemConvertCode(\"systemType\", $system);",
        "        }",
        "        $dataType \u003d $request-\u003eget(\u0027dataType\u0027); // 折线 比例  多折线",
        "",
        "        $timeType \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        $startDate \u003d \u0027\u0027;",
        "        $endDate \u003d \u0027\u0027;",
        "        if ($timeType \u003d\u003d 6) {",
        "            $startDate \u003d $request-\u003eget(\u0027startDate\u0027);",
        "            $endDate \u003d $request-\u003eget(\u0027endDate\u0027);",
        "        }",
        "        if ($dataType \u003d\u003d 1) {",
        "            $table \u003d \u0027api_breakdowns_month\u0027;",
        "            $deptlevel \u003d null;",
        "            switch ($dept[\u0027level\u0027]) {",
        "",
        "                case 0:",
        "                    break;",
        "                case 1:",
        "                    $deptlevel \u003d \"companyDeptId\";",
        "                    $id \u003d $dept[\u0027dept_id\u0027];",
        "                    break;",
        "                case 2:",
        "                    $deptlevel \u003d \"subCompanyDeptId\";",
        "                    $id \u003d $dept[\u0027dept_id\u0027];",
        "                    break;",
        "                case 3:",
        "                    $deptlevel \u003d \"groupDeptId\";",
        "                    $id \u003d $dept[\u0027dept_id\u0027];",
        "                    break;",
        "                case 4:",
        "                    $deptlevel \u003d \"lineDeptId\";",
        "                    $id \u003d $dept[\u0027dept_id\u0027];",
        "                    break;",
        "",
        "            }",
        "",
        "            switch ($timeType) {",
        "                case 0: //last day",
        "                    $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day  \";",
        "                    $table \u003d \u0027api_breakdowns\u0027;",
        "                    break;",
        "                case 1:  // 7day",
        "                    $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                    $table \u003d \u0027api_breakdowns\u0027;",
        "                    break;",
        "                case 2:  // this month",
        "                    $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                    break;",
        "                case 3:  // last month",
        "                    $dataconditon \u003d \" stat_date\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month \";",
        "                    break;",
        "                case 4: // this year",
        "                    $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                    break;",
        "                case 5: // last year",
        "                    $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                        stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                    break;",
        "                case 6: // last year",
        "                    $dataconditon \u003d \" 1\u003d1 \";",
        "                    $startdate \u003d $request-\u003eget(\u0027startDate\u0027);",
        "                    $enddate \u003d $request-\u003eget(\u0027endDate\u0027);",
        "                    if (isset($startdate) \u0026\u0026 isset($enddate)) {",
        "                        $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "                    }",
        "                    break;",
        "            }",
        "",
        "// $sqlChart \u003d \"SELECT  alarmType, SUM(cnt) AS cnt FROM (SELECT alarmtypename AS alarmType ,SUM(total) AS `cnt` FROM $table WHERE",
        "//                        alarmtypename IN (SELECT alarmtypename FROM t_vehiclealarmtype WHERE `type` like \u0027$system\u0027 and parenttype like \u0027$bigSystem\u0027",
        "//                         union all  SELECT alarmtypename FROM t_vehiclealarmtype2 WHERE `type` like \u0027$system\u0027 and parenttype like \u0027$bigSystem\u0027   )",
        "//                         AND vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b",
        "//                        INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId\";",
        "",
        "            $sqlChart \u003d \"SELECT  alarmType, SUM(cnt) AS cnt FROM (SELECT alarmtypename AS alarmType ,SUM(total) AS `cnt` FROM $table WHERE",
        "                         vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId\";",
        "",
        "            if ($deptlevel !\u003d null) {",
        "                if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                    $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027) \";",
        "                } else {",
        "                    $fixedCondtion \u003d \" where $deptlevel\u003d$id) \";",
        "                };",
        "                //",
        "                $sqlChart .\u003d $fixedCondtion . \"and\" . $dataconditon . \"GROUP BY alarmtypename ORDER BY cnt DESC )c where alarmType IN (",
        "                  SELECT alarmtypename AS alarmType FROM t_vehiclealarmtype WHERE `type` like \u0027$system\u0027 and parenttype like \u0027$bigSystem\u0027  ",
        "                  union all  ",
        "                  SELECT alarmtypename AS alarmType FROM t_vehiclealarmtype2 WHERE `type` like \u0027$system\u0027 and parenttype like \u0027$bigSystem\u0027)  GROUP BY alarmType \";",
        "                $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sqlChart);",
        "",
        "                //  $records\u003d DB::select($sql);",
        "",
        "",
        "                if (empty($records)) {",
        "                    return $this-\u003esetJsonResponse(REPEAT, $records);",
        "                };",
        "",
        "                return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "            };",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "            };",
        "            //",
        "            $sqlChart .\u003d $fixedCondtion . \"and\" . $dataconditon . \"GROUP BY alarmtypename ORDER BY cnt DESC )c where alarmType IN (",
        "                  SELECT alarmtypename AS alarmType FROM t_vehiclealarmtype WHERE `type` like \u0027$system\u0027 and parenttype like \u0027$bigSystem\u0027  ",
        "                  union all  ",
        "                  SELECT alarmtypename AS alarmType FROM t_vehiclealarmtype2 WHERE `type` like \u0027$system\u0027 and parenttype like \u0027$bigSystem\u0027)  GROUP BY alarmType \";",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabase($sqlChart);",
        "",
        "            //  $records\u003d DB::select($sql);",
        "            if (empty($records)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $records);",
        "            };",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        } elseif ($dataType \u003d\u003d 2) {",
        "            $rules \u003d [",
        "                \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "                \u0027timeType\u0027 \u003d\u003e \u0027required|in:0,1,2,3,4,5,6\u0027, // 时间类型",
        "            ];",
        "",
        "            $this-\u003eapiParamVerify($rules);",
        "            $ret \u003d $this-\u003egetRecordsSystemAlarmTrends($this-\u003eparams);",
        "",
        "            if (empty($ret)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, $ret);",
        "            };",
        "            $datatype \u003d 0;",
        "            $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "            if ($jj !\u003d null) {",
        "                $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "            };",
        "            switch ($datatype) {",
        "                case 0: //last day",
        "                    for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                        $middle[$i] \u003d $i;",
        "                    }",
        "                    break;",
        "                case 1:  // 7day",
        "                    $inttime \u003d 7;",
        "                    for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                        $middle[$i] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day\", time()));",
        "                        $inttime--;",
        "                    }",
        "                    break;",
        "                case 2:  // this month",
        "                    $day \u003d (int)date(\u0027d\u0027);",
        "                    for ($i \u003d 0; $i \u003c $day; $i++) {",
        "                        $middle[$i] \u003d $i + 1;",
        "                    }",
        "                    break;",
        "                case 3:  // last month",
        "                    $j \u003d date(\"m\") - 1;",
        "                    $y \u003d date(\"Y\");",
        "                    $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                    $k \u003d date(\"d\");",
        "                    $days \u003d intval($days);",
        "                    $k \u003d $k + $days - 1;",
        "                    for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                        $middle[$i] \u003d date(\u0027d\u0027, strtotime(\"-$k day \", time()));",
        "                        $k--;",
        "                    }",
        "                    break;",
        "                case 4: // this year",
        "                    $month \u003d date(\"m\");",
        "                    for ($i \u003d 0; $i \u003c $month; $i++) {",
        "                        $middle[$i] \u003d $i + 1;",
        "                    }",
        "",
        "                    break;",
        "                case 5: // last year",
        "                    for ($i \u003d 0; $i \u003c 12; $i++) {",
        "                        $middle[$i] \u003d $i + 1;",
        "                    }",
        "                    break;",
        "                case 6: // advanced query",
        "                    //日期",
        "                    //转换成时间戳",
        "                    $startDatestrap \u003d explode(\"-\", $startDate);",
        "                    $endDatestrap \u003d explode(\"-\", $endDate);",
        "                    $diffMonth \u003d abs($endDatestrap[0] - $startDatestrap[0]) * 12 - $startDatestrap[1] + abs($endDatestrap[1]);",
        "                    if ($diffMonth \u003e 1) {",
        "                        for ($i \u003d 0; $i \u003c $diffMonth; $i++) {",
        "                            //根据开始结束月份，主键累加；逢十二进一 例如：开始月份2019-02-01 结束时间 2020-04-01 相差月份\u003d（2020-2019）*12 -2+4 \u003d 14",
        "                            //月份在图表横轴展示为：[2 3 4 .... 12 1 2  3]",
        "                            $middle[$i] \u003d (($i + $startDatestrap[1] - 1) % 12) + 1;",
        "                        }",
        "                    } else {",
        "                        $day \u003d date(\"t\", strtotime($startDate));",
        "                        for ($i \u003d 0; $i \u003c $day; $i++) {",
        "                            $middle[$i] \u003d $i + 1;",
        "                        }",
        "                    }",
        "                    break;",
        "",
        "            }",
        "",
        "            $records \u003d [\u0027data\u0027 \u003d\u003e $ret, \u0027time\u0027 \u003d\u003e $middle];",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        }",
        "",
        "    }",
        "",
        "    public function getRecordsSystemAlarmTrends($data)",
        "    {",
        "",
        "",
        "        $depttype \u003d \u0027lineDeptId\u0027;",
        "        if (isset($data[\u0027depttype\u0027])) {",
        "            $depttype \u003d $data[\u0027depttype\u0027];",
        "        };",
        "        $deptid \u003d $data[\u0027deptid\u0027];",
        "        //设备号转车牌号",
        "        if (0 \u003d\u003d strcasecmp(\"deviceId\", $depttype)) {",
        "            $depttype \u003d \"vehicleNo\";",
        "            $vehicleInfo \u003d DB::table(\"t_vehicleinfo\")",
        "                -\u003ewhere(\"deviceId\", $deptid)",
        "                -\u003eselect(\"vehicleNo\")-\u003efirst();",
        "            if ($vehicleInfo !\u003d null) {",
        "                $deptid \u003d $vehicleInfo-\u003evehicleNo;",
        "            } else {",
        "                $deptid \u003d \"\";",
        "            }",
        "        }",
        "        $systemType \u003d \u0027%\u0027;",
        "        if (isset($data[\u0027systemType\u0027])) {",
        "            $systemType \u003d $data[\u0027systemType\u0027];",
        "            $systemType \u003d $this-\u003esystemConvertCode(\"systemType\", $systemType);",
        "        };",
        "        $bigSystemType \u003d \u0027%\u0027;",
        "        if (isset($data[\u0027bigSystemType\u0027])) {",
        "            $bigSystemType \u003d $data[\u0027bigSystemType\u0027];",
        "            $bigSystemType \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $bigSystemType);",
        "        };",
        "        $alarmType \u003d \u0027%\u0027;",
        "        if (isset($data[\u0027alarmType\u0027])) {",
        "            $alarmType \u003d $data[\u0027alarmType\u0027];",
        "        };",
        "        $startDate \u003d \u0027\u0027;",
        "        if (isset($data[\u0027startDate\u0027])) {",
        "            $startDate \u003d $data[\u0027startDate\u0027];",
        "        };",
        "        $endDate \u003d \u0027\u0027;",
        "        if (isset($data[\u0027endDate\u0027])) {",
        "            $endDate \u003d $data[\u0027endDate\u0027];",
        "        };",
        "        $timeType \u003d $data[\u0027timeType\u0027];",
        "        DB::statement(DB::raw(\"SET @@GROUP_CONCAT_MAX_LEN \u003d 1024000;\"));",
        "",
        "        if ($timeType \u003d\u003d 6) {",
        "            //转换成时间戳",
        "            $startDatestrap \u003d explode(\"-\", $startDate);",
        "            $endDatestrap \u003d explode(\"-\", $endDate);",
        "            if (abs($endDatestrap[0] - $startDatestrap[0]) * 12 - $startDatestrap[1] + abs($endDatestrap[1]) \u003e 1) {",
        "                //时间间隔大于一个月，按月查",
        "                DB::statement(DB::raw(\"CALL  p_api_breakdownstrendforbreak_forsystemtype_new($timeType,\u0027$startDate\u0027,\u0027$endDate\u0027,\u0027$deptid\u0027,\u0027$depttype\u0027,\u0027$systemType\u0027,\u0027$bigSystemType\u0027,\u0027$alarmType\u0027,@r);\"));",
        "            } else {",
        "                //时间间隔一个月，按天查",
        "                DB::statement(DB::raw(\"CALL  p_api_breakdownstrendforbreak_forsystemtype_plus($timeType,\u0027$startDate\u0027,\u0027$endDate\u0027,\u0027$deptid\u0027,\u0027$depttype\u0027,\u0027$systemType\u0027,\u0027$bigSystemType\u0027,\u0027$alarmType\u0027,@r);\"));",
        "            }",
        "        } else {",
        "            DB::statement(DB::raw(\"CALL  p_api_breakdownstrendforbreak_forsystemtype($timeType,\u0027$deptid\u0027,\u0027$depttype\u0027,\u0027$systemType\u0027,\u0027$bigSystemType\u0027,\u0027$alarmType\u0027,@r);\"));",
        "        }",
        "        $ret \u003d DB::select(\"select @r as data\");",
        "",
        "",
        "        return json_decode(($ret[0]-\u003edata), TRUE);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportSystemAlarm",
        "     * @name: 导出故障信息",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: count,description:行数",
        "     *parameter2: findkey,description:查询键",
        "     *parameter3: findVal,description:查询值",
        "     *parameter4: startDate,description:开始时间",
        "     *parameter5: endDate,description:结束时间",
        "     *parameter6: findKeyEqual1,description:查询键",
        "     *parameter7: findValEqual1,description:查询值",
        "     *parameter8: depttype,description:机构类型",
        "     *parameter9: deptid,description:机构ID",
        "     *parameter10: bigSystemType,description:大系统类型",
        "     *parameter11: systemType,description:系统类型",
        "     *parameter12: timeType,description:时间类型",
        "     *parameter13: findKey4,description:查询键",
        "     *parameter14: findKey5,description:查询键",
        "     *parameter15: findVal4,description:查询值",
        "     *parameter16: findVal5,description:查询值",
        "     *parameter17: deptKey,description:组织键",
        "     *parameter18: deptVal,description:组织值",
        "     * @return: Excel",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function exportSystemAlarm(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        if (isset($this-\u003eparams[\u0027systemType\u0027]) \u0026\u0026 $this-\u003eparams[\u0027systemType\u0027] !\u003d \u0027%\u0027) {",
        "            $systemTypeString \u003d $this-\u003eparams[\u0027systemType\u0027];",
        "        } else {",
        "            $systemTypeString \u003d $this-\u003eparams[\u0027bigSystemType\u0027];",
        "        }",
        "        $this-\u003epredo(\u0027system_alarm\u0027, \u0027system_alarm\u0027, 27);",
        "",
        "        \\Log::info(\"系统故障 统计查询\");",
        "",
        "        $data \u003d $this-\u003egetSystemAlarmRecords($this-\u003eparams);",
        "",
        "        $records \u003d end($data);",
        "",
        "        \\Log::info(\"导出系统 故障 列表\");",
        "",
        "",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027system_alarm\u0027, $I18N, $records);//excel表格导出",
        "",
        "",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        $recordsCompanyName \u003d \u0027 \u0027;",
        "",
        "        if (!isset($this-\u003eparams[\u0027depttype\u0027])) {",
        "            $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027lineDeptId\u0027;",
        "        } else {",
        "            $this-\u003eparams[\u0027depttype\u0027] \u003d $this-\u003eformatParam($this-\u003eparams[\u0027depttype\u0027], \u0027id\u0027);",
        "            $this-\u003eparams[\u0027depttype\u0027] \u003d $this-\u003eformatParam($this-\u003eparams[\u0027depttype\u0027], \u0027ID\u0027);",
        "        }",
        "        $recordsCompanyName \u003d DB::table(\u0027v_vehicleinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "        if (count($recordsCompanyName) \u003d\u003d 0) {",
        "            $recordsCompanyName \u003d \u0027 \u0027;",
        "        } else {",
        "            $recordsCompanyName \u003d $recordsCompanyName-\u003ecompanyName;",
        "        }",
        "",
        "        $title \u003d $recordsCompanyName . \"---\";",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日\u0027 . $systemTypeString . \u0027报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日\u0027 . $systemTypeString . \u0027报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天\u0027 . $systemTypeString . \u0027报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月\u0027 . $systemTypeString . \u0027报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月\u0027 . $systemTypeString . \u0027报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年\u0027 . $systemTypeString . \u0027报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年\u0027 . $systemTypeString . \u0027报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d $systemTypeString . \u0027报表---\u0027 . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSystemAlarm",
        "     * @name: 故障系统表格",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSystemAlarm(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $records \u003d $this-\u003egetSystemAlarmData($request);",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027system_alarm\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "",
        "    }",
        "",
        "    public function getSystemAlarmData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027deptid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $this-\u003epredo(\u0027system_alarm\u0027,",
        "            \u0027system_alarm\u0027, 27);",
        "        $records \u003d $this-\u003egetSystemAlarmRecords($this-\u003eparams);//分页",
        "        return $records;",
        "    }",
        "",
        "    /**报警汇总",
        "     * @param getSystemAlarmSummary",
        "     */",
        "",
        "    public function getSystemAlarmSummary(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003eparams[\u0027count\u0027] \u003d 10000;",
        "        $result \u003d $this-\u003egetSystemAlarmSummaryData($request);",
        "",
        "        $ret[\u0027data\u0027] \u003d $result;",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027system_alarm\u0027, $ret, $this-\u003eparams);//添加中英文表头",
        "        $arra \u003d array([",
        "            \"field\" \u003d\u003e \"companyName\",",
        "            \"english\" \u003d\u003e \"companyName\",",
        "            \"chinese\" \u003d\u003e \"总公司\",",
        "            \"show\" \u003d\u003e 1",
        "        ]);",
        "",
        "        array_splice($records[\u0027head\u0027], 0, 0, $arra);",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "",
        "        return $ret;",
        "    }",
        "",
        "    public function getSystemAlarmSummaryData(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        switch ($dept[\u0027original\u0027][\u0027level\u0027]) {",
        "            case 0:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027companyDeptid\u0027;",
        "                break;",
        "            case 1:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027companyDeptid\u0027;",
        "                break;",
        "",
        "            case 2:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027subCompanyDeptid\u0027;",
        "                break;",
        "            case 3:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027groupDeptid\u0027;",
        "                break;",
        "            case 4:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027lineDeptid\u0027;",
        "                break;",
        "            default:",
        "                $this-\u003eparams[\u0027depttype\u0027] \u003d \u0027lineDeptid\u0027;",
        "                break;",
        "        }",
        "        $this-\u003eparams[\u0027deptid\u0027] \u003d $dept[\u0027original\u0027][\u0027dept_id\u0027];",
        "",
        "        $this-\u003epredo(\u0027system_alarm\u0027,",
        "            \u0027system_alarm\u0027, 27);",
        "        $data \u003d $this-\u003egetSystemAlarmRecords($this-\u003eparams, \u0027lineName\u0027, \u0027asc\u0027);//分页",
        "        $result \u003d [];",
        "",
        "        if (isset($data[\u0027data\u0027]) \u0026\u0026 count($data[\u0027data\u0027]) \u003e 0) {",
        "            if (count($data[\u0027data\u0027]) !\u003d 0 \u0026\u0026 $data[\u0027data\u0027] !\u003d null) {",
        "                //提取出结果中的第一个，获取全部的数据",
        "                $base \u003d $data[\u0027data\u0027][0];",
        "                $base \u003d get_object_vars($base);",
        "                foreach ($base as $key \u003d\u003e $val) {",
        "                    $base[$key] \u003d null;",
        "                }",
        "                $result_init \u003d $this-\u003egetDeptArr($base, $data[\u0027data\u0027][0]);",
        "            }",
        "            $lineTotal \u003d null;",
        "            $groupTotal \u003d null;",
        "            $subCompanyTotal \u003d null;",
        "            $companyTotal \u003d null;",
        "",
        "            //记录机构数组存在的位置",
        "            if (isset($data[\u0027data\u0027][0]-\u003ecompanyName)) {",
        "                $companyNum_init \u003d 0;",
        "                $subCompanyNum_init \u003d 1;",
        "            } else {",
        "                $subCompanyNum_init \u003d 0;",
        "            }",
        "            $groupNum_init \u003d $subCompanyNum_init + 1;",
        "            $lineNum_init \u003d $groupNum_init + 1;",
        "",
        "            if (isset($companyNum_init)) {",
        "                $companyNum \u003d $companyNum_init;",
        "            }",
        "            $subCompanyNum \u003d $subCompanyNum_init;",
        "            $groupNum \u003d $groupNum_init;",
        "            $lineNum \u003d $lineNum_init;",
        "            $result \u003d $result_init;",
        "            foreach ($data[\u0027data\u0027] as $key \u003d\u003e $val) {",
        "",
        "                if (isset($data[\u0027data\u0027][$key + 1])) {",
        "                    $temp \u003d clone $val;",
        "                    if (isset($temp-\u003ecompanyName)) {",
        "                        $temp-\u003ecompanyName \u003d null;",
        "                    }",
        "                    $temp-\u003esubCompanyName \u003d null;",
        "                    $temp-\u003egroupName \u003d null;",
        "                    $temp-\u003elineName \u003d null;",
        "                    $result[] \u003d $temp;",
        "",
        "                    if (isset($data[\u0027data\u0027][$key + 1]-\u003ecompanyName)) {",
        "                        $companyTotal \u003d $companyTotal + $val-\u003etotal;",
        "                        if ($data[\u0027data\u0027][$key + 1]-\u003ecompanyName \u003d\u003d $val-\u003ecompanyName) {",
        "",
        "                        } else {",
        "                            $result[$companyNum][\u0027total\u0027] \u003d (String)$companyTotal;",
        "                            $companyTotal \u003d 0;",
        "                            $companyNum \u003d count($result);",
        "                            $result_init[$companyNum_init][\u0027companyName\u0027] \u003d $data[\u0027data\u0027][$key + 1]-\u003ecompanyName;",
        "                            $result[] \u003d $result_init[$companyNum_init];",
        "                        }",
        "                    }",
        "                    $subCompanyTotal \u003d $subCompanyTotal + $val-\u003etotal;",
        "                    if ($data[\u0027data\u0027][$key + 1]-\u003esubCompanyName \u003d\u003d $val-\u003esubCompanyName) {",
        "",
        "                    } else {",
        "                        $result[$subCompanyNum][\u0027total\u0027] \u003d (String)$subCompanyTotal;",
        "                        $subCompanyTotal \u003d 0;",
        "                        $subCompanyNum \u003d count($result);",
        "                        $result_init[$subCompanyNum_init][\u0027subCompanyName\u0027] \u003d $data[\u0027data\u0027][$key + 1]-\u003esubCompanyName;",
        "                        $result[] \u003d $result_init[$subCompanyNum_init];",
        "                    }",
        "                    $groupTotal \u003d $groupTotal + $val-\u003etotal;",
        "                    if ($data[\u0027data\u0027][$key + 1]-\u003egroupName \u003d\u003d $val-\u003egroupName) {",
        "",
        "                    } else {",
        "                        $result[$groupNum][\u0027total\u0027] \u003d (String)$groupTotal;",
        "                        $groupTotal \u003d 0;",
        "                        $groupNum \u003d count($result);",
        "                        $result_init[$groupNum_init][\u0027groupName\u0027] \u003d $data[\u0027data\u0027][$key + 1]-\u003egroupName;",
        "                        $result[] \u003d $result_init[$groupNum_init];",
        "                    }",
        "                    $lineTotal \u003d $lineTotal + $val-\u003etotal;",
        "                    //和下面是同一个线路的",
        "                    if ($data[\u0027data\u0027][$key + 1]-\u003elineName \u003d\u003d $val-\u003elineName) {",
        "",
        "                    } else {",
        "                        $result[$lineNum][\u0027total\u0027] \u003d (String)$lineTotal;",
        "                        $lineTotal \u003d 0;",
        "                        $lineNum \u003d count($result);",
        "                        $result_init[$lineNum_init][\u0027lineName\u0027] \u003d $data[\u0027data\u0027][$key + 1]-\u003elineName;",
        "                        $result[] \u003d $result_init[$lineNum_init];",
        "                    }",
        "                } else {",
        "                    $result[$companyNum][\u0027total\u0027] \u003d (String)$companyTotal;",
        "                    $result[$subCompanyNum][\u0027total\u0027] \u003d (String)$subCompanyTotal;",
        "                    $result[$groupNum][\u0027total\u0027] \u003d (String)$groupTotal;",
        "                    $result[$lineNum][\u0027total\u0027] \u003d (String)$lineTotal;",
        "                }",
        "            }",
        "        }",
        "        return $result;",
        "",
        "    }",
        "",
        "    /**获取机构数组",
        "     * @param $data",
        "     * @return array",
        "     */",
        "    public function getDeptArr($base, $realData)",
        "    {",
        "        $result \u003d [];",
        "        if (isset($realData-\u003ecompanyName)) {",
        "            $company \u003d $base;",
        "            $company[\u0027companyName\u0027] \u003d $realData-\u003ecompanyName;",
        "            $result[] \u003d $company;",
        "        }",
        "        $subCompany \u003d $base;",
        "        $subCompany[\u0027subCompanyName\u0027] \u003d $realData-\u003esubCompanyName;",
        "        $groupName \u003d $base;",
        "        $groupName[\u0027groupName\u0027] \u003d $realData-\u003egroupName;",
        "        $lineName \u003d $base;",
        "        $lineName[\u0027lineName\u0027] \u003d $realData-\u003elineName;",
        "        $result[] \u003d $subCompany;",
        "        $result[] \u003d $groupName;",
        "        $result[] \u003d $lineName;",
        "        return $result;",
        "    }",
        "",
        "    public function getDeptArr2($base, $realData)",
        "    {",
        "        $result \u003d [];",
        "        if (isset($realData[\u0027companyName\u0027])) {",
        "            $company \u003d $base;",
        "            $company[\u0027companyName\u0027] \u003d $realData[\u0027companyName\u0027];",
        "            $result[] \u003d $company;",
        "        }",
        "        $subCompany \u003d $base;",
        "        $subCompany[\u0027subCompanyName\u0027] \u003d $realData[\u0027subCompanyName\u0027];",
        "        $groupName \u003d $base;",
        "        $groupName[\u0027groupName\u0027] \u003d $realData[\u0027groupName\u0027];",
        "        $lineName \u003d $base;",
        "        $lineName[\u0027lineName\u0027] \u003d $realData[\u0027lineName\u0027];",
        "        $result[] \u003d $subCompany;",
        "        $result[] \u003d $groupName;",
        "        $result[] \u003d $lineName;",
        "        return $result;",
        "    }",
        "",
        "",
        "    public function getSystemAlarmRecords($params, $sort \u003d \u0027total\u0027, $sortV \u003d \u0027desc\u0027)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        $bigSystemType \u003d \u0027%\u0027;",
        "        if (!empty($params[\u0027bigSystemType\u0027])) {",
        "            $bigSystemType \u003d $params[\u0027bigSystemType\u0027];",
        "            $bigSystemType \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $bigSystemType);",
        "        };",
        "        $systemType \u003d \u0027%\u0027;",
        "        if (isset($params[\u0027systemType\u0027])) {",
        "            $systemType \u003d $params[\u0027systemType\u0027];",
        "            $systemType \u003d $this-\u003esystemConvertCode(\"systemType\", $systemType);",
        "        };",
        "",
        "        $alarmType \u003d \u0027%\u0027;",
        "        if (isset($params[\u0027alarmType\u0027])) {",
        "            $alarmType \u003d $params[\u0027alarmType\u0027];",
        "        };",
        "        $countSql \u003d \"select count(*) as total \";",
        "        $selectSql \u003d \"select companyName, subCompanyName,groupName, lineName,vehicleSN as vin,ab.vehicleNo,",
        "        case motorType when 1 then \u0027燃油车\u0027 when 2 then \u0027电车\u0027 when 3 then \u0027油电混合动力车\u0027 when 4 then \u0027燃气车\u0027 when 5 then \u0027气电混合动力车\u0027 end as vehicleType ,",
        "        SUM(total) AS total \";",
        "",
        "",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 0;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "",
        "        $breakDowntableName \u003d \"api_breakdowns\";",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                break;",
        "            case 4: // this year",
        "                $breakDowntableName \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $breakDowntableName \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "                }",
        "                break;",
        "        }",
        "        $sql \u003d \"  FROM $breakDowntableName ab",
        "                    INNER JOIN (",
        "                        SELECT alarmtypename FROM t_vehiclealarmtype WHERE `type` like \u0027$systemType\u0027 and parenttype like \u0027$bigSystemType\u0027   and alarmtypename like \u0027$alarmType\u0027",
        "                        UNION ALL",
        "                        SELECT alarmtypename FROM t_vehiclealarmtype2 WHERE `type` like \u0027$systemType\u0027 and parenttype like \u0027$bigSystemType\u0027   and alarmtypename like \u0027$alarmType\u0027",
        "                    ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename",
        "                    INNER JOIN t_mauth_dept tm ON ab.deptId \u003d tm.lineDeptId",
        "                    INNER JOIN t_vehicleinfo tv ON ab.vehicleNo \u003d tv.vehicleNo  \";",
        "        $fixedcondition \u003d \" group by vehicleNo  order by $sort $sortV \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id \";",
        "            }",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . \" from( select ab.vehicleNo \" . $sql . \")z\")[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 \";",
        "        };",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . \" from( select ab.vehicleNo \" . $sql . \")z\")[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "",
        "        $sql .\u003d \" limit $offset , $count\";",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmFenLei",
        "     * @name: 获取报警分类信息",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: alarmtypeid,description:故障类型ID",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmFenLei(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027alarmtypeid\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "",
        "        $this-\u003eapiParamVerify($rules);",
        "        $alarmtypeid \u003d $request-\u003eget(\u0027alarmtypeid\u0027);",
        "        $sql \u003d \"SELECT bigsysc,bigsys,smallsysc,smallsys,type,ename,cname FROM t_vehicle_monitor_info where deviceid\u003d-1 and ename like \u0027%$alarmtypeid\u0027\";",
        "",
        "        $records \u003d DB::select($sql);",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSystemAlarmFenbu",
        "     * @name: 故障系统表格分布",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: vehicleNo,description:车牌号",
        "     *parameter2: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSystemAlarmFenbu(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $rules \u003d [",
        "            \u0027vehicleNo\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "",
        "        $records \u003d (array)$this-\u003egetSystemAlarmRecordsFenbu($this-\u003eparams);//分页",
        "",
        "        foreach ($records as $key \u003d\u003e $val) {",
        "            if ($val \u003d\u003d 0) {",
        "                unset($records[$key]);",
        "            }",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    public function getSystemAlarmRecordsFenbu($params)",
        "    {",
        "",
        "",
        "        $vehicleNo \u003d \u0027%\u0027;",
        "        if (isset($params[\u0027vehicleNo\u0027])) {",
        "            $vehicleNo \u003d $params[\u0027vehicleNo\u0027];",
        "        };",
        "",
        "        $bigSystemType \u003d \u0027%\u0027;",
        "        if (isset($params[\u0027bigSystemType\u0027])) {",
        "            $bigSystemType \u003d $params[\u0027bigSystemType\u0027];",
        "            $bigSystemType \u003d $this-\u003esystemConvertCode(\"bigSystemType\", $bigSystemType);",
        "        };",
        "        $systemType \u003d \u0027%\u0027;",
        "        if (isset($params[\u0027systemType\u0027])) {",
        "            $systemType \u003d $params[\u0027systemType\u0027];",
        "            $systemType \u003d $this-\u003esystemConvertCode(\"systemType\", $systemType);",
        "        };",
        "",
        "        $alarmType \u003d \u0027%\u0027;",
        "        if (isset($params[\u0027alarmType\u0027])) {",
        "            $alarmType \u003d $params[\u0027alarmType\u0027];",
        "        };",
        "",
        "",
        "        $sql \u003d \"  ",
        "                select  alarmtypename, sum(total)  as total from api_breakdowns where vehicleNo like \u0027$vehicleNo\u0027",
        "                       \";",
        "",
        "",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 0;",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "                }",
        "                break;",
        "        }",
        "",
        "        $fixedcondition \u003d \"  and alarmtypename IN (SELECT alarmtypename FROM t_vehiclealarmtype WHERE `type` like \u0027$systemType\u0027 and parenttype like \u0027$bigSystemType\u0027   and alarmtypename like \u0027$alarmType\u0027",
        "                         union all  SELECT alarmtypename FROM t_vehiclealarmtype2 WHERE `type` like \u0027$systemType\u0027 and parenttype like \u0027$bigSystemType\u0027  and alarmtypename like \u0027$alarmType\u0027  )     group by alarmtypename  \";",
        "",
        "        //",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($sql, 20);",
        "        $cnt \u003d count($records);",
        "        $recordsarr \u003d [];",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $alarmtypename \u003d $records[$i]-\u003ealarmtypename;",
        "            $recordsarr[\"$alarmtypename\"] \u003d $records[$i]-\u003etotal;",
        "",
        "        }",
        "        $records \u003d $recordsarr;",
        "",
        "",
        "        return $records;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSiteViolationTrends",
        "     * @name: 站点统计趋势图",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: depttype,description:机构类型",
        "     *parameter2: deptid,description:机构ID",
        "     *parameter3: actiontypeDesc,description:查询类型",
        "     *parameter4: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSiteViolationTrends(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        // 需要改回，",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "",
        "        $actiontypeDesc \u003d $request-\u003eget(\u0027actiontypeDesc\u0027);",
        "",
        "",
        "        switch ($actiontypeDesc) {",
        "            case \u0027违规停靠站\u0027:",
        "                $actiontypeDesc \u003d \u0027急刹车\u0027;",
        "                break;",
        "            case \u0027分段准点\u0027:",
        "                $actiontypeDesc \u003d \"到站超时\";",
        "                break;",
        "        }",
        "",
        "",
        "        // sql 头部",
        "        $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(stat_date,\u0027%d\u0027) as stat_date FROM",
        " (",
        "SELECT SUM(total) AS cnt, stat_date FROM (",
        "SELECT total, stat_date AS stat_date ,begin_site FROM api_site_violation_day WHERE actiontypeDesc\u003d\u0027$actiontypeDesc\u0027",
        "and  vehicleno IN( SELECT vehicleno FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId    \";",
        "",
        "// 用作 limit, 只有在时间为今年的时候有",
        "        $currentMonth \u003d intval(DATE(\u0027n\u0027));",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "",
        "",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "",
        "        $fixed \u003d \" and begin_site\u003c\u003e-1  )a  INNER JOIN t_siteinfo c ON c.siteId\u003da.begin_site  GROUP BY  stat_date ORDER BY stat_date) b    \";",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $sql \u003d \"SELECT sum(total) AS cnt, stat_date FROM (",
        "SELECT  total,  DATE_FORMAT(stat_date,\u0027%H:00\u0027)  AS stat_date,begin_site FROM api_site_violation_hour",
        "WHERE ",
        "actiontypeDesc\u003d\u0027$actiontypeDesc\u0027 ",
        "and vehicleNo IN (SELECT vehicleNo FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 1 day  and stat_date\u003cCURRENT_DATE() \";",
        "                $fixed \u003d \"  and begin_site\u003c\u003e-1 )a GROUP BY  stat_date ORDER BY stat_date   \";",
        "                for ($i \u003d 0; $i \u003c 24; $i++) {",
        "                    if ($i \u003e 9) {",
        "                        $arrtime[] \u003d date(\"$i:00\");",
        "                    } else {",
        "                        $arrtime[] \u003d date(\"0$i:00\");",
        "                    }",
        "                }",
        "",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d 7;",
        "                for ($i \u003d 0; $i \u003c 7; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day\", time()));",
        "                    $inttime--;",
        "                }",
        "                // 关联表",
        "",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE()\";",
        "                $inttime \u003d date(\u0027d\u0027);",
        "                $inttime \u003d intval($inttime) - 1;",
        "                $inttime2 \u003d $inttime;",
        "                for ($i \u003d 0; $i \u003c $inttime2; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$inttime day \", time()));",
        "                    $inttime--;",
        "                }",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day\";",
        "                $j \u003d date(\"m\") - 1;",
        "                $y \u003d date(\"Y\");",
        "",
        "                $days \u003d date(\u0027t\u0027, strtotime(\"$y-$j-1\"));",
        "                $k \u003d date(\"d\");",
        "                $days \u003d intval($days);",
        "                $k \u003d $k + $days - 1;",
        "                for ($i \u003d 0; $i \u003c $days; $i++) {",
        "                    $arrtime[] \u003d date(\u0027d\u0027, strtotime(\"-$k day \", time()));",
        "                    $k--;",
        "                }",
        "                break;",
        "            case 4: // this year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date FROM",
        " (",
        "SELECT SUM(total) AS cnt, stat_date FROM (",
        "SELECT total,  stat_date,begin_site FROM api_site_violation_month WHERE actiontypeDesc\u003d\u0027$actiontypeDesc\u0027",
        "and vehicleno IN( SELECT vehicleno FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId    \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() and begin_site\u003c\u003e-1 \";",
        "                // 为显示 到当前月的 每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH )c)d ON  b.stat_date\u003dd.month limit $currentMonth\";",
        "                break;",
        "            case 5: // last year",
        "                $sql \u003d \"SELECT IFNULL(cnt,0) as cnt , date_format(`month`,\u0027%m月\u0027) as stat_date FROM",
        " (",
        "SELECT SUM(total) AS cnt, stat_date FROM (",
        "SELECT total,  stat_date,begin_site FROM api_site_violation_month WHERE actiontypeDesc\u003d\u0027$actiontypeDesc\u0027",
        "and vehicleno IN( SELECT vehicleno FROM t_vehicleinfo b ",
        "INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId    \";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and begin_site\u003c\u003e-1 \";",
        "                // 为显示  每月数据",
        "                $fixed .\u003d \"RIGHT JOIN (SELECT @a:\u003d@a+INTERVAL 1 MONTH AS MONTH FROM t_monthfortrend  a  INNER JOIN",
        "(SELECT @a:\u003dCURRENT_DATE() - INTERVAL DAY(CURRENT_DATE())-1 DAY - INTERVAL MONTH(CURRENT_DATE())  MONTH -interval 1 year )c  ) d ON  b.stat_date\u003dd.month\";",
        "                break;",
        "",
        "        }",
        "",
        "// 如果用户等级不是 顶级 则",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027  ) \";",
        "            } else {",
        "                $fixedCondtion \u003d \" where $deptlevel\u003d$id ) \";",
        "            };",
        "            //",
        "            $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "            $records \u003d DB::select($sql);",
        "",
        "            if (empty($records)) {",
        "                $records \u003d [];",
        "                $i \u003d 0;",
        "                $records[0] \u003d $arrtime;",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $records[1][$i] \u003d 0;",
        "                    $i++;",
        "                }",
        "",
        "",
        "                return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "            };",
        "            $cnt \u003d count($records);",
        "            $arr1 \u003d array();",
        "",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "                $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "            }",
        "",
        "            if (isset($arrtime)) {",
        "",
        "                $arr3[0] \u003d $arrtime;",
        "                $arr3[1] \u003d array_map(function () {",
        "                    return \u00270\u0027;",
        "                }, $arrtime);",
        "                $temp \u003d [];",
        "                foreach ($arrtime as $key \u003d\u003e $val) {",
        "                    $temp[$val] \u003d $key;",
        "                }",
        "",
        "                foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                    $data \u003d $arr1[1][$key];",
        "                    $arr3[1][$temp[$value]] \u003d $data;",
        "                }",
        "                $arr1 \u003d $arr3;",
        "            }",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $fixedCondtion \u003d \" where  $depttype \u003d \u0027$deptid\u0027 ) \";",
        "        } else {",
        "            $fixedCondtion \u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "        $sql .\u003d $fixedCondtion . \" and \" . $dataconditon . $fixed;",
        "",
        "        $records \u003d DB::select($sql);",
        "",
        "        if (empty($records)) {",
        "            $records \u003d [];",
        "            $i \u003d 0;",
        "            $records[0] \u003d $arrtime;",
        "",
        "            foreach ($arrtime as $key \u003d\u003e $val) {",
        "                $records[1][$i] \u003d 0;",
        "                $i++;",
        "            }",
        "",
        "            return $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        };",
        "        $cnt \u003d count($records);",
        "        $arr1 \u003d array();",
        "",
        "        for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "            $arr1[1][$i] \u003d $records[$i]-\u003ecnt;",
        "            $arr1[0][$i] \u003d $records[$i]-\u003estat_date;",
        "        }",
        "",
        "        if (isset($arrtime)) {",
        "",
        "            $arr3[0] \u003d $arrtime;",
        "            $arr3[1] \u003d array_map(function () {",
        "                return 0;",
        "            }, $arrtime);",
        "            $temp \u003d [];",
        "            foreach ($arrtime as $key \u003d\u003e $val) {",
        "                $temp[$val] \u003d $key;",
        "            }",
        "",
        "            foreach ($arr1[0] as $key \u003d\u003e $value) {",
        "                $data \u003d $arr1[1][$key];",
        "                $arr3[1][$temp[$value]] \u003d $data;",
        "            }",
        "            $arr1 \u003d $arr3;",
        "        }",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, $arr1);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSiteViolationDeptRank",
        "     * @name: 站点车辆统计 机构排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: actiontypeDesc,description:站点违规类型",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSiteViolationDeptRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromSiteViolationDeptRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027site_violation_dept_rank\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "        $depttype \u003d isset($this-\u003eparams[\u0027depttype\u0027]) ? $this-\u003eparams[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "",
        "        switch ($depttype) {",
        "            case \u0027groupDeptid\u0027:  // 7day",
        "                $records[\u0027head\u0027][2][\u0027field\u0027] \u003d \"lineName\";",
        "                $records[\u0027head\u0027][2][\u0027english\u0027] \u003d \"lineName\";",
        "                $records[\u0027head\u0027][2][\u0027chinese\u0027] \u003d \"线路名称\";",
        "                $records[\u0027head\u0027][1][\u0027field\u0027] \u003d \"groupName\";",
        "                $records[\u0027head\u0027][1][\u0027english\u0027] \u003d \"groupName\";",
        "                $records[\u0027head\u0027][1][\u0027chinese\u0027] \u003d \"车队名称\";",
        "                break;",
        "",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromSiteViolationDeptRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "        $dept \u003d null;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total from ( SELECT vehicleNo, lineName, groupName,driverName,  actiontypedesc,subCompanyName, total,@r:\u003d@r+1 AS rank, begin_site, IFNULL(end_site,\u0027\u0027) AS end_site \";",
        "        $selectSql \u003d \"select * \";",
        "        $selectSql .\u003d \" from( SELECT vehicleNo, lineName, groupName,driverName,  actiontypedesc,subCompanyName, total,@r:\u003d@r+1 AS rank, begin_site, IFNULL(end_site,\u0027\u0027) AS end_site  \";",
        "        $sql \u003d \" FROM (",
        "        SELECT  a.vehicleNo, lineName, groupName,driverName, subCompanyName, actiontypedesc, SUM(total) AS total,c.siteName AS begin_site,d.siteName AS end_site",
        "        FROM (",
        "        SELECT vehicleNo,  deptId, driverName, actiontypedesc,SUM(total) AS total ,begin_site,end_site",
        "        FROM `api_site_violation_day` WHERE vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b ",
        "        INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId   \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 6;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "        $actiontypeDesc \u003d $params[\u0027actiontypeDesc\u0027];",
        "        switch ($actiontypeDesc) {",
        "            case \u0027违规停靠站\u0027:",
        "                $actiontypeDesc \u003d \u0027急刹车\u0027;",
        "                break;",
        "            case \u0027分段准点\u0027:",
        "                $actiontypeDesc \u003d \"到站超时\";",
        "                break;",
        "        }",
        "",
        "        switch ($depttype) {",
        "            case \u0027lineDeptid\u0027: //last day",
        "                $groupBy \u003d \" lineName \";",
        "                break;",
        "            case \u0027groupDeptid\u0027:  // 7day",
        "                $groupBy \u003d \" groupName \";",
        "                break;",
        "            case \u0027deviceId\u0027:  // this month",
        "                $groupBy \u003d \" vehicleNo \";",
        "                break;",
        "        }",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "",
        "                }",
        "                break;",
        "        }",
        "        $fixedcondition \u003d \"and actiontypedesc\u003d\u0027$actiontypeDesc\u0027 AND begin_site\u003c\u003e-1 GROUP BY begin_site,end_site,vehicleNo  ) a ",
        "INNER JOIN  t_mauth_dept b ON a.deptId\u003db.lineDeptId INNER JOIN t_siteinfo c ON c.siteId\u003da.begin_site LEFT JOIN t_siteinfo d ON d.siteId\u003da.end_site  GROUP BY begin_site,end_site,vehicleNo ) z INNER JOIN (SELECT @r:\u003d0)r order by total desc ) n  \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027) \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $cnt \u003d count($records);",
        "            if ($actiontypeDesc \u003d\u003d \u0027超速\u0027 | $actiontypeDesc \u003d\u003d \u0027到站超时\u0027) {",
        "                $siteorluduan \u003d \u0027sitetosite\u0027;",
        "                for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                    $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site . \"-\" . $records[$i]-\u003eend_site;",
        "                }",
        "            } else {",
        "                $siteorluduan \u003d \u0027site\u0027;",
        "                for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                    $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site;",
        "                }",
        "            }",
        "",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027) \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "        $sql .\u003d \" limit $offset , $count\";",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "",
        "        $cnt \u003d count($records);",
        "        if ($actiontypeDesc \u003d\u003d \u0027超速\u0027 | $actiontypeDesc \u003d\u003d \u0027到站超时\u0027) {",
        "            $siteorluduan \u003d \u0027sitetosite\u0027;",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site . \"-\" . $records[$i]-\u003eend_site;",
        "            }",
        "        } else {",
        "            $siteorluduan \u003d \u0027site\u0027;",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site;",
        "            }",
        "        }",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSiteViolationSiteRank",
        "     * @name: 站点统计 机构排名",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptid,description:机构ID",
        "     *parameter2: depttype,description:机构类型",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: actiontypeDesc,description:站点违规类型",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSiteViolationSiteRank(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "        $records \u003d $this-\u003egetRecordsfromSiteViolationSiteRank($this-\u003eparams);//分页",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027site_violation_site_rank\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "        $depttype \u003d isset($this-\u003eparams[\u0027depttype\u0027]) ? $this-\u003eparams[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "",
        "        switch ($depttype) {",
        "            case \u0027groupDeptid\u0027:  // 7day",
        "                $records[\u0027head\u0027][1][\u0027field\u0027] \u003d \"groupName\";",
        "                $records[\u0027head\u0027][1][\u0027english\u0027] \u003d \"groupName\";",
        "                $records[\u0027head\u0027][1][\u0027chinese\u0027] \u003d \"车队名称\";",
        "                break;",
        "",
        "        }",
        "        $actiontypeDesc \u003d isset($this-\u003eparams[\u0027actiontypeDesc\u0027]) ? $this-\u003eparams[\u0027actiontypeDesc\u0027] : \u0027滞站\u0027;",
        "        switch ($actiontypeDesc) {",
        "            case \u0027超速\u0027:  // 7day",
        "                $records[\u0027head\u0027][2][\u0027field\u0027] \u003d \"sitetosite\";",
        "                $records[\u0027head\u0027][2][\u0027english\u0027] \u003d \"sitetosite\";",
        "                $records[\u0027head\u0027][2][\u0027chinese\u0027] \u003d \"路段\";",
        "                break;",
        "            case \u0027分段准点\u0027:  // this month",
        "                $records[\u0027head\u0027][2][\u0027field\u0027] \u003d \"sitetosite\";",
        "                $records[\u0027head\u0027][2][\u0027english\u0027] \u003d \"sitetosite\";",
        "                $records[\u0027head\u0027][2][\u0027chinese\u0027] \u003d \"路段\";",
        "                break;",
        "        }",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    public function getRecordsfromSiteViolationSiteRank($params)",
        "    {",
        "",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "        $dept \u003d null;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        $countSql \u003d \"select count(*) as total from ( SELECT vehicleNo, lineName, groupName,driverName,  actiontypedesc,subCompanyName, total,@r:\u003d@r+1 AS rank, begin_site, IFNULL(end_site,\u0027\u0027) AS end_site \";",
        "        $selectSql \u003d \"select * \";",
        "        $selectSql .\u003d \" from( SELECT vehicleNo, lineName, groupName,driverName,  actiontypedesc,subCompanyName, total,@r:\u003d@r+1 AS rank, begin_site, IFNULL(end_site,\u0027\u0027) AS end_site  \";",
        "        $sql \u003d \" FROM (",
        "        SELECT  a.vehicleNo, lineName, groupName,driverName, subCompanyName, actiontypedesc, SUM(total) AS total,c.siteName AS begin_site,d.siteName AS end_site",
        "        FROM (",
        "        SELECT vehicleNo,  deptId, driverName, actiontypedesc,SUM(total) AS total ,begin_site,end_site",
        "        FROM `api_site_violation_day` WHERE vehicleNo IN(SELECT vehicleNo FROM t_vehicleinfo b ",
        "        INNER JOIN t_mauth_dept c ON b.deptId \u003d c.lineDeptId   \";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "",
        "        $datatype \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 6;",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "        $actiontypeDesc \u003d $params[\u0027actiontypeDesc\u0027];",
        "        switch ($actiontypeDesc) {",
        "            case \u0027违规停靠站\u0027:",
        "                $actiontypeDesc \u003d \u0027急刹车\u0027;",
        "                break;",
        "            case \u0027分段准点\u0027:",
        "                $actiontypeDesc \u003d \"到站超时\";",
        "                break;",
        "        }",
        "",
        "        switch ($depttype) {",
        "            case \u0027lineDeptid\u0027: //last day",
        "                $groupBy \u003d \" lineName \";",
        "                break;",
        "            case \u0027groupDeptid\u0027:  // 7day",
        "                $groupBy \u003d \" groupName \";",
        "                break;",
        "            case \u0027deviceId\u0027:  // this month",
        "                $groupBy \u003d \" vehicleNo \";",
        "                break;",
        "        }",
        "",
        "",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "",
        "                break;",
        "            case 1:  // 7day",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 2:  // this month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 3:  // last month",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "",
        "                break;",
        "            case 4: // this year",
        "",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "",
        "                break;",
        "            case 5: // last year",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "",
        "                break;",
        "            case 6: // last year",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d\u0027$enddate\u0027 \";",
        "",
        "                }",
        "                break;",
        "        }",
        "        $fixedcondition \u003d \"and actiontypedesc\u003d\u0027$actiontypeDesc\u0027 AND begin_site\u003c\u003e-1 GROUP BY begin_site,end_site,vehicleNo  ) a ",
        "INNER JOIN  t_mauth_dept b ON a.deptId\u003db.lineDeptId INNER JOIN t_siteinfo c ON c.siteId\u003da.begin_site LEFT JOIN t_siteinfo d ON d.siteId\u003da.end_site  GROUP BY begin_site,end_site,$groupBy ) z INNER JOIN (SELECT @r:\u003d0)r order by total desc ) n  \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027) \";",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id) \";",
        "            };",
        "            //",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $cnt \u003d count($records);",
        "            if ($actiontypeDesc \u003d\u003d \u0027超速\u0027 | $actiontypeDesc \u003d\u003d \u0027到站超时\u0027) {",
        "                $siteorluduan \u003d \u0027sitetosite\u0027;",
        "                for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                    $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site . \"-\" . $records[$i]-\u003eend_site;",
        "                }",
        "            } else {",
        "                $siteorluduan \u003d \u0027site\u0027;",
        "                for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                    $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site;",
        "                }",
        "            }",
        "",
        "",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027) \";",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 )\";",
        "        };",
        "        //",
        "",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "        $sql .\u003d \" limit $offset , $count\";",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "",
        "",
        "        $cnt \u003d count($records);",
        "        if ($actiontypeDesc \u003d\u003d \u0027超速\u0027 | $actiontypeDesc \u003d\u003d \u0027到站超时\u0027) {",
        "            $siteorluduan \u003d \u0027sitetosite\u0027;",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site . \"-\" . $records[$i]-\u003eend_site;",
        "            }",
        "        } else {",
        "            $siteorluduan \u003d \u0027site\u0027;",
        "            for ($i \u003d 0; $i \u003c $cnt; $i++) {",
        "                $records[$i]-\u003e$siteorluduan \u003d $records[$i]-\u003ebegin_site;",
        "            }",
        "        }",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getDriverViolationFenbu",
        "     * @name: 驾驶员违规分布",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: driverName,description:驾驶员姓名",
        "     *parameter2: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getDriverViolationFenbu(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027driverName\u0027 \u003d\u003e \u0027required\u0027, // 机构ID",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $driverName \u003d $request-\u003eget(\u0027driverName\u0027);",
        "        $stat_date \u003d $request-\u003eget(\u0027time\u0027);",
        "        $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        $ret \u003d $this-\u003equeryData($driverName, $stat_date, $datatype);",
        "        if (isset($stat_date)) $stat_date \u003d date(\u0027Y-m-d\u0027, strtotime(\"-1 month\", strtotime($stat_date)));",
        "        if (isset($datatype)) $datatype \u003d $datatype + 4;",
        "        $beforeret \u003d $this-\u003equeryData($driverName, $stat_date, $datatype);",
        "",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $ret, $beforeret);",
        "",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSiteViolationCount",
        "     * @name: 站点违规统计",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: deptId,description:机构ID",
        "     *parameter2: deptType,description:机构类型",
        "     *parameter3: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSiteViolationCount(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        // 需要改回，",
        "        $dept[\u0027level\u0027] \u003d 0;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        $id \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        // 要查询的机构",
        "        $deptid \u003d $request-\u003eget(\u0027deptid\u0027);",
        "        $depttype \u003d $request-\u003eget(\u0027depttype\u0027);",
        "        // 确定时间参数",
        "        $datatype \u003d 0;",
        "        $jj \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        if ($jj !\u003d null) {",
        "            $datatype \u003d $request-\u003eget(\u0027timeType\u0027);",
        "        };",
        "        // 为了首页 只显示线路",
        "        if (empty($depttype)) {",
        "            $depttype \u003d \u0027lineDeptid\u0027;",
        "        };",
        "        $records \u003d $this-\u003equerySiteViolationData($deptlevel, $id, $deptid, $depttype, $datatype);",
        "        if ($datatype !\u003d null) $datatype \u003d $datatype + 6;",
        "        $beforerecords \u003d $this-\u003equerySiteViolationData($deptlevel, $id, $deptid, $depttype, $datatype);",
        "        return $this-\u003esetJsonResponseNew(SUCCESS, $records, $beforerecords);",
        "    }",
        "",
        "    public function getStateAnalogAlarmInfo(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "//",
        "//        $rules \u003d [",
        "//            \u0027deptId\u0027 \u003d\u003e \u0027required\u0027,",
        "//        ];",
        "//         $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "//            -\u003egetUserDept()-\u003efirst();",
        "//        $this-\u003eapiParamVerify($rules);",
        "",
        "//",
        "//        $nodes \u003d [",
        "//            \u002710.205.48.70:9042\u0027,\t// simple way, hostname with port ,",
        "//            [\t\t\t\t// advanced way, array including username, password and socket options",
        "//                \u0027host\u0027\t\t\u003d\u003e \u002710.205.48.70\u0027,",
        "//                \u0027port\u0027\t\t\u003d\u003e 9042, //default 9042",
        "//                \u0027username\u0027\t\u003d\u003e \u0027admin\u0027,",
        "//                \u0027password\u0027\t\u003d\u003e \u0027pass\u0027,",
        "//                \u0027socket\u0027\t\u003d\u003e [SO_RCVTIMEO \u003d\u003e [\"sec\" \u003d\u003e 10, \"usec\" \u003d\u003e 0], //socket transport only",
        "//                ],",
        "//            ],",
        "//        ];",
        "//",
        "//        $connection \u003d new \\Cassandra\\Connection($nodes, \u0027my_keyspace\u0027);",
        "//        dd(2);",
        "//        try",
        "//        {",
        "//            $connection-\u003econnect();",
        "//",
        "//        }",
        "//        catch (\\Cassandra\\Exception $e)",
        "//        {",
        "//            echo \u0027Caught exception: \u0027,  $e-\u003egetMessage(), \"\\n\";",
        "//            exit;//if connect failed it may be good idea not to continue",
        "//        }",
        "//        dd(1);",
        "//        // Set consistency level for farther requests (default is CONSISTENCY_ONE)",
        "//        $connection-\u003esetConsistency(Request::CONSISTENCY_QUORUM);",
        "//        // Run query synchronously.",
        "//        try",
        "//        {",
        "//            $response \u003d $connection-\u003equerySync(\u0027SELECT * FROM \"vehicle_info\"  limit 1\u0027);",
        "//        }",
        "//        catch (\\Cassandra\\Exception $e)",
        "//        {",
        "//        }",
        "//        dd($response);",
        "",
        "        \\Log::info(\"查询模拟量状态量报警量各项指标\");",
        "",
        "        $info \u003d (new  BVehicleInfoSystemType)-\u003egetVehicleInfoSystemType($this-\u003eparams);",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $info);",
        "",
        "        return $ret;",
        "",
        "    }",
        "",
        "    public function insertXmlSetting(\\Illuminate\\Http\\Request $request)",
        "    {",
        "",
        "",
        "        $xmlstr \u003d file_get_contents(\"php://input\");",
        "",
        "        if (empty($xmlstr)) {",
        "            return \u0027没有输入xml\u0027;",
        "        }",
        "",
        "        $result \u003d simplexml_load_string($xmlstr);",
        "",
        "        $xmljson \u003d json_encode($result);",
        "",
        "",
        "        $xml \u003d json_decode($xmljson, true);",
        "",
        "// 生成要处理的 车辆id 数组",
        "        $i \u003d 0;",
        "        foreach ($xml as $key \u003d\u003e $val) {",
        "            foreach ($val[\u0027condition\u0027][\u0027range\u0027] as $key1 \u003d\u003e $val1) {",
        "                $deviceidlow[$i] \u003d $val1[\u0027@attributes\u0027][\u0027low\u0027];",
        "                $deviceidhigh[$i] \u003d $val1[\u0027@attributes\u0027][\u0027high\u0027];",
        "                $i++;",
        "            }",
        "        }",
        "        for ($m \u003d 0; $m \u003c $i; $m++) {",
        "            for ($n \u003d 0; $n \u003c (int)$deviceidhigh[$m] - (int)$deviceidlow[$m] + 1; $n++) {",
        "                $deviceid[$m] \u003d $deviceidlow[$m] + $n;",
        "            }",
        "        }",
        "// 生成  系统 数组",
        "        $i \u003d 0;",
        "        foreach ($xml as $key \u003d\u003e $val) {",
        "            foreach ($val[\u0027fields\u0027][\u0027field_group\u0027] as $key1 \u003d\u003e $val1) {",
        "                $smallsys[$i] \u003d $val1[\u0027@attributes\u0027][\u0027name\u0027];",
        "                $smallsysc[$i] \u003d $val1[\u0027@attributes\u0027][\u0027description\u0027];",
        "                $dataNum[$i] \u003d count($val1[\u0027field\u0027]);",
        "                $i++;",
        "            }",
        "        }",
        "        $circleNum \u003d $i;",
        "// 生成 量 数组",
        "        $i \u003d 0;",
        "        foreach ($xml as $key \u003d\u003e $val) {",
        "            foreach ($val[\u0027fields\u0027][\u0027field_group\u0027] as $key1 \u003d\u003e $val1) {",
        "",
        "                foreach ($val1[\u0027field\u0027] as $key2 \u003d\u003e $val2) {",
        "",
        "                    if (count($val2) \u003d\u003d 1 \u0026\u0026 count($val2[\u0027@attributes\u0027]) \u003d\u003d 3) {",
        "",
        "                        $namekey[$i] \u003d $val2[\u0027@attributes\u0027][\u0027name\u0027];",
        "                        $name[$i] \u003d $val2[\u0027@attributes\u0027][\u0027description\u0027];",
        "                        $i++;",
        "                    } elseif (count($val2) \u003d\u003d 3) {",
        "",
        "                        $namekey[$i] \u003d $val1[\u0027field\u0027][\u0027@attributes\u0027][\u0027name\u0027];",
        "                        $name[$i] \u003d $val1[\u0027field\u0027][\u0027@attributes\u0027][\u0027description\u0027];",
        "                        $i++;",
        "                    }",
        "",
        "                }",
        "            }",
        "        }",
        "",
        "        $carNum \u003d count($deviceid);",
        "        for ($n \u003d 0; $n \u003c $carNum; $n++) {",
        "            DB::table(\u0027t_vehicle_monitor_info\u0027)-\u003ewhere(\u0027deviceid\u0027, $deviceid[$n])-\u003edelete();",
        "        }",
        "        for ($n \u003d 0; $n \u003c $carNum; $n++) {",
        "            for ($i \u003d 0, $z \u003d 0; $i \u003c $circleNum; $i++) {",
        "                for ($m \u003d 0; $m \u003c $dataNum[$i]; $m++) {",
        "                    $taget[$z] \u003d [",
        "                        \u0027deviceid\u0027 \u003d\u003e $deviceid[$n],",
        "                        \u0027xml_smallsys\u0027 \u003d\u003e $smallsys[$i],",
        "                        \u0027xml_smallsysc\u0027 \u003d\u003e $smallsysc[$i],",
        "                        \u0027key\u0027 \u003d\u003e $namekey[$z],",
        "                        \u0027ename\u0027 \u003d\u003e $namekey[$z],",
        "                        \u0027cname\u0027 \u003d\u003e $name[$z],",
        "                        \u0027index\u0027 \u003d\u003e $m,",
        "                    ];",
        "                    DB::table(\u0027t_vehicle_monitor_info\u0027)-\u003einsert($taget[$z]);",
        "",
        "                    $z++;",
        "                }",
        "            }",
        "        }",
        "",
        "",
        "        DB::statement(DB::raw(\"UPDATE chezai_test.t_vehicle_monitor_info SET TYPE\u003d\u0027analog\u0027  WHERE TYPE IS NULL  AND ename IN (SELECT COLUMN_NAME FROM information_schema.COLUMNS WHERE  table_schema\u003d\u0027chezai_test\u0027 ",
        "AND table_name IN (\u0027t_vehicleanaloginfo\u0027,\u0027t_electricvehicleana\u0027,\u0027t_electricvehicleana2\u0027) ) ;\"));",
        "        DB::statement(DB::raw(\"UPDATE chezai_test.t_vehicle_monitor_info SET TYPE\u003d\u0027state\u0027  WHERE TYPE IS NULL; \"));",
        "",
        "        for ($n \u003d 0; $n \u003c $carNum; $n++) {",
        "            $this-\u003emodifyXmlAlarm($deviceid[$n]);",
        "        }",
        "",
        "",
        "        $this-\u003emodifyXmlsetting();",
        "",
        "",
        "        return $this-\u003esetJsonResponse(SUCCESS, []);",
        "",
        "    }",
        "",
        "    private function modifyXmlAlarm($deviceId)",
        "    {",
        "",
        "",
        "        $aql \u003d \"   select b.`type` as xml_smallsysc,a.`type`,a.cname,a.ename,a.ename as `key` ",
        "                from ( select parenttype as bigsysc, `type` as smallsysc,\u0027alarm\u0027 as `type`, alarmtypename as cname,concat(\u00271\u0027,alarmtypeid) as ename",
        "    from t_vehiclealarmtype  ",
        "        union all ",
        "    SELECT parenttype AS bigsysc, `type` AS smallsysc,\u0027alarm\u0027 AS `type`, alarmtypename AS cname,CONCAT(\u00272\u0027,alarmtypeid) AS ename",
        "    FROM t_vehiclealarmtype2  )a ",
        "        left join t_vehicleinfo_system_type b on a.smallsysc\u003db.`type` \";",
        "        $alarmData \u003d (array)DB::select($aql);",
        "        $index \u003d 0;",
        "        foreach ($alarmData as $value) {",
        "",
        "            $temp \u003d (array)$value;",
        "            $temp[\u0027index\u0027] \u003d $index;",
        "            $temp[\u0027deviceid\u0027] \u003d $deviceId;",
        "            DB::table(\u0027t_vehicle_monitor_info\u0027)-\u003einsert($temp);",
        "            $index++;",
        "",
        "        }",
        "",
        "",
        "    }",
        "",
        "    public function modifyXmlsetting()",
        "    {",
        "",
        "        // 前端所用 名称数组",
        "        $smallsys \u003d [\u0027glassbreakersysmonitor\u0027, \u0027videosurveillancesysmonitor\u0027, \u0027stationindicatorsysmonitor\u0027,",
        "            \u0027coinboxsysmonitor\u0027, \u0027adassysmonitor\u0027, \u0027electricsteeringsysmonitor\u0027, \u0027insulationsysmonitor\u0027,",
        "            \u0027radarsysmonitor\u0027, \u0027firesysmonitor\u0027, \u0027smokesystem\u0027, \u0027startsysmonitor\u0027, \u0027antifatiguesysmonitor\u0027, \u0027hotmanagersysmonitor\u0027,",
        "            \u0027hydrogenfuelsysmonitor\u0027, \u0027abssysmonitor\u0027, \u0027atssysmonitor\u0027, \u0027dcdcsysmonitor\u0027, \u0027ebssysmonitor\u0027, \u0027ecassysmonitor\u0027,",
        "            \u0027transsysmonitor\u0027, \u0027brakesysmonitor\u0027, \u0027bodyinfomonitor\u0027, \u0027chargesysmonitor\u0027, \u0027defostsysmonitor\u0027, \u0027lightsysmonitor\u0027,",
        "            \u0027batterysysmonitor\u0027, \u0027mortorsysmonitor\u0027, \u0027capasysmonitor\u0027, \u0027powersysmonitor\u0027, \u0027powerinformonitor\u0027, \u0027generatorsysmonitor\u0027, \u0027enginesysmonitor\u0027, \u0027fansysmonitor\u0027,",
        "            \u0027lubricationmonitor\u0027,",
        "            \u0027hingeplatesysmonitor\u0027, \u0027passengerdetection\u0027, \u0027conditionsysmonitor\u0027, \u0027anticlipsysmonitor\u0027, \u0027doorsysmonitor\u0027, \u0027airpumpsysmonitor\u0027,",
        "            \u0027tyrepressuresysmonitor\u0027, \u0027oilpumpsysmonitor\u0027, \u0027wipersysmonitor\u0027, \u0027centralizedLubrication\u0027, \u0027diandubiaosysmonitor\u0027, \u0027yibiaopansystem\u0027,",
        "",
        "",
        "        ];",
        "        $smallsysc \u003d [\u0027破玻器系统\u0027, \u0027视频监控系统\u0027, \u0027报站器系统\u0027,",
        "            \u0027投币箱系统\u0027, \u0027ADAS系统监控\u0027, \u0027电动转向系统监控\u0027, \u0027绝缘监测仪系统\u0027,",
        "            \u0027雷达系统\u0027, \u0027灭火系统\u0027, \u0027烟雾系统\u0027, \u0027启动系统\u0027, \u0027防疲劳系统\u0027, \u0027热管理系统\u0027,",
        "            \u0027氢燃料系统\u0027, \u0027ABS系统监控\u0027, \u0027ATS系统监控\u0027, \u0027DCDC系统监控\u0027, \u0027EBS系统监控\u0027, \u0027ECAS系统监控\u0027,",
        "            \u0027变速箱系统监控\u0027, \u0027刹车系统监控\u0027, \u0027车身信息监控\u0027, \u0027充电系统监控\u0027, \u0027除霜系统监控\u0027, \u0027灯光系统监控\u0027,",
        "            \u0027电池系统监控\u0027, \u0027电机系统监控\u0027, \u0027电容系统监控\u0027, \u0027电源系统监控\u0027, \u0027电源信息监控\u0027, \u0027发电机系统监控\u0027, \u0027发动机系统监控\u0027, \u0027风扇系统监控\u0027,",
        "            \u0027集中润滑监控\u0027,",
        "            \u0027铰接盘系统监控\u0027, \u0027客流检测\u0027, \u0027空调系统监控\u0027, \u0027门防夹及应急阀监控\u0027, \u0027门系统监控\u0027, \u0027气泵系统监控\u0027,",
        "            \u0027胎压系统监控\u0027, \u0027油泵系统监控\u0027, \u0027雨刮系统监控\u0027, \u0027集中润滑监控\u0027, \u0027电度表信息监控\u0027, \u0027仪表盘系统监控\u0027,",
        "",
        "        ];",
        "",
        "",
        "        $n \u003d count($smallsysc);",
        "        $middle \u003d [];",
        "        $middle1 \u003d [];",
        "        $middle2 \u003d [];",
        "        $middle3 \u003d [];",
        "        for ($m \u003d 0; $m \u003c $n; $m++) {",
        "            $middle[$m] \u003d str_replace(\"系统\", \u0027\u0027, $smallsysc[$m]);",
        "            $middle1[$m] \u003d str_replace(\"检测\", \u0027\u0027, $middle[$m]);",
        "            $middle3[$m] \u003d str_replace(\"计\", \u0027\u0027, $middle1[$m]);",
        "            $middle2[$m] \u003d str_replace(\"监控\", \u0027\u0027, $middle[$m]);",
        "        }",
        "",
        "        for ($m \u003d 0; $m \u003c $n; $m++) {",
        "            DB::statement(DB::raw(\"UPDATE t_vehicle_monitor_info SET smallsysc\u003d\u0027$smallsysc[$m]\u0027,smallsys\u003d\u0027$smallsys[$m]\u0027 WHERE xml_smallsysc LIKE \u0027%$middle2[$m]%\u0027 ",
        "and smallsys is null\"));",
        "        }",
        "",
        "        for ($m \u003d 0; $m \u003c $n; $m++) {",
        "            if ($middle2[$m] \u003d\u003d \u0027电机\u0027) {",
        "                $bigsys \u003d DB::select(\"select parenttype from t_vehicleinfo_system_type  WHERE type LIKE \u0027$middle2[$m]%\u0027\");",
        "            } else {",
        "                $bigsys \u003d DB::select(\"select parenttype from t_vehicleinfo_system_type  WHERE type LIKE \u0027%$middle2[$m]%\u0027\");",
        "            }",
        "            if (!empty($bigsys)) {",
        "                $bigsysname \u003d $bigsys[0]-\u003eparenttype;",
        "                switch ($bigsysname) {",
        "                    case \u0027主动安全\u0027:",
        "                        $bigsysename \u003d \u0027activeSafety\u0027;",
        "                        break;",
        "                    case \u0027动力总成\u0027:",
        "                        $bigsysename \u003d \u0027powerTrain\u0027;",
        "                        break;",
        "                    case \u0027底盘系统\u0027:",
        "                        $bigsysename \u003d \u0027siteSystem\u0027;",
        "                        break;",
        "                    case \u0027辅助系统\u0027:",
        "                        $bigsysename \u003d \u0027auxiliarySystem\u0027;",
        "                        break;",
        "                    case \u0027电器系统\u0027:",
        "                        $bigsysename \u003d \u0027electricalSystem\u0027;",
        "                        break;",
        "",
        "                }",
        "                DB::statement(DB::raw(\"UPDATE t_vehicle_monitor_info SET bigsysc\u003d\u0027$bigsysname\u0027,bigsys\u003d\u0027$bigsysename\u0027 WHERE xml_smallsysc LIKE \u0027%$middle2[$m]%\u0027 ",
        "and bigsysc is null \"));",
        "            }",
        "",
        "",
        "        }",
        "",
        "",
        "        return $n;",
        "    }",
        "",
        "    /**",
        "     * @Description 根据单列时间类型获取where中条件字符串",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/2/20 17:25",
        "     */",
        "    private function getWhereStrByTimeType($column, $timeType, $startdate, $enddate)",
        "    {",
        "        $whereStr \u003d \u0027\u0027;",
        "        switch ($timeType) {",
        "            case -1:",
        "                //今天",
        "                $startTime \u003d date(\"Y-m-d\");",
        "                $endTime \u003d date(\"Y-m-d\", strtotime(\"+1 day\"));",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \" 00:00:00\u0027 and $column \u003c \u0027\" . $endTime . \" 00:00:00\u0027 \";",
        "                break;",
        "            case 0:",
        "                //last day",
        "                $startTime \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 1:",
        "                // 7day 不包含今天",
        "                $startTime \u003d date(\"Y-m-d\", strtotime(\"-7 day\"));",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 2:",
        "                // this month",
        "                $startTime \u003d date(\"Y-m-01\");",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 3:",
        "                // last month",
        "                $startTime \u003d date(\"Y-m-01\", strtotime(\"-1 month\"));",
        "                $endTime \u003d date(\u0027Y-m-d\u0027, strtotime(\"$startTime +1 month\"));",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 4:",
        "                // this year",
        "                $startTime \u003d date(\"Y-01-01\");",
        "                $endTime \u003d date(\u0027Y-m-d\u0027);",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 5:",
        "                // last year",
        "                $startTime \u003d date(\"Y-01-01\", strtotime(\"-1 year\"));",
        "                $endTime \u003d date(\u0027Y-m-d\u0027, strtotime(\"$startTime +1 year\"));",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 6:",
        "                // last year",
        "                if (isset($startdate) \u0026\u0026 isset($enddate)) {",
        "                    $whereStr .\u003d \" and $column \u003e\u003d \u0027$startdate\u0027 and $column \u003c\u003d \u0027$enddate\u0027 \";",
        "                }",
        "                break;",
        "            default:",
        "                break;",
        "        }",
        "        return $whereStr;",
        "    }",
        "",
        "    /**",
        "     * @Description 过滤报警时间",
        "     * @Param",
        "     * @Return",
        "     * @Author BHLO",
        "     * @Date 2019/9/02",
        "     */",
        "    private function getdataByTimeType($column, $timeType, $startdate, $enddate)",
        "    {",
        "        $whereStr \u003d \u0027\u0027;",
        "        switch ($timeType) {",
        "            case -1:",
        "                //今天",
        "                $startTime \u003d date(\"Y-m-d\");",
        "                $endTime \u003d date(\"Y-m-d\", strtotime(\"+1 day\"));",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \" 00:00:00\u0027 and $column \u003c \u0027\" . $endTime . \" 00:00:00\u0027 \";",
        "                break;",
        "            case 0:",
        "                //last day",
        "                $startTime \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 1:",
        "                // 7day 不包含今天",
        "                $startTime \u003d date(\"Y-m-d\", strtotime(\"-7 day\"));",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 2:",
        "                // this month",
        "                $startTime \u003d date(\"Y-m-01\");",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 3:",
        "                // last month",
        "                $startTime \u003d date(\"Y-m-01\", strtotime(\"-1 month\"));",
        "                $endTime \u003d date(\u0027Y-m-d\u0027, strtotime(\"$startTime +1 month\"));",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 4:",
        "                // this year",
        "                $startTime \u003d date(\"Y-01-01\");",
        "                $endTime \u003d date(\u0027Y-m-d\u0027);",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 5:",
        "                // last year",
        "                $startTime \u003d date(\"Y-01-01\", strtotime(\"-1 year\"));",
        "                $endTime \u003d date(\u0027Y-m-d\u0027, strtotime(\"$startTime +1 year\"));",
        "                $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startTime . \"\u0027 and $column \u003c \u0027\" . $endTime . \"\u0027\";",
        "                break;",
        "            case 6:",
        "                // last year",
        "                if (isset($startdate) \u0026\u0026 isset($enddate)) {",
        "                    $whereStr \u003d \"  and $column \u003e\u003d \u0027\" . $startdate . \"\u0027 and $column \u003c \u0027\" . $enddate . \"\u0027\";",
        "                }",
        "                break;",
        "            default:",
        "                break;",
        "        }",
        "        return $whereStr;",
        "    }",
        "",
        "",
        "    private function getdataByTime($timeType, $startdate, $enddate)",
        "    {",
        "        switch ($timeType) {",
        "            case -1:",
        "                //今天",
        "                $startTime \u003d date(\"Y-m-d\");",
        "                $endTime \u003d date(\"Y-m-d\", strtotime(\"+1 day\"));",
        "                break;",
        "            case 0:",
        "                //last day",
        "                $startTime \u003d date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                break;",
        "            case 1:",
        "                // 7day 不包含今天",
        "                $startTime \u003d date(\"Y-m-d\", strtotime(\"-7 day\"));",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                break;",
        "            case 2:",
        "                // this month",
        "                $startTime \u003d date(\"Y-m-01\");",
        "                $endTime \u003d date(\"Y-m-d\");",
        "                break;",
        "            case 3:",
        "                // last month",
        "                $startTime \u003d date(\"Y-m-01\", strtotime(\"-1 month\"));",
        "                $endTime \u003d date(\u0027Y-m-d\u0027, strtotime(\"$startTime +1 month\"));",
        "                break;",
        "            case 4:",
        "                // this year",
        "                $startTime \u003d date(\"Y-01-01\");",
        "                $endTime \u003d date(\u0027Y-m-d\u0027);",
        "                break;",
        "            case 5:",
        "                // last year",
        "                $startTime \u003d date(\"Y-01-01\", strtotime(\"-1 year\"));",
        "                $endTime \u003d date(\u0027Y-m-d\u0027, strtotime(\"$startTime +1 year\"));",
        "                break;",
        "            case 6:",
        "                // last year",
        "                if (isset($startdate) \u0026\u0026 isset($enddate)) {",
        "                    $startTime \u003d $startdate;",
        "                    $endTime \u003d $enddate;",
        "                }",
        "                break;",
        "            default:",
        "                break;",
        "        }",
        "        return [$startTime, $endTime];",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getSystemFenLei",
        "     * @name: 根据条件获取系统分类",
        "     * @author: bhl",
        "     * @edittime: 2019/3/20 17:44",
        "     * @remark 该系统分类来自报警类型表，某些大系统分类不同，例如主动安全 与 主动安全系统",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getSystemFenLei(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $sql \u003d \"SELECT parenttype FROM t_vehiclealarmtype WHERE parenttype IS NOT NULL GROUP BY parenttype \";",
        "        $records \u003d DB::select($sql);",
        "        //判断当前账号显示大系统分类",
        "        $bigSystems \u003d DB::table(\"t_vehiclesystemtypeinfo\")-\u003egroupBy(\"parentSystemEn\")-\u003eorderBy(\"parentSystemEn\")-\u003eselect(\"parentSystemCn\")-\u003eget();",
        "        if (!empty(Auth::user()-\u003eparentSystemKey)) {",
        "            $binStr \u003d strrev(sprintf(\u0027%0\u0027 . count($bigSystems) . \u0027s\u0027, decbin(Auth::user()-\u003eparentSystemKey)));",
        "            foreach ($bigSystems as $index \u003d\u003e $system) {",
        "                if (substr($binStr, $index, 1) \u003d\u003d 1) {",
        "                    foreach ($records as $innerKey \u003d\u003e $innerVal) {",
        "                        if (strstr($bigSystems[$index]-\u003eparentSystemCn, $innerVal-\u003eparenttype)) {",
        "                            unset($records[$innerKey]);",
        "                        }",
        "                    }",
        "                    unset($bigSystems[$index]);",
        "                }",
        "            }",
        "        }",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, array_values($records));",
        "        return $ret;",
        "    }",
        "",
        "    /**API: api/statistic/getBreakCarDetail",
        "     * @name: 根据条件获取故障详细",
        "     * @author: zhangzhufu",
        "     * @edittime: 2019/2/22 16:58",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: page,description:当前页",
        "     *parameter2: count,description:每页显示数据数量",
        "     *parameter3: deptid,description:线路id",
        "     *parameter4: depttype,description:查询类型",
        "     *parameter5: alarmLevel,description:故障等级",
        "     *parameter6: breaktype,description:查询类型(动力总成、电器总成、底盘系统、辅助系统)",
        "     *parameter7: sortKey,description:排序字段",
        "     *parameter8: sortVal,description:排序类型（asc，desc)",
        "     *parameter9: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getBreakCarDetail(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $records \u003d $this-\u003egetRecordsfromBreakCarDetail($this-\u003eparams);//分页",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027t_break_car_detail\u0027, $records, $this-\u003eparams);//添加中英文表头",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     * @Description 根据条件获取故障详细",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/2/22 16:04",
        "     */",
        "    public function getRecordsfromBreakCarDetail($params)",
        "    {",
        "        $count \u003d isset($params[\u0027count\u0027]) ? $params[\u0027count\u0027] : 8;",
        "        $page \u003d isset($params[\u0027page\u0027]) ? $params[\u0027page\u0027] : 1;",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $countSql \u003d \"select count(*) as total \";",
        "        $selectSql \u003d \" SELECT companyName,subCompanyName,groupName,lineName,vehicleNo,times\";",
        "        $breakDown \u003d \"api_breakdowns\";",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        $datatype \u003d 0;",
        "        $depttype \u003d \u0027lineDeptid\u0027;",
        "        if (isset($params[\u0027timeType\u0027])) {",
        "            $datatype \u003d $params[\u0027timeType\u0027];",
        "        };",
        "        if (isset($params[\u0027deptid\u0027])) {",
        "            $deptid \u003d $params[\u0027deptid\u0027];",
        "        };",
        "        if (isset($params[\u0027depttype\u0027])) {",
        "            $depttype \u003d $params[\u0027depttype\u0027];",
        "        };",
        "        switch ($datatype) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                break;",
        "            case 4: // this year",
        "                $breakDown \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $breakDown \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "        }",
        "        $fixedcondition \u003d \" and vehicleNo is not null GROUP BY vehicleNo ) a \";",
        "        // 报警级别",
        "        //$alarmLevel \u003d 0;",
        "        $sqlLevel \u003d \"1\u003d1\";",
        "        $alarmLevel \u003d null;",
        "        if (isset($params[\u0027alarmLevel\u0027]) \u0026\u0026 $params[\u0027alarmLevel\u0027] \u003c\u003e \u0027\u0027) {",
        "            $alarmLevel \u003d $params[\u0027alarmLevel\u0027];",
        "            $sqlLevel \u003d \"alarmLevel\u003d$alarmLevel\";",
        "        }",
        "",
        "        $sql \u003d \" FROM (SELECT companyName,subCompanyName,groupName,lineName,vehicleNo, SUM(total) AS times FROM $breakDown ab inner join t_mauth_dept tmd on ab.deptId \u003d tmd.lineDeptId  WHERE $sqlLevel  \";",
        "        /*",
        "       *",
        "       * 判断当前deptId在报警等级表中是否有设置;",
        "       * true：使用报警等级表中设置的;",
        "       * false：使用报警量表中的录入的报警等级",
        "       *",
        "       * */",
        "        if ($depttype \u003d\u003d \u0027lineDeptid\u0027 \u0026\u0026 isset($alarmLevel)) {",
        "            $levelinfo \u003d DB::select(\"select * from t_alarmlevelinfo where deptId\u003d$deptid\");",
        "            if (!empty($levelinfo)) {",
        "                $sqltemp \u003d \"l.alarmLevel\u003d$alarmLevel OR ab.alarmLevel\u003d$alarmLevel\";",
        "                if ($alarmLevel \u003d\u003d 0) $sqltemp \u003d \"l.alarmLevel\u003d$alarmLevel OR l.`alarmLevel`IS NULL\";",
        "                $sql \u003d \" FROM (SELECT companyName,subCompanyName,groupName,lineName,vehicleNo, SUM(total) AS times FROM $breakDown ab INNER JOIN (",
        "            SELECT alarmname,alarmtypename FROM `t_vehiclealarmtype` WHERE parenttype LIKE \u0027%\u0027",
        "            UNION ALL",
        "            SELECT alarmname,alarmtypename FROM `t_vehiclealarmtype2` WHERE parenttype LIKE \u0027%\u0027 ) alarm ON ab.alarmtypename \u003d alarm.alarmtypename ",
        "            inner join t_mauth_dept tmd on ab.deptId \u003d tmd.lineDeptId ",
        "            LEFT JOIN t_alarmlevelinfo l ON alarm.alarmname\u003dl.`alarmTypeName` AND l.deptId\u003d$deptid WHERE ( $sqltemp )  \";",
        "            }",
        "        }",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" and $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027 \";",
        "            } else {",
        "                $sql .\u003d \" and $deptlevel\u003d$id \";",
        "            };",
        "            $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "            $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "            $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "            $sql .\u003d \" ORDER BY times DESC \";",
        "            $sql .\u003d \" limit $offset , $count\";",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "            $data \u003d [",
        "                \u0027current_page\u0027 \u003d\u003e $page,",
        "                \u0027from\u0027 \u003d\u003e $offset + 1,",
        "                \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "                \u0027per_page\u0027 \u003d\u003e $count,",
        "                \u0027to\u0027 \u003d\u003e $offset + $count,",
        "                \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "                \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "                \u0027data\u0027 \u003d\u003e $records",
        "            ];",
        "            return $data;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" and  $depttype \u003d \u0027$deptid\u0027 \";",
        "        } else {",
        "            $sql .\u003d \" and 1\u003d1 \";",
        "        };",
        "        $sql .\u003d \"and\" . $dataconditon . $fixedcondition;",
        "",
        "        $total \u003d (array)CacheUtil::getDataFromCacheOrDatabase($countSql . $sql)[0];",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "        $sql .\u003d \" ORDER BY times DESC \";",
        "        $sql .\u003d \" limit $offset , $count\";",
        "",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($selectSql . $sql, 20);",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total[\u0027total\u0027],",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total[\u0027total\u0027] / $count),",
        "            \u0027data\u0027 \u003d\u003e $records",
        "        ];",
        "        return $data;",
        "    }",
        "",
        "    /**",
        "     * @Description 故障分析导出全部数据",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/2/22 17:19",
        "     */",
        "    public function exportAllSystemAlarm(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $this-\u003epredo(\u0027system_alarm\u0027, \u0027system_alarm\u0027, 27);",
        "        \\Log::info(\"故障分析 统计查询全部\");",
        "",
        "        if (isset($this-\u003eparams[\u0027summaryType\u0027]) \u0026\u0026 $this-\u003eparams[\u0027summaryType\u0027] \u003d\u003d 1) {",
        "            $this-\u003eparams[\u0027count\u0027] \u003d 100000;",
        "            $records \u003d $this-\u003egetSystemAlarmSummaryData($request);",
        "        } else {",
        "            $records \u003d $this-\u003egetAllSystemAlarmRecords($this-\u003eparams);",
        "        }",
        "        \\Log::info(\"导出系统 故障 列表\");",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027system_alarm\u0027, 0, $records);//excel表格导出",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        /* if (!isset($records[0][\u0027总公司\u0027])) {",
        "             $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "             $records[0][\u0027总公司\u0027] \u003d $recordsCompanyName-\u003ecompanyName;",
        "         }",
        "         $title \u003d $records[0][\u0027总公司\u0027] . \"---\";",
        "         $title1 \u003d \"全部故障分析报表\";",
        "         if (isset($records[\u0027总公司\u0027])) {",
        "             $title1 \u003d $records[\u0027总公司\u0027];",
        "         }",
        "         $title .\u003d $title1;*/",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "        if (!isset($records[0][\u0027总公司\u0027])) {",
        "            $recordsCompanyName \u003d DB::table(\u0027t_mauth_dept\u0027)-\u003ewhere(\u0027lineDeptId\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            if (!isset($recordsCompanyName-\u003ecompanyName)) {",
        "                $recordsCompanyName2 \u003d DB::table(\u0027v_vehicleinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027depttype\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027deptid\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "                $records[0][\u0027总公司\u0027] \u003d $recordsCompanyName2-\u003ecompanyName;",
        "            } else {",
        "                $records[0][\u0027总公司\u0027] \u003d $recordsCompanyName-\u003ecompanyName;",
        "            }",
        "        }",
        "        $title \u003d $records[0][\u0027总公司\u0027] . \"---\";",
        "        switch ($datatype) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日故障分析报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日故障分析报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天故障分析报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月故障分析报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月故障分析报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "",
        "                $title .\u003d \u0027今年故障分析报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年故障分析报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startDate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027endDate\u0027])) {",
        "//                    $title \u003d $this-\u003eparams[\u0027startDate\u0027] . \"-\";",
        "//                    $title .\u003d $this-\u003eparams[\u0027endDate\u0027] . \u0027故障分析报表\u0027;",
        "                    $title .\u003d \"故障分析报表---\" . $this-\u003eparams[\u0027startDate\u0027] . \"至\" . $this-\u003eparams[\u0027endDate\u0027];",
        "                }",
        "        }",
        "        //$title \u003d \u0027全部故障分析报表\u0027;",
        "        /* Excel::create($this-\u003egetDeptName(0) . time(), function ($excel) use ($records, $location, $title) {",
        "             $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                 $userName \u003d Auth::user()-\u003ereal_name;",
        "                 $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                 $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                 $sheet-\u003esetValueOfCell(\"制表人:$userName            \" . $title . \"              时间：$first\", \u0027A\u0027, 1);",
        "                 $sheet-\u003efromArray($records, null, \u0027A2\u0027);",
        "                 $sheet-\u003esetAutoSize(true);",
        "             });",
        "         })-\u003eexport(\u0027xlsx\u0027);*/",
        "        Excel::create($this-\u003egetDeptName(0) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "    /**",
        "     * @Description 查询全部故障分析数据",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/2/22 17:32",
        "     */",
        "    public function getAllSystemAlarmRecords($params)",
        "    {",
        "        $timeType \u003d isset($params[\u0027timeType\u0027]) ? $params[\u0027timeType\u0027] : 0;",
        "        $breakDowntableName \u003d \"api_breakdowns\";",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "        }",
        "        switch ($timeType) {",
        "            case 0: //last day",
        "                $dataconditon \u003d \" stat_date\u003d CURRENT_DATE()-interval 1 day \";",
        "                break;",
        "            case 1:  // 7day",
        "                $dataconditon \u003d \" stat_date\u003e\u003d CURRENT_DATE()-interval 7 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 2:  // this month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 3:  // last month",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval 1 month and stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day \";",
        "                break;",
        "            case 4: // this year",
        "                $breakDowntableName \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month and stat_date\u003c CURRENT_DATE() \";",
        "                break;",
        "            case 5: // last year",
        "                $breakDowntableName \u003d \"api_breakdowns_month\";",
        "                $dataconditon \u003d \" stat_date\u003e\u003dCURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month - interval 1 year and ",
        "                stat_date\u003c CURRENT_DATE() - interval day(CURRENT_DATE())-1 day - interval month(CURRENT_DATE()) -1 month \";",
        "                break;",
        "            case 6:",
        "                $breakDowntableName \u003d \"api_breakdowns\";",
        "                $dataconditon \u003d \" 1\u003d1 \";",
        "                if (isset($params[\u0027startDate\u0027]) \u0026\u0026 isset($params[\u0027endDate\u0027])) {",
        "                    $startdate \u003d $params[\u0027startDate\u0027];",
        "                    $enddate \u003d $params[\u0027endDate\u0027];",
        "                    $dataconditon .\u003d \" and stat_date\u003e\u003d\u0027$startdate\u0027 and stat_date\u003c\u003d \u0027$enddate\u0027 \";",
        "                }",
        "                break;",
        "        }",
        "        $sql \u003d \"select a.vehicleNo, groupName,subcompanyName,companyName, lineName,case motorType ",
        "        when 1 then \u0027燃油车\u0027 ",
        "        when 2 then \u0027电车\u0027 ",
        "        when 3 then \u0027油电混合动力车\u0027 ",
        "        when 4 then \u0027燃气车\u0027 ",
        "        when 5 then \u0027气电混合动力车\u0027 end as vehicleType ,vehicleSN as vin,total ",
        "        from (",
        "                select  vehicleNo,alarmtypename, sum(total)  as total from $breakDowntableName where vehicleNo IN(",
        "                     SELECT vehicleNo FROM t_vehicleinfo b INNER JOIN v_lineinfo c ON b.deptId \u003d c.lineDeptId\";",
        "        $deptid \u003d isset($params[\u0027deptid\u0027]) ? $params[\u0027deptid\u0027] : null;",
        "        $depttype \u003d isset($params[\u0027depttype\u0027]) ? $params[\u0027depttype\u0027] : \u0027lineDeptid\u0027;",
        "",
        "        $fixedcondition \u003d \"  group by vehicleNo) a   left join v_vehicleinfo b on a.vehicleNo\u003db.`vehicleNo` group by vehicleNo  order by total desc \";",
        "        if ($deptlevel !\u003d null) {",
        "            if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "                $sql .\u003d \" where $deptlevel\u003d$id and $depttype \u003d \u0027$deptid\u0027) and \" . $dataconditon;",
        "            } else {",
        "                $sql .\u003d \" where $deptlevel\u003d$id) and \" . $dataconditon;",
        "            };",
        "",
        "            $sql .\u003d $fixedcondition;",
        "            $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($sql, 20);",
        "            return $records;",
        "        };",
        "        if ($deptid !\u003d null \u0026\u0026 $depttype !\u003d null) {",
        "            $sql .\u003d \" where  $depttype \u003d \u0027$deptid\u0027) and \" . $dataconditon;",
        "        } else {",
        "            $sql .\u003d \" where 1\u003d1 ) and \" . $dataconditon;",
        "        };",
        "",
        "        $sql .\u003d $fixedcondition;",
        "        $records \u003d (array)CacheUtil::getDataFromCacheOrDatabaseAndSetTime($sql, 20);",
        "        return $records;",
        "    }",
        "",
        "    /**",
        "     * @Description 获取系统大小分类,修改为来自t_vehiclesystemtypeinfo",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/3/14 21:29",
        "     */",
        "    public function getAllVehicleSystems_old()",
        "    {",
        "        $companySign \u003d \"dongguan\";",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        $id \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $protocolVersion \u003d null;",
        "        if (!empty($this-\u003eparams[\"vehicleId\"]) || !empty($this-\u003eparams[\"vehicleNo\"]) || !empty($this-\u003eparams[\"companyDeptId\"])) {",
        "            $vehilceinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"protocolVersion\", \"company_sign\")",
        "                -\u003ewhere(\"vehicleId\", isset($this-\u003eparams[\"vehicleId\"]) ? $this-\u003eparams[\"vehicleId\"] : \"\")",
        "                -\u003eorWhere(\"vehicleNo\", isset($this-\u003eparams[\"vehicleNo\"]) ? $this-\u003eparams[\"vehicleNo\"] : \"\")",
        "                -\u003eorWhere(\"companyDeptId\", isset($this-\u003eparams[\"companyDeptId\"]) ? $this-\u003eparams[\"companyDeptId\"] : \"\")",
        "                -\u003efirst();",
        "            if (!empty($vehilceinfo-\u003eprotocolVersion) \u0026\u0026 !empty($vehilceinfo-\u003ecompany_sign)) {",
        "                $protocolVersion \u003d $vehilceinfo-\u003eprotocolVersion;",
        "                $companySign \u003d $vehilceinfo-\u003ecompany_sign;",
        "            }",
        "        } else if (!empty($this-\u003eparams[\"findKey\"]) \u0026\u0026 !empty($this-\u003eparams[\"findVal\"])) {",
        "            $vehicleinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"company_sign\")",
        "                -\u003ewhere($this-\u003eparams[\"findKey\"], \u0027\u003d\u0027, $this-\u003eparams[\"findVal\"])",
        "                -\u003efirst();",
        "",
        "            if ($vehicleinfo !\u003d null) {",
        "                $companySign \u003d $vehicleinfo-\u003ecompany_sign;",
        "            }",
        "        } elseif ($deptlevel !\u003d null \u0026\u0026 $id !\u003d null) {",
        "            $vehicleinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"company_sign\")",
        "                -\u003ewhere($deptlevel, $id)",
        "                -\u003efirst();",
        "            if (!empty($vehicleinfo-\u003ecompany_sign)) {",
        "                $companySign \u003d $vehicleinfo-\u003ecompany_sign;",
        "            }",
        "        }",
        "",
        "        // 判断json文件存在，更新后再获取信息",
        "        $path \u003d storage_path(\u0027json-repos/company-json/system.json\u0027);",
        "",
        "        if (!file_exists($path)) {",
        "            if (!file_exists($path)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, \"文件不存在\");",
        "            }",
        "        }",
        "        $categoryFieldJson \u003d json_decode(file_get_contents($path));",
        "        if ($protocolVersion \u003d\u003d null) $protocolVersion \u003d $companySign;",
        "        // 获取数据库中公司是否显示设置 默认false",
        "        $companySettingInfo \u003d DB::table(\"t_company_setting\")-\u003ewhere(\"company\", $protocolVersion)-\u003eselect(\"setting\")-\u003efirst();",
        "        $companySettingArray \u003d json_decode($companySettingInfo-\u003esetting);",
        "",
        "        $records \u003d array();",
        "        foreach ($categoryFieldJson-\u003e$companySign as $subEN \u003d\u003e $valueInfo) {",
        "            if (in_array($subEN, $companySettingArray)) {",
        "                $records[$subEN] \u003d [\"bigsysc\" \u003d\u003e $valueInfo-\u003eparentCN, \"bigsys\" \u003d\u003e $valueInfo-\u003eparentEN, \"smallsysc\" \u003d\u003e $valueInfo-\u003esubCN, \"smallsys\" \u003d\u003e $valueInfo-\u003esubEN];",
        "            }",
        "        }",
        "",
        "        $system \u003d array();",
        "        foreach ($records as $v) {",
        "            if (isset($system[$v[\u0027bigsys\u0027]])) {",
        "                array_push($system[$v[\u0027bigsys\u0027]][\"sun\"], [\"big\" \u003d\u003e $v[\u0027bigsys\u0027], \"en\" \u003d\u003e $v[\u0027smallsys\u0027], \"cn\" \u003d\u003e $v[\u0027smallsysc\u0027]]);",
        "            } else {",
        "                $system[$v[\u0027bigsys\u0027]] \u003d [\"en\" \u003d\u003e $v[\u0027bigsys\u0027], \"cn\" \u003d\u003e $v[\u0027bigsysc\u0027], \"sun\" \u003d\u003e [[\"big\" \u003d\u003e $v[\u0027bigsys\u0027], \"en\" \u003d\u003e $v[\u0027smallsys\u0027], \"cn\" \u003d\u003e $v[\u0027smallsysc\u0027]]]];",
        "            }",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $system);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAllVehicleSystems",
        "     * @name: 获取系统大小分类,修改为来自t_vehiclesystemtypeinfo",
        "     * @author: zhangzhufu",
        "     * @edittime: 2019/3/14 21:29",
        "     * @mode: post",
        "     *",
        "     * @param:",
        "     *parameter1: vehicleId,description:车辆ID",
        "     *parameter2: companyDeptId,description:公司ID",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAllVehicleSystems()",
        "    {",
        "        $companySign \u003d \"dongguan\";",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "",
        "        // 确定用户等级机构参数",
        "        $deptlevel \u003d null;",
        "        $id \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "        $protocolVersion \u003d null;",
        "        if (!empty($this-\u003eparams[\"vehicleId\"]) || !empty($this-\u003eparams[\"vehicleNo\"]) || !empty($this-\u003eparams[\"companyDeptId\"])) {",
        "            $vehilceinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"protocolVersion\", \"company_sign\")",
        "                -\u003ewhere(\"vehicleId\", isset($this-\u003eparams[\"vehicleId\"]) ? $this-\u003eparams[\"vehicleId\"] : \"\")",
        "                -\u003eorWhere(\"vehicleNo\", isset($this-\u003eparams[\"vehicleNo\"]) ? $this-\u003eparams[\"vehicleNo\"] : \"\")",
        "                -\u003eorWhere(\"companyDeptId\", isset($this-\u003eparams[\"companyDeptId\"]) ? $this-\u003eparams[\"companyDeptId\"] : \"\")",
        "                -\u003efirst();",
        "            if (!empty($vehilceinfo-\u003eprotocolVersion) \u0026\u0026 !empty($vehilceinfo-\u003ecompany_sign)) {",
        "                $protocolVersion \u003d $vehilceinfo-\u003eprotocolVersion;",
        "                $companySign \u003d $vehilceinfo-\u003ecompany_sign;",
        "            }",
        "        } else if (!empty($this-\u003eparams[\"findKey\"]) \u0026\u0026 !empty($this-\u003eparams[\"findVal\"])) {",
        "            $vehicleinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"company_sign\")",
        "                -\u003ewhere($this-\u003eparams[\"findKey\"], \u0027\u003d\u0027, $this-\u003eparams[\"findVal\"])",
        "                -\u003efirst();",
        "",
        "            if ($vehicleinfo !\u003d null) {",
        "                $companySign \u003d $vehicleinfo-\u003ecompany_sign;",
        "            }",
        "        } elseif ($deptlevel !\u003d null \u0026\u0026 $id !\u003d null) {",
        "            $vehicleinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"company_sign\")",
        "                -\u003ewhere($deptlevel, $id)",
        "                -\u003efirst();",
        "            if (!empty($vehicleinfo-\u003ecompany_sign)) {",
        "                $companySign \u003d $vehicleinfo-\u003ecompany_sign;",
        "            }",
        "        }",
        "        if ($protocolVersion \u003d\u003d null) $protocolVersion \u003d $companySign;",
        "        // 判断json文件存在，更新后再获取信息",
        "        //$path \u003d storage_path(\u0027json-repos/company-json/system.json\u0027);//system.json是合集",
        "        $path \u003d storage_path(\u0027json-repos/company-json/\u0027 . $protocolVersion . \u0027.json\u0027);",
        "        if (!file_exists($path)) {",
        "            if (!file_exists($path)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, \"文件不存在\");",
        "            }",
        "        }",
        "        $categoryFieldJson \u003d json_decode(file_get_contents($path));",
        "        // 获取数据库中公司是否显示设置 默认false",
        "        $companySettingInfo \u003d DB::table(\"t_company_setting\")-\u003ewhere(\"company\", $protocolVersion)-\u003eselect(\"setting\")-\u003efirst();",
        "        $companySettingArray \u003d json_decode($companySettingInfo-\u003esetting);",
        "",
        "        $records \u003d array();",
        "        foreach ($categoryFieldJson as $parentSystemEN \u003d\u003e $parentSystemInfo) {",
        "            //$parentSystemEN：父系统名 ，$parentSystemInfo：父系统下子系统信息，$subSystemEN：子系统名，$subSystemInfo：子系统下量信息",
        "            foreach ($parentSystemInfo-\u003esub as $subSystemEN \u003d\u003e $subSystemInfo) {",
        "                $subinfo \u003d (Array)json_decode(json_encode($subSystemInfo-\u003esub));",
        "                if (in_array($subSystemEN, $companySettingArray) \u0026\u0026 !empty($subinfo)) {",
        "                    $records[$subSystemEN] \u003d [\"bigsysc\" \u003d\u003e $parentSystemInfo-\u003ecname, \"bigsys\" \u003d\u003e $parentSystemInfo-\u003eename, \"smallsysc\" \u003d\u003e $subSystemInfo-\u003ecname, \"smallsys\" \u003d\u003e $subSystemInfo-\u003eename];",
        "                }",
        "            }",
        "        }",
        "",
        "        $system \u003d array();",
        "        foreach ($records as $v) {",
        "            if (isset($system[$v[\u0027bigsys\u0027]])) {",
        "                array_push($system[$v[\u0027bigsys\u0027]][\"sun\"], [\"big\" \u003d\u003e $v[\u0027bigsys\u0027], \"en\" \u003d\u003e $v[\u0027smallsys\u0027], \"cn\" \u003d\u003e $v[\u0027smallsysc\u0027]]);",
        "            } else {",
        "                $system[$v[\u0027bigsys\u0027]] \u003d [\"en\" \u003d\u003e $v[\u0027bigsys\u0027], \"cn\" \u003d\u003e $v[\u0027bigsysc\u0027], \"sun\" \u003d\u003e [[\"big\" \u003d\u003e $v[\u0027bigsys\u0027], \"en\" \u003d\u003e $v[\u0027smallsys\u0027], \"cn\" \u003d\u003e $v[\u0027smallsysc\u0027]]]];",
        "            }",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $system);",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAnalogStateAlarmBySmallSystemEn",
        "     * @name: 根据小分类获取模拟量/状态量/报警量",
        "     * @author: zhangzhufu",
        "     * @edittime: 2019/3/14 21:32",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: subSystemEn,description:查询类型",
        "     *parameter2: vehicleId,description:车辆ID",
        "     *parameter3: vehicleNo,description:车牌号",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAnalogStateAlarmBySmallSystemEn()",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $deptlevel \u003d null;",
        "        $id \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $deptlevel \u003d \"companyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 2:",
        "                $deptlevel \u003d \"subCompanyDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $deptlevel \u003d \"groupDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 4:",
        "                $deptlevel \u003d \"lineDeptId\";",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "",
        "        }",
        "",
        "        //小系统英文名称",
        "        $rules \u003d [",
        "            \u0027subSystemEn\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $protocolVersion \u003d \"dongguan\";",
        "",
        "        $parentSystemEn \u003d null;",
        "        $subSystemEnParam \u003d $this-\u003eparams[\"subSystemEn\"];",
        "        if (!empty($this-\u003eparams[\"vehicleId\"]) || !empty($this-\u003eparams[\"vehicleNo\"])) {",
        "            $vehicleinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"protocolVersion\")",
        "                -\u003ewhere(\"vehicleId\", isset($this-\u003eparams[\"vehicleId\"]) ? $this-\u003eparams[\"vehicleId\"] : \"\")",
        "                -\u003eorWhere(\"vehicleNo\", isset($this-\u003eparams[\"vehicleNo\"]) ? $this-\u003eparams[\"vehicleNo\"] : \"\")",
        "                -\u003efirst();",
        "            if (!empty($vehicleinfo-\u003eprotocolVersion)) {",
        "                $protocolVersion \u003d $vehicleinfo-\u003eprotocolVersion;",
        "            }",
        "        } elseif ($deptlevel !\u003d null \u0026\u0026 $id !\u003d null) {",
        "            $vehicleinfo \u003d DB::table(\"v_mauthdept_deviceinfo\")",
        "                -\u003eselect(\"company_sign\")",
        "                -\u003ewhere($deptlevel, $id)",
        "                -\u003efirst();",
        "            if (!empty($vehicleinfo-\u003ecompany_sign)) {",
        "                $protocolVersion \u003d $vehicleinfo-\u003ecompany_sign;",
        "            }",
        "        }",
        "",
        "        // 判断json文件存在，更新后再获取信息",
        "        $path \u003d storage_path(\u0027json-repos/company-json/\u0027 . $protocolVersion . \u0027.json\u0027);",
        "        if (!file_exists($path)) {",
        "            if (!file_exists($path)) {",
        "                return $this-\u003esetJsonResponse(REPEAT, \"协议不存在\");",
        "            }",
        "        }",
        "        $userSettingJsonInfo \u003d DB::table(\"t_user_setting_order\")",
        "            -\u003eselect(\"order_setting\")",
        "            -\u003ewhere(\"protocol_version\", $protocolVersion)",
        "            -\u003efirst();",
        "        $categoryFieldJson \u003d json_decode(file_get_contents($path));",
        "        if (isset($this-\u003eparams[\"parentSystemEn\"])) {",
        "            $parentSystemEn \u003d $this-\u003eparams[\"parentSystemEn\"];",
        "        } else {",
        "            foreach ($categoryFieldJson as $parentEn \u003d\u003e $parentInfo) {",
        "                foreach ($parentInfo-\u003esub as $subEn) {",
        "                    if ($subEn-\u003eename \u003d\u003d $subSystemEnParam) {",
        "                        $parentSystemEn \u003d $parentEn;",
        "                        break;",
        "                    }",
        "                }",
        "            }",
        "        }",
        "        if ($parentSystemEn \u003d\u003d null) return $this-\u003esetJsonResponse(REPEAT, \"分系统不存在\");",
        "        $categoryFieldParentJson \u003d $categoryFieldJson-\u003e$parentSystemEn-\u003e{\"sub\"}-\u003e$subSystemEnParam;",
        "        //返回必有三种类型",
        "        $varResult[\"analog\"] \u003d array();",
        "        $varResult[\"alarm\"] \u003d array();",
        "        $varResult[\"state\"] \u003d array();",
        "        if ($userSettingJsonInfo !\u003d null) {",
        "            $userSettingJsonObject \u003d json_decode($userSettingJsonInfo-\u003eorder_setting, true);",
        "",
        "            if (isset($userSettingJsonObject[$subSystemEnParam])) {",
        "",
        "                foreach ($categoryFieldParentJson-\u003e{\"sub\"} as $varInfo) {",
        "",
        "                    // 循环判断 当前元素是否为用户true配置",
        "                    foreach ($userSettingJsonObject[$subSystemEnParam] as $varable) {",
        "                        if ($varInfo-\u003eename \u003d\u003d $varable[\"key\"] \u0026\u0026 $varable[\"show\"]) {",
        "                            array_push($varResult[$varInfo-\u003etype], $varInfo);",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "        }",
        "        return $this-\u003esetJsonResponse(SUCCESS, $varResult);",
        "    }",
        "",
        "    /**",
        "     * @Description cassandra获取历史数据",
        "     * @Param $params $ids $columns",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/3/18 10:45",
        "     */",
        "    private function getCassandraData($params, $ids, $columns)",
        "    {",
        "        $session \u003d $this-\u003egetCassandraSession();",
        "        $vehicleDeviceIds \u003d explode(\",\", $ids);",
        "        $idCount \u003d count($vehicleDeviceIds);",
        "        $data \u003d [];",
        "        $dataArrIndex \u003d 0;",
        "        for ($n \u003d 0; $n \u003c $idCount; $n++) {",
        "            // 转换为 cql 可用的 时间 和 日期 条件",
        "            $startDate \u003d substr($params[\u0027startTime\u0027], 0, 10);",
        "            $startTime \u003d substr($params[\u0027startTime\u0027], 11, 9);",
        "//            $stopDate \u003d substr($params[\u0027endTime\u0027], 0, 10);",
        "            $stopTime \u003d substr($params[\u0027endTime\u0027], 11, 9);",
        "            //暂不支持跨天查询，可以这样写cql",
        "            $statement \u003d new \\Cassandra\\SimpleStatement(",
        "                \"SELECT * FROM chezai_test.vehicle_info  where  vehicledeviceid\u003d\u0027$vehicleDeviceIds[$n]\u0027 and  date\u003d\u0027$startDate\u0027 and time\u003e\u003d\u0027$startTime\u0027 and time\u003c\u003d\u0027$stopTime\u0027 \"",
        "            );",
        "            $result \u003d $session-\u003eexecute($statement);",
        "            foreach ($result as $row) {",
        "                $targetData \u003d [];",
        "                // 获取目标时间  $row里 的 date 为 时间戳 转换后的时间 为  “ ‘日期’ +08：00：00”  time 为 纳秒 换算 为 时：分：秒",
        "                $timeArr \u003d (array)$row[\u0027time\u0027];",
        "                $time \u003d $timeArr[\u0027nanoseconds\u0027]; // 纳秒 10的9次幂",
        "                $timeCount \u003d $time / 1000000000;",
        "                $second \u003d intval(($timeCount % 60));",
        "                $timeCount \u003d $timeCount - $second;",
        "                $min \u003d intval(($timeCount % 3600) / 60);",
        "                $timeCount \u003d $timeCount - 60 * $min;",
        "                $hour \u003d intval(floor($timeCount / 3600));",
        "                $year \u003d date(\u0027Y\u0027);",
        "                $timeStr \u003d date(\u0027H:i:s\u0027, mktime($hour, $min, $second, 1, 1, $year));",
        "                $dateArr \u003d (array)$row[\u0027date\u0027];",
        "                $date \u003d $dateArr[\u0027seconds\u0027];",
        "                $dateStr \u003d date(\u0027Y-m-d\u0027, $date);",
        "                $targetTimeStr \u003d $dateStr . \u0027 \u0027 . $timeStr;",
        "",
        "                $targetData[\u0027vehicledeviceid\u0027] \u003d $row[\u0027vehicledeviceid\u0027];",
        "                $targetData[\u0027time\u0027] \u003d $targetTimeStr;",
        "                $i \u003d 0;",
        "                foreach ($row as $key \u003d\u003e $value) {",
        "                    if ($value !\u003d null \u0026\u0026 substr($key, 0, 5) \u003d\u003d \u0027vinfo\u0027) {",
        "                        $arrTemp \u003d (array)$value;",
        "                        $arrValue \u003d $arrTemp[\u0027values\u0027];",
        "                        foreach ($columns as $key \u003d\u003e $item) {",
        "                            $targetData[\"$item\"] \u003d isset($arrValue[\"$item\"]) ? $arrValue[\"$item\"] : \u0027\u0027;",
        "                        }",
        "                    }",
        "                    $i++;",
        "                }",
        "                $data[$dataArrIndex] \u003d $targetData;",
        "                $dataArrIndex++;",
        "            }",
        "        };",
        "        return $data;",
        "",
        "    }",
        "",
        "    /**",
        "     * @Description 获取任务配置列表",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/3/16 17:59",
        "     */",
        "    public function getDataTransferTaskInfoList()",
        "    {",
        "        $rules \u003d [",
        "            \u0027page\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027count\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $page \u003d $this-\u003eparams[\u0027page\u0027];",
        "        $count \u003d $this-\u003eparams[\u0027count\u0027];",
        "        //获取当前账号管理机构",
        "        $deptIds \u003d $this-\u003egetMAuthedVehicles();",
        "        $offset \u003d $count * ($page - 1) \u003c\u003d 0 ? 0 : $count * ($page - 1);",
        "        $total \u003d DB::table(\"t_data_transfer_taskinfo\")",
        "            -\u003eselect(\"id\")",
        "            -\u003ewhereIn(\"deptId\", $deptIds)",
        "            -\u003ecount();",
        "        $recoreds \u003d DB::table(\"t_data_transfer_taskinfo\")",
        "            -\u003eselect(\"id\", \"taskName\", \"createTime\", \"state\")",
        "            -\u003ewhereIn(\"deptId\", $deptIds)",
        "            -\u003eoffset($offset)",
        "            -\u003elimit($count)",
        "            -\u003eget();",
        "",
        "        $data \u003d [",
        "            \u0027current_page\u0027 \u003d\u003e $page,",
        "            \u0027from\u0027 \u003d\u003e $offset + 1,",
        "            \u0027next_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027prev_page_url\u0027 \u003d\u003e \u0027\u0027,",
        "            \u0027per_page\u0027 \u003d\u003e $count,",
        "            \u0027to\u0027 \u003d\u003e $offset + $count,",
        "            \u0027total\u0027 \u003d\u003e $total,",
        "            \u0027last_page\u0027 \u003d\u003e (int)ceil($total / $count),",
        "            \u0027data\u0027 \u003d\u003e $recoreds",
        "        ];",
        "        return $data;",
        "",
        "    }",
        "",
        "    /**",
        "     * @Description 新增任务配置",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/3/16 17:58",
        "     */",
        "    public function addDataTransferTaskInfo()",
        "    {",
        "        //小系统英文名称",
        "        $rules \u003d [",
        "            //车辆主键",
        "            \u0027deptId\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027taskName\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027forwardType\u0027 \u003d\u003e \u0027required|in:0,1\u0027,",
        "            \u0027netAddress\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027netUserName\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027netPassWord\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027netPort\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027orgAliasEn\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        try {",
        "            DB::beginTransaction();",
        "            //任务名称需要校验重复",
        "            $taskCount \u003d DB::table(\"t_data_transfer_taskinfo\")",
        "                -\u003ewhere(\"taskName\", $this-\u003eparams[\u0027taskName\u0027])",
        "                -\u003ecount();",
        "",
        "            if ($taskCount \u003d\u003d 0) {",
        "                $taskInfo \u003d array();",
        "                $taskInfo[\u0027deptId\u0027] \u003d $this-\u003eparams[\u0027deptId\u0027];",
        "                $taskInfo[\u0027taskName\u0027] \u003d $this-\u003eparams[\u0027taskName\u0027];",
        "                $taskInfo[\u0027forwardType\u0027] \u003d $this-\u003eparams[\u0027forwardType\u0027];",
        "                //用户名、密码、地址、端口需要登录验证",
        "                $taskInfo[\u0027netAddress\u0027] \u003d $this-\u003eparams[\u0027netAddress\u0027];",
        "                $taskInfo[\u0027netUserName\u0027] \u003d $this-\u003eparams[\u0027netUserName\u0027];",
        "                $taskInfo[\u0027netPassWord\u0027] \u003d $this-\u003eparams[\u0027netPassWord\u0027];",
        "                $taskInfo[\u0027netPort\u0027] \u003d $this-\u003eparams[\u0027netPort\u0027];",
        "                $taskInfo[\u0027createTime\u0027] \u003d date(\u0027Y-m-d h:i:s\u0027, time());",
        "                //0正常 1异常",
        "                $taskInfo[\u0027state\u0027] \u003d 0;",
        "                $taskId \u003d DB::table(\"t_data_transfer_taskinfo\")-\u003einsertGetId($taskInfo);",
        "                if (!empty($taskId)) {",
        "                    $taskDetailCount \u003d 0;",
        "                    //新增量",
        "                    $taskInfoArray \u003d json_decode($this-\u003eparams[\u0027orgAliasEn\u0027]);",
        "                    foreach ($taskInfoArray as $k \u003d\u003e $v) {",
        "                        $taskDetail \u003d array(\u0027taskId\u0027 \u003d\u003e $taskId);",
        "                        $taskDetail[\u0027orgEn\u0027] \u003d $v-\u003e{\u0027orgEn\u0027};",
        "                        $taskDetail[\u0027aliasEn\u0027] \u003d $v-\u003e{\u0027aliasEn\u0027};",
        "",
        "                        $taskDetailBeCount \u003d DB::table(\"t_data_transfer_task_detail\")",
        "                            -\u003ewhere(\u0027taskId\u0027, $taskId)",
        "                            -\u003ewhere(\u0027orgEn\u0027, $taskDetail[\u0027orgEn\u0027])",
        "                            -\u003ewhere(\u0027aliasEn\u0027, $taskDetail[\u0027aliasEn\u0027])",
        "                            -\u003ecount();",
        "                        if ($taskDetailBeCount \u003d\u003d 0) {",
        "                            $taskDetailId \u003d DB::table(\"t_data_transfer_task_detail\")-\u003einsertGetId($taskDetail);",
        "                            if (!empty($taskDetailId)) {",
        "                                $taskDetailCount++;",
        "                            }",
        "                        }",
        "                    }",
        "                    if ($taskDetailCount \u003e 0) {",
        "                        DB::commit();",
        "                        \\Log::info(\"新增任务配置详情\" . $taskDetailCount . \"条\");",
        "                        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, [\u0027msg\u0027 \u003d\u003e \u0027任务配置新增成功\u0027]);",
        "                    } else {",
        "                        throw  new  \\Exception(\u0027任务详情新增失败。\u0027);",
        "                    }",
        "                } else {",
        "                    throw  new  \\Exception(\u0027任务配置新增失败。\u0027);",
        "                }",
        "            } else {",
        "                throw  new  \\Exception(\u0027任务名称重复。\u0027);",
        "            }",
        "        } catch (\\Exception $e) {",
        "            $ret \u003d $this-\u003esetJsonResponse(0, [\u0027msg\u0027 \u003d\u003e $e-\u003egetMessage()]);",
        "            DB::rollBack();",
        "        }",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     * @Description 获取任务配置详情",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/3/16 17:59",
        "     */",
        "    public function getDataTransferTaskInfoByProKey()",
        "    {",
        "        $rules \u003d [",
        "            \u0027taskId\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $taskId \u003d $this-\u003eparams[\u0027taskId\u0027];",
        "",
        "        //基础信息",
        "        $taskInfo \u003d DB::table(\"t_data_transfer_taskinfo\")",
        "            -\u003ewhere(\"id\", $taskId)",
        "            -\u003eget();",
        "",
        "        //选中值",
        "        $taskDetailAft \u003d array(\"analog\" \u003d\u003e array(), \"state\" \u003d\u003e array(), \"alarm\" \u003d\u003e array());",
        "        if (sizeof($taskInfo) \u003e 0) {",
        "            $taskDetailInfo \u003d DB::table(\"t_data_transfer_task_detail\")",
        "                -\u003ewhere(\"taskId\", $taskId)",
        "                -\u003eget();",
        "",
        "            foreach ($taskDetailInfo as $detail) {",
        "                $selectInfo \u003d array();",
        "                //循环查询",
        "                $monitorInfo \u003d DB::table(\"t_vehicle_monitor_info\")",
        "                    -\u003eselect(\"type\", \"ename\", \"cname\")",
        "                    -\u003ewhere(\"key\", $detail-\u003e{\u0027orgEn\u0027})",
        "                    -\u003eget();",
        "",
        "                if (sizeof($monitorInfo) \u003e 0) {",
        "                    $selectInfo[\u0027type\u0027] \u003d $monitorInfo[0]-\u003e{\u0027type\u0027};",
        "                    $selectInfo[\u0027orgCn\u0027] \u003d $monitorInfo[0]-\u003e{\u0027cname\u0027};",
        "                    $selectInfo[\u0027aliasEn\u0027] \u003d $detail-\u003e{\u0027aliasEn\u0027};",
        "                    $selectInfo[\u0027orgEn\u0027] \u003d $detail-\u003e{\u0027orgEn\u0027};",
        "                } else {",
        "                    $selectInfo[\u0027type\u0027] \u003d \u0027\u0027;",
        "                    $selectInfo[\u0027orgCn\u0027] \u003d \u0027\u0027;",
        "                    $selectInfo[\u0027aliasEn\u0027] \u003d $detail-\u003e{\u0027aliasEn\u0027};",
        "                    $selectInfo[\u0027orgEn\u0027] \u003d $detail-\u003e{\u0027orgEn\u0027};",
        "                }",
        "",
        "                $taskDetailAft[$selectInfo[\u0027type\u0027]][$selectInfo[\u0027orgEn\u0027]] \u003d $selectInfo;",
        "            }",
        "        }",
        "        return $this-\u003esetJsonResponse(1, [\u0027baseInfo\u0027 \u003d\u003e $taskInfo, \"vaInfo\" \u003d\u003e $taskDetailAft]);",
        "    }",
        "",
        "    /**",
        "     * @Description 修改任务配置",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/3/16 17:59",
        "     */",
        "    public function updateDataTransferTaskInfoByProKey()",
        "    {",
        "        // TODO",
        "    }",
        "",
        "    /**",
        "     * @Description 结束任务配置",
        "     * @Param",
        "     * @Return",
        "     * @Author zhangzhufu",
        "     * @Date 2019/3/16 17:59",
        "     */",
        "    public function overDataTransferTaskInfoByProKey()",
        "    {",
        "        $rules \u003d [",
        "            \u0027taskId\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $taskId \u003d $this-\u003eparams[\u0027taskId\u0027];",
        "        try {",
        "            DB::beginTransaction();",
        "            DB::table(\"t_data_transfer_taskinfo\")",
        "                -\u003ewhere(\"id\", $taskId)",
        "                -\u003edelete();",
        "            DB::table(\"t_data_transfer_task_detail\")",
        "                -\u003ewhere(\"taskId\", $taskId)",
        "                -\u003edelete();",
        "            DB::commit();",
        "            $ret \u003d $this-\u003esetJsonResponse(SUCCESS, [\u0027msg\u0027 \u003d\u003e \"操作成功\"]);",
        "        } catch (\\Exception $e) {",
        "            DB::rollBack();",
        "            $ret \u003d $this-\u003esetJsonResponse(0, [\u0027msg\u0027 \u003d\u003e $e-\u003egetMessage()]);",
        "        }",
        "        return $ret;",
        "    }",
        "",
        "    function wgs84togcj02($lng, $lat)",
        "    {",
        "        $ee \u003d 0.00669342162296594323;",
        "        $a \u003d 6378245.0;",
        "        $lat \u003d +$lat;",
        "        $lng \u003d +$lng;",
        "        if ($this-\u003eout_of_china($lng, $lat)) {",
        "            return [$lng, $lat];",
        "        } else {",
        "            $dlat \u003d $this-\u003etransformlat($lng - 105.0, $lat - 35.0);",
        "            $dlng \u003d $this-\u003etransformlng($lng - 105.0, $lat - 35.0);",
        "            $radlat \u003d $lat / 180.0 * M_PI;",
        "            $magic \u003d sin($radlat);",
        "            $magic \u003d 1 - $ee * $magic * $magic;",
        "            $sqrtmagic \u003d sqrt($magic);",
        "            $dlat \u003d ($dlat * 180.0) / (($a * (1 - $ee)) / ($magic * $sqrtmagic) * M_PI);",
        "            $dlng \u003d ($dlng * 180.0) / ($a / $sqrtmagic * cos($radlat) * M_PI);",
        "            $mglat \u003d $lat + $dlat;",
        "            $mglng \u003d $lng + $dlng;",
        "            return [$mglng, $mglat];",
        "        }",
        "    }",
        "",
        "    function transformlat($lng, $lat)",
        "    {",
        "        $lat \u003d +$lat;",
        "        $lng \u003d +$lng;",
        "        $ret \u003d -100.0 + 2.0 * $lng + 3.0 * $lat + 0.2 * $lat * $lat + 0.1 * $lng * $lat + 0.2 * sqrt(abs($lng));",
        "        $ret +\u003d (20.0 * sin(6.0 * $lng * M_PI) + 20.0 * sin(2.0 * $lng * M_PI)) * 2.0 / 3.0;",
        "        $ret +\u003d (20.0 * sin($lat * M_PI) + 40.0 * sin($lat / 3.0 * M_PI)) * 2.0 / 3.0;",
        "        $ret +\u003d (160.0 * sin($lat / 12.0 * M_PI) + 320 * sin($lat * M_PI / 30.0)) * 2.0 / 3.0;",
        "        return $ret;",
        "    }",
        "",
        "    function transformlng($lng, $lat)",
        "    {",
        "        $lat \u003d +$lat;",
        "        $lng \u003d +$lng;",
        "        $ret \u003d 300.0 + $lng + 2.0 * $lat + 0.1 * $lng * $lng + 0.1 * $lng * $lat + 0.1 * sqrt(abs($lng));",
        "        $ret +\u003d (20.0 * sin(6.0 * $lng * M_PI) + 20.0 * sin(2.0 * $lng * M_PI)) * 2.0 / 3.0;",
        "        $ret +\u003d (20.0 * sin($lng * M_PI) + 40.0 * sin($lng / 3.0 * M_PI)) * 2.0 / 3.0;",
        "        $ret +\u003d (150.0 * sin($lng / 12.0 * M_PI) + 300.0 * sin($lng / 30.0 * M_PI)) * 2.0 / 3.0;",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     * 判断是否在国内，不在国内则不做偏移",
        "     */",
        "    function out_of_china($lng, $lat)",
        "    {",
        "        $lat \u003d +$lat;",
        "        $lng \u003d +$lng;",
        "        // 纬度3.86~53.55,经度73.66~135.05",
        "        return !($lng \u003e 73.66 \u0026\u0026 $lng \u003c 135.05 \u0026\u0026 $lat \u003e 3.86 \u0026\u0026 $lat \u003c 53.55);",
        "    }",
        "",
        "    /**post请求  java程序调用获取GPS位置",
        "     * @param $address",
        "     * @return bool|string",
        "     */",
        "    function getAddressReal($address)",
        "    {",
        "        $ch \u003d curl_init();",
        "        curl_setopt($ch, CURLOPT_URL, \"http://47.105.191.195:9000/test\");",
        "        curl_setopt($ch, CURLOPT_POSTFIELDS, \u0027gpsArr\u003d\u0027 . json_encode($address));",
        "        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);",
        "        curl_setopt($ch, CURLOPT_USERAGENT, \"jb51.net\u0027s CURL Example beta\");",
        "        $data \u003d curl_exec($ch);",
        "        curl_close($ch);",
        "        return $data;",
        "    }",
        "",
        "    function getAddress2($address)",
        "    {",
        "        $url \u003d \"http://restapi.amap.com/v3/geocode/regeo?output\u003djson\u0026location\u003d\" . $address . \"\u0026key\u003dfc4de958f647c503184635a85a563558\";",
        "        if ($result \u003d file_get_contents($url)) {",
        "            $result \u003d json_decode($result, true);",
        "            if (!empty($result[\u0027status\u0027]) \u0026\u0026 $result[\u0027status\u0027] \u003d\u003d 1) {",
        "                return $result[\u0027regeocode\u0027][\u0027formatted_address\u0027];",
        "",
        "            } else {",
        "                return false;",
        "            }",
        "        }",
        "    }",
        "",
        "    function getAddress($address)",
        "    {",
        "        $gps \u003d explode(\",\", $address);",
        "",
        "        $url \u003d \"http://172.31.234.170:7070/reverse.php?format\u003djson\u0026lat\u003d\" . $gps[1] . \"\u0026lon\u003d\" . $gps[0] . \"\u0026zoom\u003d18\";",
        "",
        "        if ($result \u003d file_get_contents($url)) {",
        "            $result \u003d json_decode($result, true);",
        "            if (isset($result[\"address\"][\"amenity\"])) {",
        "                return $result[\"address\"][\"amenity\"];",
        "            } else {",
        "                return $this-\u003egetAddress2($address);",
        "            }",
        "",
        "",
        "        }",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAlarmSummaryAll",
        "     * @name: 行车报警汇总数据获取",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: post",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: bigType,description:高级查询-故障类型",
        "     *parameter2: type,description:高级查询-报警类型",
        "     *parameter3: page,description:当前页",
        "     *parameter4: count,description:每页显示数据数量",
        "     *parameter5: startdate,description:高级查询-开始时间",
        "     *parameter6: enddate,description:高级查询-结束时间",
        "     *parameter7: findKeyEqual,description:数据类型（vehicleNo 车辆，lineName 线路）",
        "     *parameter8: findValEqual,description:数据名称（B1号线，车辆车牌号）",
        "     *parameter9: sortKey,description:排序字段",
        "     *parameter10: sortVal,description:排序类型（asc，desc)",
        "     *parameter11: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAlarmSummaryAll(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $id \u003d null;",
        "        $deptType \u003d null;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $deptType \u003d \"companyDeptId\";",
        "                break;",
        "            case 2:",
        "                $deptType \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $deptType \u003d \"groupDeptId\";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $deptType \u003d \"lineDeptId\";",
        "                break;",
        "        }",
        "        $rules \u003d [",
        "            \u0027findKeyEqual1\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027findValEqual1\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $typeArr \u003d [];",
        "        if (isset($this-\u003eparams[\u0027bigType\u0027]) \u0026\u0026 $this-\u003eparams[\u0027bigType\u0027] !\u003d null \u0026\u0026 $this-\u003eparams[\u0027bigType\u0027] !\u003d \u0027\u0027 \u0026\u0026 $this-\u003eparams[\u0027bigType\u0027] !\u003d \u0027all\u0027) {",
        "            $bigtType \u003d $this-\u003eparams[\u0027bigType\u0027];",
        "            $sql \u003d \"SELECT alarmtypename FROM `t_vehiclealarmtype` where type\u003d\u0027$bigtType\u0027",
        "                    union all",
        "                SELECT alarmtypename FROM `t_vehiclealarmtype2` where type\u003d\u0027$bigtType\u0027",
        "                    union ALL",
        "                SELECT alarmtypename FROM `t_vehiclealarmtype3` where type\u003d\u0027$bigtType\u0027\";",
        "            $result \u003d DB::select($sql);",
        "",
        "            foreach ($result as $val) {",
        "                $typeArr[] \u003d $val-\u003ealarmtypename;",
        "            }",
        "",
        "        }",
        "        if (isset($this-\u003eparams[\u0027timeType\u0027]) \u0026\u0026 $this-\u003eparams[\u0027timeType\u0027] \u003d\u003d -1 ||",
        "            (isset($this-\u003eparams[\u0027startdate\u0027]) \u0026\u0026 date(\"Y-m-d\") \u003d\u003d $this-\u003eparams[\u0027startdate\u0027] \u0026\u0026 $this-\u003eparams[\u0027startdate\u0027] \u003d\u003d $this-\u003eparams[\u0027enddate\u0027])) {",
        "            $select \u003d DB::table(\u0027api_breakdowns_day\u0027)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, \u0027api_breakdowns_day.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,",
        "                        v_vehicleinfo.vehicleNo,deviceId,",
        "                        case motorType when 1 then \\\u0027燃油车\\\u0027 when 2 then \\\u0027电车\\\u0027 when 3 then \\\u0027油电混合动力车\\\u0027 when 4 then \\\u0027燃气车\\\u0027 when 5 then \\\u0027气电混合动力车\\\u0027 end as motorType ,",
        "                           alarmtypename as alarmType,SUM(total) as total,date_format(NOW(),\\\u0027%Y-%c-%d %h:00:00\\\u0027 ) AS time\u0027)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003d\u0027, date(\"Y-m-d\"));",
        "",
        "            if (!is_null($deptType) \u0026\u0026 !is_null($id)) $select \u003d $select-\u003ewhere($deptType, \u0027\u003d\u0027, $id);",
        "            if (isset($this-\u003eparams[\u0027type\u0027]) \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d null \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027\u0027 \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027all\u0027) {",
        "                $select \u003d $select-\u003ewhere(\u0027alarmtypename\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027type\u0027]);",
        "            }",
        "            if ($typeArr !\u003d [] \u0026\u0026 count($typeArr) !\u003d 0) {",
        "                $select \u003d $select-\u003ewhereIn(\u0027api_breakdowns_day.alarmtypename\u0027, $typeArr);",
        "            }",
        "            $select \u003d $select-\u003egroupBy(\u0027v_vehicleinfo.vehicleId\u0027)-\u003egroupBy(\u0027api_breakdowns_day.alarmtypename\u0027);",
        "",
        "",
        "        } else {",
        "            $select \u003d DB::table(\u0027api_breakdowns\u0027)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, \u0027api_breakdowns.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,",
        "                        v_vehicleinfo.vehicleNo,deviceId,",
        "                        case motorType when 1 then \\\u0027燃油车\\\u0027 when 2 then \\\u0027电车\\\u0027 when 3 then \\\u0027油电混合动力车\\\u0027 when 4 then \\\u0027燃气车\\\u0027 when 5 then \\\u0027气电混合动力车\\\u0027 end as motorType ,",
        "                       alarmtypename as alarmType,SUM(total) as total,date_format(NOW(),\\\u0027%Y-%c-%d %h:00:00\\\u0027 ) AS time\u0027)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027]);",
        "",
        "            if (!is_null($deptType) \u0026\u0026 !is_null($id)) $select \u003d $select-\u003ewhere($deptType, \u0027\u003d\u0027, $id);",
        "            if (isset($this-\u003eparams[\u0027type\u0027]) \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d null \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027\u0027 \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027all\u0027) {",
        "                $select \u003d $select-\u003ewhere(\u0027alarmtypename\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027type\u0027]);",
        "            }",
        "            if ($typeArr !\u003d [] \u0026\u0026 count($typeArr) !\u003d 0) {",
        "",
        "                $select \u003d $select-\u003ewhereIn(\u0027api_breakdowns.alarmtypename\u0027, $typeArr);",
        "            }",
        "            $select \u003d $select-\u003egroupBy(\u0027v_vehicleinfo.vehicleId\u0027)-\u003egroupBy(\u0027api_breakdowns.alarmtypename\u0027);",
        "",
        "            if (isset($this-\u003eparams[\u0027timeType\u0027])) {",
        "                $startdate \u003d isset($this-\u003eparams[\u0027startdate\u0027]) ? $this-\u003eparams[\u0027startdate\u0027] : null;",
        "                $enddate \u003d isset($this-\u003eparams[\u0027enddate\u0027]) ? $this-\u003eparams[\u0027enddate\u0027] : null;",
        "                $time \u003d $this-\u003egetdataByTime($this-\u003eparams[\u0027timeType\u0027], $startdate, $enddate);",
        "                $select \u003d $select-\u003ewhere(\u0027stat_date\u0027, \u0027\u003e\u003d\u0027, $time[0])",
        "                    -\u003ewhere(\u0027stat_date\u0027, \u0027\u003c\u003d\u0027, $time[1]);",
        "            }",
        "        }",
        "",
        "        $ret \u003d $this-\u003efilterPagination($this-\u003eparams, $select);",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027v_vehicleinfo_alarmSumAll\u0027, $ret, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/getAllAlarmSummary",
        "     * @name: 故障统计详情",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param: \\Illuminate\\Http\\Request $request",
        "     *parameter1: findKeyEqual1,description:查询键",
        "     *parameter2: findValEqual1,description:查询值",
        "     *parameter3: page,description:页码",
        "     *parameter4: count,description:行数",
        "     *parameter5: summaryType,description:故障类型",
        "     *parameter6: timeType,description:时间类型，0\u003d昨天，-1\u003d今天，1\u003d近7天，2\u003d本月",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public function getAllAlarmSummary(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $rules \u003d [",
        "            \u0027summaryType\u0027 \u003d\u003e \u0027required|in:0,1\u0027,",
        "            \u0027findKeyEqual1\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027findValEqual1\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027timeType\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $startdate \u003d isset($this-\u003eparams[\u0027startdate\u0027]) ? $this-\u003eparams[\u0027startdate\u0027] : null;",
        "        $enddate \u003d isset($this-\u003eparams[\u0027enddate\u0027]) ? $this-\u003eparams[\u0027enddate\u0027] : null;",
        "        $time \u003d $this-\u003egetdataByTime($this-\u003eparams[\u0027timeType\u0027], $startdate, $enddate);",
        "",
        "        if ($this-\u003eparams[\u0027summaryType\u0027] \u003d\u003d 0) {",
        "            $select \u003d DB::table(\u0027api_breakdowns\u0027)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, \u0027api_breakdowns.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,",
        "                           alarmtypename as alarmType,SUM(total) as total\u0027)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003e\u003d\u0027, $time[0])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003c\u003d\u0027, $time[1])",
        "                -\u003egroupBy(\u0027api_breakdowns.alarmtypename\u0027)",
        "                -\u003eorderBy(\u0027total\u0027, \u0027desc\u0027);",
        "        }",
        "        if ($this-\u003eparams[\u0027summaryType\u0027] \u003d\u003d 1) {",
        "            $select \u003d DB::table(\u0027api_breakdowns\u0027)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, \u0027api_breakdowns.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,",
        "                 v_vehicleinfo.vehicleNo,deviceId, SUM(total) as total\u0027)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003e\u003d\u0027, $time[0])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003c\u003d\u0027, $time[1])",
        "                -\u003egroupBy(\u0027v_vehicleinfo.vehicleId\u0027)-\u003eorderBy(\u0027total\u0027, \u0027desc\u0027);",
        "        }",
        "        $ret \u003d $this-\u003efilterPagination($this-\u003eparams, $select);",
        "",
        "        $records \u003d $this-\u003eaddDeptHeader(\u0027v_vehicleinfo_alarmSumAll\u0027, $ret, $this-\u003eparams);//添加中英文表头",
        "",
        "        $ret \u003d $this-\u003esetJsonResponse(SUCCESS, $records);",
        "        return $ret;",
        "    }",
        "",
        "    /**",
        "     *API: api/statistic/exportAlarmSummaryAll",
        "     * @name: 导出全部报警信息",
        "     * @author:",
        "     * @edittime:",
        "     * @mode: get",
        "     *",
        "     * @param:",
        "     *parameter1: bigType,description:大系统类型",
        "     *parameter2: count,description:行数",
        "     *parameter3: findKeyEqual1,description:查询键",
        "     *parameter4: sortKey,description:排序键",
        "     *parameter5: sortVal,description:排序值",
        "     *parameter6: findValEqual1,description:查询值",
        "     *parameter7: type,description:类型",
        "     *parameter8: timeType,description:时间类型",
        "     *parameter9: page,description:页码",
        "     * @return: \\Illuminate\\Http\\JsonResponse|mixed",
        "     * @throws: \\App\\Exception\\ParamException",
        "     */",
        "    public",
        "    function exportAlarmSummaryAll(\\Illuminate\\Http\\Request $request)",
        "    {",
        "        $dept \u003d Mauth\\User::find(Auth::user()-\u003euser_id)",
        "            -\u003egetUserDept()-\u003efirst();",
        "        $id \u003d 1;",
        "        $deptType \u003d 1;",
        "        switch ($dept[\u0027level\u0027]) {",
        "            case 0:",
        "                break;",
        "            case 1:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $deptType \u003d \"companyDeptId\";",
        "                break;",
        "            case 2:",
        "                $deptType \u003d $dept[\u0027dept_id\u0027];",
        "                break;",
        "            case 3:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $deptType \u003d \"groupDeptId\";",
        "                break;",
        "            case 4:",
        "                $id \u003d $dept[\u0027dept_id\u0027];",
        "                $deptType \u003d \"lineDeptId\";",
        "                break;",
        "        }",
        "        $rules \u003d [",
        "            \u0027findKeyEqual1\u0027 \u003d\u003e \u0027required\u0027,",
        "            \u0027findValEqual1\u0027 \u003d\u003e \u0027required\u0027",
        "        ];",
        "        $this-\u003eapiParamVerify($rules);",
        "        $typeArr \u003d [];",
        "        if (isset($this-\u003eparams[\u0027bigType\u0027]) \u0026\u0026 $this-\u003eparams[\u0027bigType\u0027] !\u003d null \u0026\u0026 $this-\u003eparams[\u0027bigType\u0027] !\u003d \u0027\u0027 \u0026\u0026 $this-\u003eparams[\u0027bigType\u0027] !\u003d \u0027all\u0027) {",
        "            $bigtType \u003d $this-\u003eparams[\u0027bigType\u0027];",
        "            $sql \u003d \"SELECT alarmtypename FROM `t_vehiclealarmtype` where type\u003d\u0027$bigtType\u0027",
        "                    union all",
        "                SELECT alarmtypename FROM `t_vehiclealarmtype2` where type\u003d\u0027$bigtType\u0027",
        "                    union ALL",
        "                SELECT alarmtypename FROM `t_vehiclealarmtype3` where type\u003d\u0027$bigtType\u0027\";",
        "            $result \u003d DB::select($sql);",
        "",
        "            foreach ($result as $val) {",
        "                $typeArr[] \u003d $val-\u003ealarmtypename;",
        "            }",
        "",
        "        }",
        "        if (isset($this-\u003eparams[\u0027timeType\u0027]) \u0026\u0026 $this-\u003eparams[\u0027timeType\u0027] \u003d\u003d -1) {",
        "            $select \u003d DB::table(\u0027api_breakdowns_day\u0027)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, \u0027api_breakdowns_day.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,",
        "                        v_vehicleinfo.vehicleNo,deviceId,",
        "                        case motorType when 1 then \\\u0027燃油车\\\u0027 when 2 then \\\u0027电车\\\u0027 when 3 then \\\u0027油电混合动力车\\\u0027 when 4 then \\\u0027燃气车\\\u0027 when 5 then \\\u0027气电混合动力车\\\u0027 end as motorType ,",
        "                       alarmtypename as alarmType,SUM(total) as total\u0027)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])",
        "                -\u003ewhere(\u0027stat_date\u0027, \u0027\u003d\u0027, date(\"Y-m-d\"));",
        "            if (isset($this-\u003eparams[\u0027type\u0027]) \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d null \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027\u0027 \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027all\u0027) {",
        "                $select \u003d $select-\u003ewhere(\u0027alarmtypename\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027type\u0027]);",
        "            }",
        "",
        "            if ($typeArr !\u003d [] \u0026\u0026 count($typeArr) !\u003d 0) {",
        "                $select \u003d $select-\u003ewhereIn(\u0027api_breakdowns_day.alarmtypename\u0027, $typeArr);",
        "            }",
        "            $select \u003d $select",
        "                -\u003ewhere($deptType, \u0027\u003d\u0027, $id)",
        "                -\u003egroupBy(\u0027v_vehicleinfo.vehicleId\u0027)-\u003egroupBy(\u0027api_breakdowns_day.alarmtypename\u0027);",
        "        } else {",
        "            $tablename \u003d \"api_breakdowns\";",
        "            //判断查询条件是否为今天，若是，查询api_breakdowns_day表",
        "            if (isset($this-\u003eparams[\u0027startdate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027enddate\u0027]) \u0026\u0026 $this-\u003eparams[\u0027enddate\u0027] \u003d\u003d $this-\u003eparams[\u0027startdate\u0027] \u0026\u0026 $this-\u003eparams[\u0027startdate\u0027] \u003d\u003d date(\"Y-m-d\"))",
        "                $tablename \u003d \"api_breakdowns_day\";",
        "",
        "            $select \u003d DB::table($tablename)",
        "                -\u003ejoin(\u0027v_vehicleinfo\u0027, $tablename . \u0027.vehicleNo\u0027, \u0027\u003d\u0027, \u0027v_vehicleinfo.vehicleNo\u0027)",
        "                -\u003eselectRaw(\u0027 companyName,companyDeptId,subCompanyName,subCompanyDeptId,groupName,groupDeptId,lineName,lineDeptId,",
        "                        v_vehicleinfo.vehicleNo,deviceId,",
        "                        case motorType when 1 then \\\u0027燃油车\\\u0027 when 2 then \\\u0027电车\\\u0027 when 3 then \\\u0027油电混合动力车\\\u0027 when 4 then \\\u0027燃气车\\\u0027 when 5 then \\\u0027气电混合动力车\\\u0027 end as motorType ,",
        "                       alarmtypename as alarmType,SUM(total) as total\u0027)",
        "                -\u003ewhere(\u0027v_vehicleinfo.\u0027 . $this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027]);",
        "            if (isset($this-\u003eparams[\u0027type\u0027]) \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d null \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027\u0027 \u0026\u0026 $this-\u003eparams[\u0027type\u0027] !\u003d \u0027all\u0027) {",
        "                $select \u003d $select-\u003ewhere(\u0027alarmtypename\u0027, \u0027\u003d\u0027, $this-\u003eparams[\u0027type\u0027]);",
        "            }",
        "            if ($typeArr !\u003d [] \u0026\u0026 count($typeArr) !\u003d 0) {",
        "                $select \u003d $select-\u003ewhereIn($tablename . \u0027.alarmtypename\u0027, $typeArr);",
        "            }",
        "            $select \u003d $select",
        "                -\u003ewhere($deptType, \u0027\u003d\u0027, $id)",
        "                -\u003egroupBy(\u0027v_vehicleinfo.vehicleId\u0027)-\u003egroupBy($tablename . \u0027.alarmtypename\u0027);",
        "",
        "            if (isset($this-\u003eparams[\u0027timeType\u0027])) {",
        "                $startdate \u003d isset($this-\u003eparams[\u0027startdate\u0027]) ? $this-\u003eparams[\u0027startdate\u0027] : null;",
        "                $enddate \u003d isset($this-\u003eparams[\u0027enddate\u0027]) ? $this-\u003eparams[\u0027enddate\u0027] : null;",
        "                $time \u003d $this-\u003egetdataByTime($this-\u003eparams[\u0027timeType\u0027], $startdate, $enddate);",
        "",
        "                $select \u003d $select-\u003ewhere(\u0027stat_date\u0027, \u0027\u003e\u003d\u0027, $time[0])",
        "                    -\u003ewhere(\u0027stat_date\u0027, \u0027\u003c\u003d\u0027, $time[1]);",
        "            }",
        "        }",
        "",
        "",
        "        $data \u003d $this-\u003efilterPagination($this-\u003eparams, $select);",
        "",
        "        \\Log::info(\"导出监控故障汇总列表\");",
        "        $I18N \u003d isset($data[\u0027I18N\u0027]) ? $data[\u0027I18N\u0027] : 0;",
        "",
        "",
        "        $records \u003d $this-\u003eaddExcelHead(\u0027v_vehicleinfo_alarmSumAll\u0027, $I18N, $data);//excel表格导出",
        "        if ($records \u003d\u003d []) {",
        "            $records[] \u003d [\"总公司\" \u003d\u003e null,",
        "                \u0027分公司\u0027 \u003d\u003e null,",
        "                \u0027车队\u0027 \u003d\u003e null,",
        "                \u0027线路\u0027 \u003d\u003e null,",
        "                \u0027车牌号\u0027 \u003d\u003e null,",
        "                \u0027车型\u0027 \u003d\u003e null,",
        "                \u0027报警类型\u0027 \u003d\u003e null,",
        "                \u0027报警次数\u0027 \u003d\u003e null];",
        "        }",
        "",
        "        $cnt \u003d 15;",
        "        if (!empty($records)) {",
        "            $cnt \u003d count($records[0]);",
        "        }",
        "        $location \u003d \u0027A\u0027;",
        "        for ($i \u003d 0; $i \u003c $cnt - 1; $i++) {",
        "            $location++;",
        "        }",
        "        $datatype \u003d isset($this-\u003eparams[\u0027timeType\u0027]) ? $this-\u003eparams[\u0027timeType\u0027] : 6;",
        "",
        "        if (!isset($records[0][\u0027总公司\u0027])) {",
        "            $recordsCompanyName \u003d DB::table(\u0027v_vehicleinfo_all\u0027)-\u003ewhere($this-\u003eparams[\u0027findKeyEqual1\u0027], \u0027\u003d\u0027, $this-\u003eparams[\u0027findValEqual1\u0027])-\u003eselect(\u0027companyName\u0027)-\u003efirst();",
        "            $temp[0][\u0027总公司\u0027] \u003d $recordsCompanyName-\u003ecompanyName;",
        "            $title \u003d $temp[0][\u0027总公司\u0027] . \"---\";",
        "        } else {",
        "            $title \u003d $records[0][\u0027总公司\u0027] . \"---\";",
        "        }",
        "        switch (intval($datatype)) {",
        "            case -1: //last day",
        "                $title .\u003d \u0027今日监控故障汇总报表\u0027 . \"---\" . date(\"Y-m-d\");",
        "                break;",
        "            case 0: //last day",
        "                $title .\u003d \u0027昨日监控故障汇总报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 1:  // 7day",
        "                $title .\u003d \u0027近七天监控故障汇总报表\u0027 . \"---\" . date(\"Y-m-d\", strtotime(\"-7 day\")) . \"至\" . date(\"Y-m-d\", strtotime(\"-1 day\"));",
        "                break;",
        "            case 2:  // this month",
        "                $title .\u003d \u0027本月监控故障汇总报表\u0027 . \"---\" . date(\"Y-m\");",
        "                break;",
        "            case 3:  // last month",
        "                $title .\u003d \u0027上月监控故障汇总报表\u0027 . \"---\" . date(\"Y-m-1\", strtotime(\"-1 month\")) . \"至\" . date(\"Y-m-1\");",
        "                break;",
        "            case 4: // this year",
        "                $title .\u003d \u0027今年监控故障汇总报表\u0027 . \"---\" . date(\"Y\");",
        "",
        "                break;",
        "            case 5: // last year",
        "                $title .\u003d \u0027去年监控故障汇总报表\u0027 . \"---\" . date(\"Y\", strtotime(\"-1 year\"));",
        "                break;",
        "            case 6: // last year",
        "                if (isset($this-\u003eparams[\u0027startdate\u0027]) \u0026\u0026 isset($this-\u003eparams[\u0027enddate\u0027])) {",
        "                    $title .\u003d \"监控故障汇总报表---\" . $this-\u003eparams[\u0027startdate\u0027] . \"至\" . $this-\u003eparams[\u0027enddate\u0027];",
        "                }",
        "        }",
        "        $tmp \u003d explode(\u0027---\u0027, $title);",
        "",
        "        if (isset($this-\u003eparams[\u0027findVal\u0027])) {",
        "            $tmp[1] \u003d $this-\u003eparams[\u0027findVal\u0027] . \u0027明细报表\u0027;",
        "            $title \u003d implode(\u0027---\u0027, $tmp);",
        "        }",
        "        Excel::create($this-\u003egetDeptName($I18N) . time(), function ($excel) use ($records, $location, $title) {",
        "",
        "            $excel-\u003esheet(\u0027sheet0\u0027, function ($sheet) use ($records, $location, $title) {",
        "                //  $sheet-\u003esetAutoSize(true);",
        "                $sheet-\u003esetAutoSize(false);",
        "                //  $sheet-\u003egetColumnDimension() -\u003e setAutoSize(false);",
        "                $sheet-\u003emergeCells(\"A1:$location\" . \u00271\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A2:$location\" . \u00272\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                $sheet-\u003emergeCells(\"A3:$location\" . \u00273\u0027, [\u0027horizontal\u0027 \u003d\u003e \u0027right\u0027]);",
        "                $style_array \u003d array(",
        "                    \u0027borders\u0027 \u003d\u003e array(",
        "                        \u0027allborders\u0027 \u003d\u003e array(",
        "                            \u0027style\u0027 \u003d\u003e \\PHPExcel_Style_Border::BORDER_THIN",
        "                        )",
        "                    ));",
        "                $sheet-\u003egetStyle(\"A4:$location\" . (count($records) + 4))-\u003eapplyFromArray($style_array);",
        "                $titleArry \u003d explode(\u0027---\u0027, $title);",
        "                $userName \u003d Auth::user()-\u003ereal_name;",
        "",
        "                $first \u003d (new Carbon())-\u003enow()-\u003etoDateTimeString();",
        "                //合并第一行",
        "",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[0], \u0027A\u0027, 1);",
        "                $sheet-\u003ecells(\"A1:$location\" . \u00271\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(15);",
        "",
        "                });",
        "                $sheet-\u003egetStyle(\"A1\")-\u003egetFont()-\u003esetBold(true);",
        "                $sheet-\u003esetValueOfCell(\"\" . $titleArry[1], \u0027A\u0027, 2);",
        "                $sheet-\u003ecells(\"A2:$location\" . \u00272\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027center\u0027);",
        "                    $cells-\u003esetFontSize(13);",
        "                });",
        "",
        "                $sheet-\u003esetValueOfCell(\"查询时间范围：$titleArry[2]\", \u0027A\u0027, 3);",
        "                $sheet-\u003ecells(\"A3:$location\" . \u00273\u0027, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetStyle(\u0027A1:H3\u0027)-\u003egetAlignment()-\u003esetWrapText(true);",
        "",
        "",
        "                //第三行开始填充数据",
        "                $recordsNum \u003d count($records) + 5;",
        "                $sheet-\u003efromArray($records, null, \u0027A4\u0027);",
        "                //$sheet-\u003esetAutoSize(true);",
        "",
        "                $sheet-\u003emergeCells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, [\u0027horizontal\u0027 \u003d\u003e \u0027bottom\u0027]);",
        "                //设置第二行值",
        "                $sheet-\u003esetValueOfCell(\"制表人:$userName    时间：$first\", \u0027A\u0027, $recordsNum);",
        "                $sheet-\u003ecells(\"A\" . $recordsNum . \u0027:\u0027 . $location . $recordsNum, function ($cells) {",
        "                    $cells-\u003esetAlignment(\u0027right\u0027);",
        "                    $cells-\u003esetFontSize(12);",
        "                });",
        "                $sheet-\u003egetDefaultColumnDimension(\u0027F\u0027)-\u003esetWidth(18);",
        "                $sheet-\u003egetAutosize();",
        "",
        "",
        "            });",
        "        })-\u003eexport(\u0027xlsx\u0027);",
        "    }",
        "",
        "",
        "}",
        "",
        "",
        "",
        ""
      ]
    }
  ]
}
